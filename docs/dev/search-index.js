var searchIndex = JSON.parse('{\
"libsm64_layout":{"doc":"A standalone executable for parsing a libsm64 DLL and …","t":[5],"n":["main"],"q":["libsm64_layout"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"libsm64_lock":{"doc":"A standalone executable for locking/unlocking a libsm64 …","t":[5],"n":["main"],"q":["libsm64_lock"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"wafel":{"doc":"Python bindings for wafel_api.","tn":["Address","Game","Input","M64Metadata","ObjectHitbox","PyInit_wafel","SaveState","Surface","WafelError","__hash__","__hash__","__repr__","__repr__","__repr__","__repr__","__repr__","__repr__","__richcmp__","__richcmp__","__str__","__str__","__str__","__str__","__str__","__str__","add_rerecords","address","address_to_symbol","advance","advance_n","arguments","arguments","arguments","arguments","arguments","arguments","arguments","as_ptr","as_ref","author","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","clone","clone","clone_into","clone_into","constant","copy","country_code","crc_code","data_type","deref","description","eq","eq","eq","equivalent","equivalent","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","frame","frame_log","from","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_hash","get_hash","hash","hash","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","load_m64","load_state","mario_action_names","ne","ne","new","new","new_err","object_hitboxes","open","read","read_string_at","rerecords","rerecords","save_m64","save_state","set_author","set_buttons","set_country_code","set_crc_code","set_description","set_rerecords","set_stick_x","set_stick_y","set_version","source","stick_x","stick_y","surfaces","to_object","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wafel","with_version","write"],"q":["wafeld":["","","","","","This autogenerated function is called by the python …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the underlying FFI pointer, returns a borrowed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,1,2,5,6,1,2,3,4,1,2,5,6,4,3,3,3,3,3,7,4,1,2,5,6,8,8,4,3,7,4,1,8,2,5,6,3,7,4,1,8,2,5,6,1,1,2,1,2,3,1,4,4,3,8,4,1,8,2,1,2,1,8,2,3,7,4,1,8,8,2,5,6,3,7,4,1,2,5,6,3,3,3,7,4,1,8,2,5,6,8,8,3,7,4,1,2,5,6,1,2,1,2,3,7,4,1,8,2,5,6,3,7,4,1,8,2,5,6,0,3,3,1,2,4,1,8,3,3,3,3,3,4,0,3,4,1,4,4,4,4,1,1,4,8,1,1,3,8,1,2,8,3,7,4,1,8,8,2,5,6,8,8,3,7,4,1,8,2,5,6,3,7,4,1,8,2,5,6,3,7,4,1,8,2,5,6,3,7,4,1,8,2,5,6,4,3,7,4,1,8,2,5,6,0,4,3],"f":[null,null,null,null,null,[[],["pyobject",0]],null,null,null,[[["input",3]]],[[["address",3]]],[[["game",3]]],[[["m64metadata",3]]],[[["input",3]]],[[["address",3]]],[[["surface",3]]],[[["objecthitbox",3]]],[[["input",3],["compareop",4]]],[[["address",3],["compareop",4]]],[[["game",3]]],[[["m64metadata",3]]],[[["input",3]]],[[["address",3]]],[[["surface",3]]],[[["objecthitbox",3]]],[[["m64metadata",3],["u32",0]]],[[["game",3],["str",0]],["pyresult",6,[["option",4,[["address",3]]]]]],[[["game",3],["address",3]],["option",4,[["string",3]]]],[[["game",3]]],[[["game",3],["u32",0]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["wafelerror",3]],["pyobject",0]],[[["wafelerror",3]],["pyany",3]],[[["m64metadata",3]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["input",3]],["u16",0]],[[["input",3]],["input",3]],[[["address",3]],["address",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["game",3],["python",3],["str",0]],["pyresult",6,[["pyobject",6]]]],[[["input",3]],["input",3]],[[["m64metadata",3]],["u8",0]],[[["m64metadata",3]],["u32",0]],[[["game",3],["str",0]],["pyresult",6,[["string",3]]]],[[["wafelerror",3]],["pyany",3]],[[["m64metadata",3]],["str",0]],[[["input",3],["input",3]],["bool",0]],[[["wafelerror",3],["wafelerror",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["pyresult",6,[["wafelerror",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["game",3],["formatter",3]],["result",6]],[[["savestate",3],["formatter",3]],["result",6]],[[["m64metadata",3],["formatter",3]],["result",6]],[[["input",3],["formatter",3]],["result",6]],[[["wafelerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["wafelerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["address",3],["formatter",3]],["result",6]],[[["surface",3],["formatter",3]],["result",6]],[[["objecthitbox",3],["formatter",3]],["result",6]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["game",3]],["u32",0]],[[["game",3],["python",3]],["pyresult",6,[["vec",3,[["hashmap",3,[["string",3],["pyobject",6]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3],["pyobject",0]],["option",4]],[[["python",3],["pyobject",0]],["option",4]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["input",3],["",0]]],[[["address",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["game",3],["python",3]],["pyobject",6]],[[["savestate",3],["python",3]],["pyobject",6]],[[["m64metadata",3],["python",3]],["pyobject",6]],[[["input",3],["python",3]],["pyobject",6]],[[["wafelerror",3],["python",3]],["py",3,[["wafelerror",3]]]],[[["address",3],["python",3]],["pyobject",6]],[[["surface",3],["python",3]],["pyobject",6]],[[["objecthitbox",3],["python",3]],["pyobject",6]],[[["str",0]],["pyresult",6]],[[["game",3],["savestate",3]],["pyresult",6]],[[["game",3]],["hashmap",3,[["u32",0],["string",3]]]],[[["input",3],["input",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["u32",0],["u8",0]],["m64metadata",3]],[[["u16",0],["u8",0],["u8",0]],["input",3]],[[],["pyerr",3]],[[["game",3]],["pyresult",6,[["vec",3,[["objecthitbox",3]]]]]],[[["str",0]],["pyresult",6,[["game",3]]]],[[["game",3],["python",3],["str",0]],["pyresult",6,[["pyobject",6]]]],[[["game",3],["address",3]],["pyresult",6,[["vec",3,[["u8",0]]]]]],[[["game",3]],["u32",0]],[[["m64metadata",3]],["u32",0]],[[["str",0],["m64metadata",3],["vec",3,[["input",3]]]],["pyresult",6]],[[["game",3]],["savestate",3]],[[["m64metadata",3],["str",0]],["pyresult",6]],[[["input",3],["u16",0]]],[[["m64metadata",3],["u8",0]]],[[["m64metadata",3],["u32",0]]],[[["m64metadata",3],["str",0]],["pyresult",6]],[[["m64metadata",3],["u32",0]]],[[["input",3],["u8",0]]],[[["input",3],["u8",0]]],[[["m64metadata",3],["str",0]],["pyresult",6]],[[["wafelerror",3]],["option",4,[["error",8]]]],[[["input",3]],["u8",0]],[[["input",3]],["u8",0]],[[["game",3]],["pyresult",6,[["vec",3,[["surface",3]]]]]],[[["wafelerror",3],["python",3]],["pyobject",6]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["m64metadata",3]],["option",4,[["string",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3],["pymodule",3]],["pyresult",6]],[[["str",0]],["pyresult",6,[["m64metadata",3]]]],[[["game",3],["python",3],["str",0],["pyobject",6]],["pyresult",6]]],"p":[[3,"Input"],[3,"Address"],[3,"Game"],[3,"M64Metadata"],[3,"Surface"],[3,"ObjectHitbox"],[3,"SaveState"],[3,"WafelError"]]},\
"wafel_api":{"doc":"The main SM64 API for Wafel.","t":[12,3,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,13,4,6,3,3,13,13,4,6,13,13,13,13,13,13,13,13,13,3,13,13,13,13,3,13,13,13,13,13,13,13,4,3,13,13,13,13,3,3,13,13,13,13,13,13,13,13,4,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","Address","Address","ApplyEditError","Array","Array","DataPathError","DataType","DllLayoutError","DllLoadError","EU","Error","F32","F64","FileReadError","FileWriteError","Float","Float","FloatType","FloatValue","Game","Input","Int","Int","IntType","IntValue","InvalidFrameLogEventType","InvalidM64Error","InvalidRom","JP","LayoutLookupError","Libsm64DecryptionError","Libsm64EncryptionError","M64AuthorTooLong","M64DescriptionTooLong","M64Metadata","M64ReadError","M64WriteError","MemoryError","None","ObjectHitbox","Pointer","S16","S32","S64","S8","SH","SM64ExtrasError","SM64Version","SaveState","SaveStateMismatch","String","Struct","Struct","Surface","Timeline","U16","U32","U64","U8","US","Union","UnsizedObjectPoolArray","UnsizedSurfacePoolPointer","Value","ValueTypeError","ValueTypeError","Void","actual","add","add_rerecords","address","address","address_to_symbol","address_to_symbol","advance","advance_n","as_address","as_array","as_array_with_len","as_f32","as_f32_3","as_float","as_float_lenient","as_i16_3","as_int","as_int_lenient","as_none","as_struct","as_usize","author","balance_distribution","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constant","constant","country_code","crc_code","data_type","data_type","dbg_cached_frames","dbg_data_cache_size","delete_frame","delete_hotspot","description","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frame","frame_log","frame_log","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hitbox_height","hitbox_radius","insert_frame","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_array","is_float","is_int","is_none","is_null","is_pointer","is_struct","is_union","is_void","load_m64","load_state","lock_libsm64","mario_action_names","mario_action_names","ne","ne","ne","ne","new","new","new","normal","object_hitboxes","object_hitboxes","pos","read","read","read_string_at","read_string_at","rerecords","rerecords","reset","reset_all","save_m64","save_state","serialize","serialize","serialize","set_author","set_country_code","set_crc_code","set_description","set_hotspot","set_rerecords","set_version","size","size","stick_x","stick_y","surfaces","surfaces","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_address","try_address","try_as_address","try_as_array","try_as_array_with_len","try_as_f32","try_as_f32_3","try_as_float","try_as_float_lenient","try_as_i16_3","try_as_int","try_as_int_lenient","try_as_none","try_as_struct","try_as_usize","try_constant","try_constant","try_data_type","try_data_type","try_frame_log","try_frame_log","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load_m64","try_load_state","try_lock_libsm64","try_new","try_new","try_object_hitboxes","try_object_hitboxes","try_read","try_read","try_read_string_at","try_read_string_at","try_reset","try_save_m64","try_set_author","try_set_description","try_surfaces","try_surfaces","try_unlock_libsm64","try_write","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock_libsm64","version","vertices","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_version","write","write","0","0","0","0","0","0","0","0","0","0","error","error","error","error","error","filename","filename","filename","filename","filename","path","value","0","0","0","0","0","0"],"q":["wafel_apiwafel_api::DataType","","wafel_api::Error","","","","","","","","","","","","","","","","","","","","wafel_api::Value","","","","",""],"d":["","A raw pointer value that can be stored in memory.","An address value.","","An array type.","An array value.","","A simplified description of a variable’s data type.","","","PAL version.","","32 bit float","64 bit float","","","A float type.","A float value, regardless of the underlying <code>FloatType</code> size.","Float types of different sizes.","An integer value.","An SM64 API that uses a traditional frame advance / save …","A set of inputs for a given frame.","An integer type.","An integer value, regardless of the underlying <code>IntType</code> …","Integer types of different sizes and signedness.","An integer value.","","","","The original Japanese release.","","","","","","Metadata for a .m64 TAS.","","","","Represents the lack of a value.","Hitbox information for an SM64 object.","A pointer type.","16 bit signed int","32 bit signed int","64 bit signed int","8 bit signed int","Shindou version.","","SM64 game versions.","A save state used by Game.","","A string value.","A struct type.","A struct value.","An SM64 surface (currently missing several fields).","An SM64 API that allows reads and writes to arbitrary …","16 bit unsigned int","32 bit unsigned int","64 bit unsigned int","8 bit unsigned int","US version.","A union type.","","","A dynamically typed value.","","","Void, typically used as a pointer target or function …","","","Add a number of rerecords, saturating on overflow.","Find the address of a path.","Find the address of a path on the given frame.","Return the name of the global variable at the given …","Return the name of the global variable at the given …","Advance a single frame.","Advance multiple frames.","Convert the value to an address, panicking on failure.","Convert the value to an array and return its elements, …","Convert the value to an array and return its elements, …","Convert the value to a float, and then truncate to an f32, …","Convert the value to an array of three f32s, panicking on …","Convert the value to a float, panicking if the value is …","Convert the value to a usize, allowing in-range integers.","Convert the value to an array of three i16s, panicking on …","Convert the value to an int, panicking if it is not an int.","Convert the value to an int, allowing in-range floats that …","Panics if the value is not <code>Value::None</code>.","Convert the value to a struct and return its fields, …","Convert the value to a usize, panicking on failure.","Get the author field.","Perform housekeeping to improve scrolling near hotspots.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The standard button bit flags.","","","","","","","","","","","","","","","","","","","","","","","","","Return the value of the macro constant or enum variant …","Return the value of the macro constant or enum variant …","Get the country code.","Get the CRC code.","Return a simplified description of the type of the given …","Return a simplified description of the type of the given …","Return a list of the frames that are currently loaded by …","Return the size of the data cache in bytes.","Delete edits at the given frame, shifting all later edits …","Delete a hotspot with the given name, if it exists.","Get the description field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the frame of the current game state.","Return the frame that the save state was taken on.","Read the Wafel frame log for the previous frame advance.","Read the Wafel frame log for the previous frame advance.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","The object’s hitbox height (hitboxHeight).","The object’s hitbox radius (hitboxRadius).","Shift all edits to the right, starting at the given frame.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the data type is an array type.","Return true if the data type is a float type.","Return true if the data type is an integer type.","Return true if the value is <code>Value::None</code>.","Returns true if the address is null (equal to zero).","Return true if the data type is a pointer type.","Return true if the data type is a struct type.","Return true if the data type is a union type.","Return true if the data type is void.","Load an m64 TAS from a file.","Load a save state.","Lock a libsm64 DLL so that it requires a ROM to open.","Return a mapping from Mario action values to their name …","Return a mapping from Mario action values to their name …","","","","","Load a libsm64 DLL.","Create a new metadata object with the given CRC and …","Load a libsm64 DLL.","The surface’s normal vector.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","The object’s position (oPosX, oPosY, oPosZ).","Read a value from memory.","Read a value from memory on the given frame.","Read a null terminated string from memory at the given …","Read a null terminated string from memory on the given …","Return the number of times that a save state has been …","Get the number of rerecords.","Clear all previous calls to write with the given <code>frame</code> and …","Clear all previous calls to write.","Save an m64 TAS to a file.","Create a save state using the current game state.","","","","Set the author field (max 222 bytes).","Set the country code.","Set the CRC code.","Set the description field (max 256 bytes).","Set a hotspot with a given name.","Set the number of rerecords.","Set the CRC and country code to match the given SM64 …","The size of the int in bytes.","The size of the float in bytes.","The joystick x coordinate.","The joystick y coordinate.","Read the currently loaded surfaces.","Read the currently loaded surfaces.","","","","","","","","","","","","","","","","","","","","","","","Find the address of a path.","Find the address of a path on the given frame.","Convert the value to an address.","Convert the value to an array and return its elements.","Convert the value to an array and return its elements.","Convert the value to a float and then truncate to an f32.","Convert the value to an array of three f32s.","Convert the value to a float.","Convert the value to a float, allowing in-range integers.","Convert the value to an array of three i16s.","Convert the value to an int.","Convert the value to an int, allowing in-range floats that …","Returns an error if the value is not <code>Value::None</code>.","Convert the value to a struct and return its fields.","Convert the value to a usize.","Return the value of the macro constant or enum variant …","Return the value of the macro constant or enum variant …","Return a simplified description of the type of the given …","Return a simplified description of the type of the given …","Read the Wafel frame log for the previous frame advance.","Read the Wafel frame log for the previous frame advance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load an m64 TAS from a file.","Load a save state.","Lock a libsm64 DLL so that it requires a ROM to open.","Load a libsm64 DLL.","Load a libsm64 DLL.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read a value from memory.","Read a value from memory on the given frame.","Read a null terminated string from memory at the given …","Read a null terminated string from memory on the given …","Clear all previous calls to write with the given <code>frame</code> and …","Save an m64 TAS to a file.","Set the author field (max 222 bytes).","Set the description field (max 256 bytes).","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Unlock a libsm64 DLL using a ROM.","Write a value to memory.","Write a value on the given frame.","","","","","","","","","","","","","","","","Unlock a libsm64 DLL using a ROM.","Return the SM64 version with matching CRC and country …","The surface’s vertex coordinates.","","","","","","","","","","","","","","","","Create a new metadata object using the CRC and country …","Write a value to memory.","Write a value on the given frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,3,4,2,3,0,3,3,5,0,6,6,3,3,4,2,0,0,0,0,4,2,0,0,3,3,3,5,3,3,3,3,3,0,3,3,3,2,0,4,7,7,7,7,5,3,0,0,3,2,4,2,0,0,7,7,7,7,5,4,3,3,0,0,3,4,8,1,9,10,11,10,11,10,10,2,2,2,2,2,2,2,2,2,2,2,2,2,9,11,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,13,7,4,3,6,5,9,13,14,15,8,1,2,7,4,3,6,5,9,13,14,15,8,1,2,10,11,9,9,10,11,11,11,11,11,9,7,6,1,7,4,6,5,13,1,2,7,4,6,5,13,1,8,7,7,4,4,3,3,6,6,10,12,5,5,9,9,13,13,14,15,11,8,8,1,1,2,2,10,12,10,11,7,4,3,3,3,3,3,3,3,3,6,10,12,5,9,13,14,15,11,8,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,4,6,5,13,1,7,4,6,5,13,1,14,14,11,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,4,4,4,2,1,4,4,4,4,0,10,0,10,11,4,13,1,2,10,9,11,15,10,11,14,10,11,10,11,10,9,11,11,0,10,7,6,1,9,9,9,9,11,9,9,7,6,13,13,10,11,7,4,3,6,5,9,13,14,15,8,1,2,7,4,3,6,5,9,13,8,1,2,10,11,2,2,2,2,2,2,2,2,2,2,2,2,2,10,11,10,11,10,11,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,0,10,0,10,11,10,11,10,11,10,11,11,0,9,9,10,11,0,10,11,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,0,9,15,7,4,3,6,10,12,5,9,13,14,15,11,8,1,2,9,10,11,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,27,31,28,29,30,26,26,32,33,34,35,36,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["address",3],["usize",0]]],[[["m64metadata",3],["u32",0]],["m64metadata",3]],[[["game",3],["str",0]],["option",4,[["address",3]]]],[[["timeline",3],["u32",0],["str",0]],["option",4,[["address",3]]]],[[["game",3],["address",3]],["option",4,[["string",3]]]],[[["timeline",3],["address",3]],["option",4,[["string",3]]]],[[["game",3]]],[[["game",3],["u32",0]]],[[["value",4]],["address",3]],[[["value",4]]],[[["value",4],["usize",0]]],[[["value",4]],["f32",0]],[[["value",4]]],[[["value",4]],["f64",0]],[[["value",4]],["f64",0]],[[["value",4]]],[[["value",4]],["i128",0]],[[["value",4]],["i128",0]],[[["value",4]]],[[["value",4]],["hashmap",3]],[[["value",4]],["usize",0]],[[["m64metadata",3]],["str",0]],[[["timeline",3],["fnull,[[["inttype",4]],["inttype",4]],[[["datatype",4]],["datatype",4]],[[["error",4]],["error",4]],[[["floattype",4]],["floattype",4]],[[["sm64version",4]],["sm64version",4]],[[["m64metadata",3]],["m64metadata",3]],[[["input",3]],["input",3]],[[["objecthitbox",3]],["objecthitbox",3]],[[["surface",3]],["surface",3]],[[["valuetypeerror",3]],["valuetypeerror",3]],[[["address",3]],["address",3]],[[["value",4]],["value",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["game",3],["str",0]],["value",4]],[[["timeline",3],["str",0]],["value",4]],[[["m64metadata",3]],["u8",0]],[[["m64metadata",3]],["u32",0]],[[["game",3],["str",0]],["datatype",4]],[[["timeline",3],["str",0]],["datatype",4]],[[["timeline",3]],["vec",3,[["u32",0]]]],[[["timeline",3]],["usize",0]],[[["timeline",3],["u32",0]]],[[["timeline",3],["str",0]]],[[["m64metadata",3]],["str",0]],[[],["result",4,[["inttype",4]]]],[[],["result",4,[["floattype",4]]]],[[],["result",4,[["address",3]]]],[[["inttype",4],["inttype",4]],["bool",0]],[[["datatype",4],["datatype",4]],["bool",0]],[[["floattype",4],["floattype",4]],["bool",0]],[[["sm64version",4],["sm64version",4]],["bool",0]],[[["input",3],["input",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["value",4],["value",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["inttype",4],["formatter",3]],["result",4,[["error",3]]]],[[["inttype",4],["formatter",3]],["result",4,[["error",3]]]],[[["datatype",4],["formatter",3]],["result",6]],[[["datatype",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["floattype",4],["formatter",3]],["result",4,[["error",3]]]],[[["floattype",4],["formatter",3]],["result",4,[["error",3]]]],[[["game",3],["formatter",3]],["result",6]],[[["savestate",3],["formatter",3]],["result",6]],[[["sm64version",4],["formatter",3]],["result",6]],[[["sm64version",4],["formatter",3]],["result",6]],[[["m64metadata",3],["formatter",3]],["result",6]],[[["m64metadata",3],["formatter",3]],["result",6]],[[["input",3],["formatter",3]],["result",6]],[[["input",3],["formatter",3]],["result",6]],[[["objecthitbox",3],["formatter",3]],["result",6]],[[["surface",3],["formatter",3]],["result",6]],[[["timeline",3],["formatter",3]],["result",6]],[[["valuetypeerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["valuetypeerror",3],["formatter",3]],["result",4,[["error",3]]]],[[["address",3],["formatter",3]],["result",4,[["error",3]]]],[[["address",3],["formatter",3]],["result",4,[["error",3]]]],[[["value",4],["formatter",3]],["result",4,[["error",3]]]],[[["value",4],["formatter",3]],["result",4,[["error",3]]]],[[["game",3]],["u32",0]],[[["savestate",3]],["u32",0]],[[["game",3]],["vec",3,[["hashmap",3,[["string",3],["value",4]]]]]],[[["timeline",3],["u32",0]],["vec",3,[["hashmap",3,[["string",3],["value",4]]]]]],[[]],[[]],[[["memoryerror",4]],["error",4]],[[["datapatherror",4]],["error",4]],[[["dlllayouterror",3]],["error",4]],[[["valuetypeerror",3]],["error",4]],[[]],[[["layoutlookuperror",4]],["error",4]],[[["sm64extraserror",4]],["error",4]],[[["dllloaderror",4]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["address",3]],["value",4]],[[["u16",0]],["value",4]],[[["usize",0]],["value",4]],[[["vec",3,[["global",3]]]],["value",4]],[[["isize",0]],["value",4]],[[["u64",0]],["value",4]],[[],["value",4]],[[["i128",0]],["value",4]],[[],["value",4]],[[],["value",4]],[[["hashmap",3,[["str",0],["randomstate",3]]]],["value",4]],[[["vec",3,[["global",3]]]],["value",4]],[[],["value",4]],[[["i8",0]],["value",4]],[[["u8",0]],["value",4]],[[],["value",4]],[[["i32",0]],["value",4]],[[["i64",0]],["value",4]],[[["f64",0]],["value",4]],[[["string",3]],["value",4]],[[],["value",4]],[[["vec",3,[["global",3]]]],["value",4]],[[["hashmap",3,[["string",3],["randomstate",3]]]],["value",4]],[[]],[[["f32",0]],["value",4]],[[],["value",4]],[[["u32",0]],["value",4]],[[["str",0]],["value",4]],[[["i16",0]],["value",4]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["inttype",4],["",0]]],[[["datatype",4],["",0]]],[[["floattype",4],["",0]]],[[["sm64version",4],["",0]]],[[["input",3],["",0]]],[[["address",3],["",0]]],null,null,[[["timeline",3],["u32",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["value",4]],["bool",0]],[[["address",3]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["str",0]]],[[["game",3],["savestate",3]]],[[["str",0],["str",0],["str",0]]],[[["game",3]],["hashmap",3,[["u32",0],["string",3]]]],[[["timeline",3]],["hashmap",3,[["u32",0],["string",3]]]],[[["datatype",4],["datatype",4]],["bool",0]],[[["input",3],["input",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["value",4],["value",4]],["bool",0]],[[["str",0]],["game",3]],[[["u32",0],["u8",0]],["m64metadata",3]],[[["str",0]],["timeline",3]],null,[[["game",3]],["vec",3,[["objecthitbox",3]]]],[[["timeline",3],["u32",0]],["vec",3,[["objecthitbox",3]]]],null,[[["game",3],["str",0]],["value",4]],[[["timeline",3],["u32",0],["str",0]],["value",4]],[[["game",3],["address",3]],["vec",3,[["u8",0]]]],[[["timeline",3],["u32",0],["address",3]],["vec",3,[["u8",0]]]],[[["game",3]],["u32",0]],[[["m64metadata",3]],["u32",0]],[[["timeline",3],["u32",0],["str",0]]],[[["timeline",3]]],[[["str",0],["m64metadata",3]]],[[["game",3]],["savestate",3]],[[["inttype",4]],["result",4]],[[["floattype",4]],["result",4]],[[["address",3]],["result",4]],[[["m64metadata",3],["str",0]],["m64metadata",3]],[[["m64metadata",3],["u8",0]],["m64metadata",3]],[[["m64metadata",3],["u32",0]],["m64metadata",3]],[[["m64metadata",3],["str",0]],["m64metadata",3]],[[["timeline",3],["str",0],["u32",0]]],[[["m64metadata",3],["u32",0]],["m64metadata",3]],[[["m64metadata",3],["sm64version",4]],["m64metadata",3]],[[["inttype",4]],["usize",0]],[[["floattype",4]],["usize",0]],null,null,[[["game",3]],["vec",3,[["surface",3]]]],[[["timeline",3],["u32",0]],["vec",3,[["surface",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["game",3],["str",0]],["result",4,[["option",4,[["address",3]]],["error",4]]]],[[["timeline",3],["u32",0],["str",0]],["result",4,[["option",4,[["address",3]]],["error",4]]]],[[["value",4]],["result",4,[["address",3],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4],["usize",0]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["f32",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["f64",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["f64",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["i128",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["i128",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["hashmap",3],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["usize",0],["valuetypeerror",3]]]],[[["game",3],["str",0]],["result",4,[["value",4],["error",4]]]],[[["timeline",3],["str",0]],["result",4,[["value",4],["error",4]]]],[[["game",3],["str",0]],["result",4,[["datatype",4],["error",4]]]],[[["timeline",3],["str",0]],["result",4,[["datatype",4],["error",4]]]],[[["game",3]],["result",4,[["vec",3,[["hashmap",3,[["string",3],["value",4]]]]],["error",4]]]],[[["timeline",3],["u32",0]],["result",4,[["vec",3,[["hashmap",3,[["string",3],["value",4]]]]],["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["error",4]]]],[[["game",3],["savestate",3]],["result",4,[["error",4]]]],[[["str",0],["str",0],["str",0]],["result",4,[["error",4]]]],[[["str",0]],["result",4,[["game",3],["error",4]]]],[[["str",0]],["result",4,[["timeline",3],["error",4]]]],[[["game",3]],["result",4,[["vec",3,[["objecthitbox",3]]],["error",4]]]],[[["timeline",3],["u32",0]],["result",4,[["vec",3,[["objecthitbox",3]]],["error",4]]]],[[["game",3],["str",0]],["result",4,[["value",4],["error",4]]]],[[["timeline",3],["u32",0],["str",0]],["result",4,[["value",4],["error",4]]]],[[["game",3],["address",3]],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[["timeline",3],["u32",0],["address",3]],["result",4,[["vec",3,[["u8",0]]],["error",4]]]],[[["timeline",3],["u32",0],["str",0]],["result",4,[["error",4]]]],[[["str",0],["m64metadata",3]],["result",4,[["error",4]]]],[[["m64metadata",3],["str",0]],["result",4,[["m64metadata",3],["error",4]]]],[[["m64metadata",3],["str",0]],["result",4,[["m64metadata",3],["error",4]]]],[[["game",3]],["result",4,[["vec",3,[["surface",3]]],["error",4]]]],[[["timeline",3],["u32",0]],["result",4,[["vec",3,[["surface",3]]],["error",4]]]],[[["str",0],["str",0],["str",0]],["result",4,[["error",4]]]],[[["game",3],["str",0],["value",4]],["result",4,[["error",4]]]],[[["timeline",3],["u32",0],["str",0],["value",4]],["result",4,[["error",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0],["str",0],["str",0]]],[[["m64metadata",3]],["option",4,[["sm64version",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sm64version",4]],["m64metadata",3]],[[["game",3],["str",0],["value",4]]],[[["timeline",3],["u32",0],["str",0],["value",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Address"],[4,"Value"],[4,"Error"],[4,"DataType"],[4,"SM64Version"],[4,"FloatType"],[4,"IntType"],[3,"ValueTypeError"],[3,"M64Metadata"],[3,"Game"],[3,"Timeline"],[3,"SaveState"],[3,"Input"],[3,"ObjectHitbox"],[3,"Surface"],[13,"Int"],[13,"Float"],[13,"DllLayoutError"],[13,"SM64ExtrasError"],[13,"DllLoadError"],[13,"DataPathError"],[13,"MemoryError"],[13,"LayoutLookupError"],[13,"ValueTypeError"],[13,"InvalidFrameLogEventType"],[13,"ApplyEditError"],[13,"M64ReadError"],[13,"M64WriteError"],[13,"FileReadError"],[13,"FileWriteError"],[13,"InvalidM64Error"],[13,"Int"],[13,"Float"],[13,"String"],[13,"Address"],[13,"Struct"],[13,"Array"]]},\
"wafel_core":{"doc":"Rust code for Wafel.","t":[0,0,0,0,0,13,6,4,13,13,3,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,6,6,3,3,3,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,13,3,4,13,13,3,3,3,3,13,3,3,3,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,3,3,3,3,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,5,12,12,12,3,6,3,3,3,13,13,13,3,3,4,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["error","geo","graphics","python","sm64","ApiError","Error","ErrorCause","SM64Error","ValueTypeError","WithContext","backtrace","backtrace","borrow","borrow","borrow_mut","borrow_mut","cause","cause_into","context","context","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","map_cause","source","source","to_string","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","0","0","0","0","0","0","0","Matrix4f","Point3f","StoredMatrix4f","StoredPoint3f","StoredVector3f","StoredVector4f","Vector3f","Vector4f","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","direction_to_pitch_yaw","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","eq","extract","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_py","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","ne","ne","ne","ne","pitch_yaw_to_direction","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","IMGUI_FONT_TEXTURE_ID","ImguiCommand","ImguiCommandList","ImguiConfig","ImguiDrawData","ImguiRenderer","Renderer","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_rect","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command_lists","commands","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","elem_count","fmt","fmt","fmt","fmt","fmt","fmt","font_texture_data","font_texture_height","font_texture_width","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","index_buffer","index_size","init","init","init","init","init","init","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","render","render","scene","texture_id","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","vertex_buffer","vertex_color_offset","vertex_pos_offset","vertex_size","vertex_tex_coord_offset","vzip","vzip","vzip","vzip","vzip","vzip","BirdsEye","BirdsEyeCamera","Camera","Ceiling","Floor","Object","ObjectPath","ObjectPathNode","QuarterStep","Rotate","RotateCamera","Scene","Surface","SurfaceType","Viewport","WallXProj","WallZProj","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","fov_y","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_camera","get_hash","get_hash","hash","height","hidden_surfaces","hitbox_height","hitbox_radius","hovered_surface","init","init","init","init","init","init","init","init","init","init","init","intended_pos","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","new","nodes","normal","object_paths","objects","pitch","pos","pos","pos","pos","quarter_steps","result_pos","root_index","set_camera","set_quarter_steps","show_camera_target","span_y","surfaces","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertices","viewport","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_hitbox_radius","width","x","y","yaw","0","0","ImguiInput","PyAddress","PyAdjustedStick","PyEditRange","PyInit_wafel_core","PyIntendedStick","PyObjectBehavior","PyPipeline","PyVariable","__hash__","__repr__","__richcmp__","__str__","action_names","arguments","arguments","arguments","arguments","arguments","balance_distribution","begin_drag","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_frames","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data_cache_size","delete_frame","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","end","eq","equivalent","extract","extract","extract","extract","find_edit_range","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","for_each_proto_slot","frame","frame_log","from","from","from","from","from","from","from","from","from_bytes","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_buffer","get_hash","get_hash","handle_event","hash","id","init","init","init","init","init","init","init","init","insert_frame","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","is_bit_flag","is_float","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_int","label","load","load_reusing_edits","log","mag","mag","name","ne","new","new","new","new","num_advances","num_copies","object","object_behavior","object_behavior","object_behavior_name","open_window_and_run","open_window_and_run_impl","path_address","path_read","read","read_mario_path","read_objects_to_scene","read_string","read_surfaces_to_scene","release_drag","reset","set_delta_time","set_display_size","set_hotspot","set_key_map","start","stick_adjusted_to_intended","stick_adjusted_to_raw_euclidean","stick_intended_to_raw_heuristic","stick_raw_to_adjusted","surface","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_ray_to_surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_drag","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_frame","with_object","with_object_behavior","with_surface","without_frame","without_object","without_object_behavior","without_surface","write","x","y","yaw","debug","debug_acquire","error","error_acquire","info","info_acquire","warn","warn_acquire","0","0","0","AdjustedStick","Angle","EditRange","EditRangeId","IntendedStick","MissingFrame","MissingObject","MissingSurface","ObjectBehavior","ObjectSlot","SM64ErrorCause","SurfaceSlot","UnhandledVariable","ValueFromPython","Variable","VariableSerdeError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frames","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","mag","mag","name","ne","ne","ne","ne","ne","ne","ne","new","object","object_behavior","serialize","serialize","serialize","serialize","source","stick_adjusted_to_intended","stick_adjusted_to_raw_euclidean","stick_intended_to_raw_heuristic","stick_raw_to_adjusted","surface","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_frame","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_object","try_surface","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_frame","with_object","with_object_behavior","with_surface","without_frame","without_object","without_object_behavior","without_surface","x","y","yaw","0","value","variable","variable","variable","variable"],"q":["wafel_core","","","","","wafel_core::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_core::error::ErrorCause","","","wafel_core::geo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_core::graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_core::graphics::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_core::graphics::scene::Camera","","wafel_core::pythonwafel_core::python::log","","","","","","","","wafel_core::smwafel_core::sm64::SM64ErrorCause","","","","",""],"d":["Error definitions.","Geometric types and functions.","UI and game scene rendering.","SM64-specific Python API for Wafel.","SM64-specific utilities and data access.","","","","","","An error with extra context.","","The backtrace for the error.","","","","","The root source of the error.","Convert the cause into another type.","Add additional context to the error.","The additional context for the error.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Change the error’s cause.","","","","","","","","","","","","","","","","","","","","","","","","","","4x4 f32 matrix","f32 point of length 3","Wrapper type, mainly for Pod and pyo3 conversion …","Wrapper type, mainly for Pod and pyo3 conversion …","Wrapper type, mainly for Pod and pyo3 conversion …","Wrapper type, mainly for Pod and pyo3 conversion …","f32 vector of length 3","f32 vector of length 4","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a direction to its pitch and yaw in radians.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Convert a pitch and yaw in radians to a direction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The main font texture.","A single draw command.","An imgui command list, which consists of commands that use …","Initial configuration for imgui draw lists.","The draw data for one frame.","A renderer for imgui frame data.","A renderer for the game views.","","","","","","","","","","","","","The clip rectangle in screen coordinates.","","","","","","","","","The command lists to draw.","The commands in this list.","","","","","","","","","","","","","","","","","","","","","","","","","The number of indices.","","","","","","","The RGBA32 data for the font texture.","The height in pixels of the font texture.","The width in pixels of the font texture.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","The bytes of the index buffer.","The size of an index element (2 for ushort or 4 for uint).","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create a renderer with the given config.","Initialize the renderer.","Render the given draw data.","Render the given scenes.","Representation of the state of the game for the purposes …","The texture to use (must equal <code>IMGUI_FONT_TEXTURE_ID</code>).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bytes of the vertex buffer.","The offset of color in the vertex struct.","The offset of position in the vertex struct.","The size of a vertex element.","The offset of tex coord in the vertex struct.","","","","","","","A 2D overhead view.","A 2D overhead view camera.","A camera used to render a scene.","Normal is pointing somewhat downward.","Normal is pointing somewhat upward.","SM64 object data used for rendering.","Info about an object’s movement over the course of …","A single node in an object path, with information for a …","A single quarter step within a frame.","A 3D rotational camera.","A 3D rotational camera.","An object representing the state of the game for the …","SM64 surface data used for rendering.","An SM64 surface type, based on the game’s definitions.","A rectangular viewport in screen coordinates.","Normal is almost horizontal and points more in the X …","Normal is almost horizontal and points more in the Z …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bird’s eye or rotational camera to use.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The y FOV in radians.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Get the camera as a python object.","","","","The height in pixels.","The surfaces that have been hidden by the user (indices …","The physical hitbox height of the object.","The physical hitbox radius of the object.","The surface to highlight because the mouse cursor is above …","","","","","","","","","","","","The intended position of the step before surface …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Create an empty scene.","Create a viewport with zero values.","Create a new camera with zero values.","Create a camera with zero values.","Create an empty quarter step node.","The list of nodes along the path, in chronological order.","The surface’s normal vector.","The detailed paths of object movement across multiple …","The SM64 objects to render.","Get the camera’s facing pitch.","The position of the camera.","The position of the camera.","The position of the object.","The object’s position at the start of the frame.","The quarter steps that occurred during the frame (i.e. …","The final position of the step.","The index into <code>nodes</code> that is considered the focus (i.e. …","Set the camera from a python object.","Convenience method to set the quarter steps for a single …","Whether to draw the camera’s focus point (RotateCamera …","The world space distance covered by the vertical span of …","The SM64 surfaces to render.","The point that the camera is focusing on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the surface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The surface’s vertices.","The viewport in screen coordinates where the scene should …","","","","","","","","","","","","The size of wall hitboxes. Setting this to 0 disables them.","The width in pixels.","The left x coordinate.","The upper y coordinate.","Get the camera’s facing yaw.","","","Utility for updating imgui keys.","An opaque representation of a memory address.","The joystick’s state after removing the dead zone and …","Information about a variable edit range.","This autogenerated function is called by the python …","The joystick’s state as stored in the mario struct.","An opaque representation of an object behavior.","An abstraction for reading and writing variables.","An abstract game variable.","","","","","Return a map from mario action values to human readable …","","","","","","Perform housekeeping to improve scrolling near hotspots.","Begin a drag operation starting at <code>source_variable</code>.","","","","","","","","","","","","","","","","","Return the set of currently loaded frames for debugging …","","","","","","","","","Return the size of the data cache in bytes.","Delete the state at the given frame, shifting edits …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The end frame of the range (exclusive).","","","","","","","Find the edit range containing a variable, if present.","","","","","","","","","","","","","","","","","Get the frame for the variable.","Get the wafel frame log for a frame of gameplay.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a variable from bytes.","","","","","","","","","","","","","","","","","","Handle a winit window event.","","The id of the range.","","","","","","","","","Insert a new state at the given frame, shifting edits …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return true if the variable is a bit flag.","Return true if the variable has a float data type.","","","","","","","","","Return true if the variable has an integer data type.","Return the label for the variable if it has one.","Load a new pipeline using the given DLL.","Load a new pipeline using the given DLL, reusing the edits …","Provides access to the log file.","Adjusted magnitude, [0, 64].","Intended magnitude, normally [0, 32].","Get the name of the variable.","","Initialize a new <code>ImguiInput</code>.","Create a variable with the given name with no associated …","Constructor.","Constructor.","Return the number of frame advances since the timeline was …","Return the number of slot copies since the timeline was …","Get the object slot for the variable.","Get the object behavior for an object, or None if the …","Get the object behavior for the variable.","Get a human readable name for the given object behavior, …","Open a window, call <code>update_fn</code> on each frame, and render …","Open a window, call <code>update_fn</code> on each frame, and render …","Get the address for the given path.","Read from the given path.","Read a variable.","Add an object path for mario to the scene, using the given …","Load the SM64 objects from the game state and add them to …","Read a null terminated byte string from the given address …","Load the SM64 surfaces from the game state and add them to …","End the drag operation, committing range changes.","Reset a variable.","Update delta time for a frame.","Set the display size for a frame.","Set a hotspot, allowing for faster scrolling near the …","Initialize the imgui key map.","The start frame of the range (inclusive).","In-game calculation converting adjusted stick to intended.","Return the raw stick value whose adjusted stick is closest …","Find a raw josytick value that approximately maps to the …","In-game calculation converting raw stick inputs to …","Get the surface slot for the variable.","Serialize a variable to bytes.","","","","","","","","","","","","","","","","","","","","","","Trace a ray until it hits a surface, and return the surface…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drag from <code>source_variable</code> to <code>target_frame</code>.","The value that is applied to the range.","","","","","","","","","Return a copy of the variable but associated with the …","Return a copy of the variable but associated to the given …","Return a copy of the variable but associated to the given …","Return a copy of the variable but associated to the given …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Write a variable.","Adjusted stick x.","Adjusted stick y.","Intended yaw in world space.","Print a debug message.","Print a debug message.","Print an error.","Print an error.","Print an info message.","Print an info message.","Print a warning.","Print a warning.","","","","The joystick’s state after removing the dead zone and …","A wrapping 16 bit integer representing an angle.","A range of contiguous cells in a single column which are …","A unique identifier for an edit range.","The joystick’s state as stored in the mario struct.","","","","An opaque wrapper for an object behavior pointer.","A wrapper for an object slot index.","","A wrapper for a surface slot index.","","","An abstract game variable, typically corresponding to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The frame that the variable is taken on.","The frames included in the range.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","The id of the range.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Adjusted magnitude, [0, 64].","Intended magnitude, normally [0, 32].","The internal name of the variable.","","","","","","","","Create a variable with the given name with no associated …","The object slot for object variables.","The accepted object behavior for object variables.","","","","","","In-game calculation converting adjusted stick to intended.","Return the raw stick value whose adjusted stick is closest …","Find a raw josytick value that approximately maps to the …","In-game calculation converting raw stick inputs to …","The surface slot for surface variables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the frame for the variable.","","","","","","","","","","","","","","","","","","","Get the object slot for the variable.","Get the surface for the variable.","","","","","","","","","","","","","","","","","","","The value that each variable in the range is edited to.","","","","","","","","","","Return a copy of the variable but associated with the …","Return a copy of the variable but associated to the given …","Return a copy of the variable but associated to the given …","Return a copy of the variable but associated to the given …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Return a copy of the variable but without an associated …","Adjusted stick x.","Adjusted stick y.","Intended yaw in world space.","","","","","",""],"i":[0,0,0,0,0,1,0,0,1,1,0,2,2,1,2,1,2,2,2,2,2,1,2,1,2,1,2,1,2,1,1,2,2,3,3,3,1,1,1,1,2,2,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,4,5,6,7,8,9,10,0,0,0,0,0,0,0,0,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,7,8,8,9,9,10,10,7,8,9,10,0,7,8,9,10,7,8,9,10,7,8,9,10,10,7,8,9,10,7,7,8,8,9,9,10,10,7,8,9,10,7,8,9,10,7,8,9,10,10,7,8,9,10,7,8,9,10,7,8,9,10,0,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,7,8,9,10,0,0,0,0,0,0,0,11,12,13,14,15,16,11,12,13,14,15,16,14,11,12,13,14,11,12,13,14,12,13,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,14,11,12,13,14,15,16,11,11,11,11,12,13,14,15,16,11,12,13,14,15,16,13,11,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,15,16,15,16,0,14,11,12,13,14,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,13,11,11,11,11,11,12,13,14,15,16,17,0,0,18,18,0,0,0,0,17,0,0,0,0,0,18,18,19,20,21,22,23,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,18,18,19,20,21,22,23,24,19,20,17,21,22,25,18,26,23,27,24,19,20,21,22,23,24,21,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,21,22,23,24,19,18,18,18,20,19,26,26,19,19,20,17,21,22,25,18,26,23,27,24,24,19,20,17,21,22,25,18,26,23,27,24,19,20,21,22,23,24,19,20,17,21,22,25,18,26,23,27,24,19,20,21,22,24,23,25,19,19,21,21,22,26,27,27,24,23,19,23,19,22,19,21,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,19,20,17,21,22,25,18,26,23,27,24,25,19,20,17,21,22,25,18,26,23,27,24,19,20,21,22,23,24,19,20,21,22,23,24,19,20,17,21,22,25,18,26,23,27,24,25,19,19,20,17,21,22,25,18,26,23,27,24,19,20,20,20,21,28,29,0,0,0,0,0,0,0,0,0,30,30,30,30,31,32,33,34,35,36,31,31,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,31,30,33,35,36,30,33,35,36,31,31,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,34,30,30,30,33,35,36,31,37,31,30,30,32,33,34,35,36,31,30,32,33,34,35,36,30,31,37,31,30,32,33,34,35,36,30,37,31,30,32,33,34,35,36,31,30,32,33,34,35,36,30,30,37,30,34,37,31,30,32,33,34,35,36,31,37,31,30,32,33,34,35,36,31,30,32,33,34,35,36,31,31,37,31,30,32,33,34,35,36,31,31,31,31,0,35,36,30,30,37,30,35,36,31,31,30,31,30,31,0,0,31,31,31,31,31,31,31,31,31,37,37,31,37,34,0,0,0,0,30,30,30,33,35,36,30,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,31,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,31,30,32,33,34,35,36,31,30,32,33,34,35,36,37,31,30,32,33,34,35,36,31,34,37,31,30,32,33,34,35,36,30,30,30,30,30,30,30,30,31,35,35,36,0,0,0,0,0,0,0,0,38,39,40,0,0,0,0,0,41,41,41,0,0,0,0,41,41,0,41,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,42,43,44,45,38,39,40,46,42,43,44,45,38,39,40,46,42,43,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,38,39,40,46,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,42,43,44,38,39,40,46,44,38,39,40,46,41,41,42,43,44,45,38,38,39,39,40,40,46,46,46,45,41,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,44,44,38,38,39,39,40,40,46,46,44,38,39,40,46,45,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,42,43,46,42,43,44,38,39,40,46,46,46,46,38,39,40,46,41,0,0,0,0,46,42,43,44,45,38,39,40,46,41,38,39,40,46,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,46,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,46,46,41,42,43,44,45,38,39,40,46,41,42,43,44,45,38,39,40,46,45,41,42,43,44,45,38,39,40,46,46,46,46,46,46,46,46,46,42,42,43,47,48,49,50,51,52],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["withcontext",3]],["option",4,[["backtrace",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["withcontext",3]],["withcontext",3,[["from",8]]]],[[["withcontext",3],["string",3]],["withcontext",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["errorcause",4],["formatter",3]],["result",6]],[[["errorcause",4],["formatter",3]],["result",6]],[[["withcontext",3,[["debug",8]]],["formatter",3]],["result",6]],[[["withcontext",3,[["display",8]]],["formatter",3]],["result",6]],[[["error",4]],["error",6]],[[["valuetypeerror",3]],["error",6]],[[["sm64errorcause",4]],["error",6]],[[["error",4]],["errorcause",4]],[[["valuetypeerror",3]],["errorcause",4]],[[]],[[["sm64errorcause",4]],["errorcause",4]],[[]],[[["never",0]]],[[],["withcontext",3]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["withcontext",3],["fnonce",8]],["withcontext",3]],[[["errorcause",4]],["option",4,[["error",8]]]],[[["withcontext",3]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3]],["py",3,[["pyany",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["storedmatrix4f",3]],["storedmatrix4f",3]],[[["storedvector3f",3]],["storedvector3f",3]],[[["storedvector4f",3]],["storedvector4f",3]],[[["storedpoint3f",3]],["storedpoint3f",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["storedmatrix4f",3]],[[],["storedvector3f",3]],[[],["storedvector4f",3]],[[],["storedpoint3f",3]],[[["usize",0]],["",0]],[[["storedmatrix4f",3]],["matrix4f",6]],[[["storedvector3f",3]],["vector3f",6]],[[["usize",0]],["",0]],[[["storedvector4f",3]],["vector4f",6]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["storedpoint3f",3]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["vector3f",6]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["storedmatrix4f",3],["storedmatrix4f",3]],["bool",0]],[[["storedvector3f",3],["storedvector3f",3]],["bool",0]],[[["storedvector4f",3],["storedvector4f",3]],["bool",0]],[[["storedpoint3f",3],["storedpoint3f",3]],["bool",0]],[[["pyany",3]],["pyresult",6,[["storedpoint3f",3]]]],[[["storedmatrix4f",3],["formatter",3]],["result",6]],[[["storedvector3f",3],["formatter",3]],["result",6]],[[["storedvector4f",3],["formatter",3]],["result",6]],[[["storedpoint3f",3],["formatter",3]],["result",6]],[[["matrix4f",6]],["storedmatrix4f",3]],[[]],[[["vector3f",6]],["storedvector3f",3]],[[]],[[["vector4f",6]],["storedvector4f",3]],[[]],[[]],[[["point3f",6]],["storedpoint3f",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["storedpoint3f",3],["python",3]],["pyobject",6]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["storedmatrix4f",3],["storedmatrix4f",3]],["bool",0]],[[["storedvector3f",3],["storedvector3f",3]],["bool",0]],[[["storedvector4f",3],["storedvector4f",3]],["bool",0]],[[["storedpoint3f",3],["storedpoint3f",3]],["bool",0]],[[["f32",0],["f32",0]],["vector3f",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["imguiconfig",3]],["imguiconfig",3]],[[["imguidrawdata",3]],["imguidrawdata",3]],[[["imguicommandlist",3]],["imguicommandlist",3]],[[["imguicommand",3]],["imguicommand",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["imguiconfig",3],["formatter",3]],["result",6]],[[["imguidrawdata",3],["formatter",3]],["result",6]],[[["imguicommandlist",3],["formatter",3]],["result",6]],[[["imguicommand",3],["formatter",3]],["result",6]],[[["imguirenderer",3],["formatter",3]],["result",6]],[[["renderer",3],["formatter",3]],["result",6]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["device",3],["queue",3],["textureformat",4],["imguiconfig",3]],["imguirenderer",3]],[[["device",3],["textureformat",4]],["renderer",3]],[[["imguirenderer",3],["device",3],["queue",3],["textureview",3],["imguidrawdata",3]]],[[["renderer",3],["device",3],["queue",3],["textureview",3],["textureformat",4]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["scene",3]],["scene",3]],[[["viewport",3]],["viewport",3]],[[["camera",4]],["camera",4]],[[["rotatecamera",3]],["rotatecamera",3]],[[["birdseyecamera",3]],["birdseyecamera",3]],[[["surface",3]],["surface",3]],[[["surfacetype",4]],["surfacetype",4]],[[["object",3]],["object",3]],[[["objectpath",3]],["objectpath",3]],[[["objectpathnode",3]],["objectpathnode",3]],[[["quarterstep",3]],["quarterstep",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["scene",3]],[[],["viewport",3]],[[],["camera",4]],[[],["rotatecamera",3]],[[],["birdseyecamera",3]],[[],["objectpath",3]],[[],["objectpathnode",3]],[[],["quarterstep",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["surfacetype",4],["surfacetype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["scene",3],["formatter",3]],["result",6]],[[["viewport",3],["formatter",3]],["result",6]],[[["camera",4],["formatter",3]],["result",6]],[[["rotatecamera",3],["formatter",3]],["result",6]],[[["birdseyecamera",3],["formatter",3]],["result",6]],[[["surface",3],["formatter",3]],["result",6]],[[["surfacetype",4],["formatter",3]],["result",6]],[[["object",3],["formatter",3]],["result",6]],[[["objectpath",3],["formatter",3]],["result",6]],[[["objectpathnode",3],["formatter",3]],["result",6]],[[["quarterstep",3],["formatter",3]],["result",6]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[["scene",3],["python",3]],["pyobject",6]],[[["",0],["",0]],["u64",0]],[[["",0]],["u64",0]],[[["surfacetype",4],["",0]]],null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scene",3],["python",3]],["pyobject",6]],[[["viewport",3],["python",3]],["pyobject",6]],[[["rotatecamera",3],["python",3]],["pyobject",6]],[[["birdseyecamera",3],["python",3]],["pyobject",6]],[[["objectpath",3],["python",3]],["pyobject",6]],[[["quarterstep",3],["python",3]],["pyobject",6]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["scene",3]],[[],["viewport",3]],[[],["rotatecamera",3]],[[],["birdseyecamera",3]],[[],["quarterstep",3]],null,null,null,null,[[["rotatecamera",3]],["f32",0]],null,null,null,null,null,null,null,[[["scene",3],["pyany",3]],["pyresult",6]],[[["objectpath",3],["usize",0],["vec",3,[["quarterstep",3]]]]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["rotatecamera",3]],["f32",0]],null,null,null,null,null,null,[[],["pyobject",0]],null,null,null,null,[[["pyvariable",3]]],[[["pyvariable",3]]],[[["pyvariable",3],["compareop",4]]],[[["pyvariable",3]]],[[["pypipeline",3]],["hashmap",3,[["u32",0],["string",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["python",3]],["py",3,[["pyany",3]]]],[[["pypipeline",3],["f32",0]]],[[["pypipeline",3],["python",3],["pyvariable",3],["pyobject",6]],["pyresult",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pypipeline",3]],["vec",3,[["u32",0]]]],[[["pyvariable",3]],["pyvariable",3]],[[["pyaddress",3]],["pyaddress",3]],[[["pyadjustedstick",3]],["pyadjustedstick",3]],[[["pyintendedstick",3]],["pyintendedstick",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["pypipeline",3]],["usize",0]],[[["pypipeline",3],["u32",0]],["result",4,[["pyerr",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["pyeditrange",3]],["u32",0]],[[["pyvariable",3],["pyvariable",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pyany",3]],["result",4,[["pyerr",3]]]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6,[["option",4,[["pyeditrange",3]]]]]],[[["imguiinput",3],["formatter",3]],["result",6]],[[["pypipeline",3],["formatter",3]],["result",6]],[[["pyvariable",3],["formatter",3]],["result",6]],[[["pyvariable",3],["formatter",3]],["result",6]],[[["pyobjectbehavior",3],["formatter",3]],["result",6]],[[["pyaddress",3],["formatter",3]],["result",6]],[[["pyeditrange",3],["formatter",3]],["result",6]],[[["pyadjustedstick",3],["formatter",3]],["result",6]],[[["pyintendedstick",3],["formatter",3]],["result",6]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["fnmut",8]]],[[["pyvariable",3]],["option",4,[["u32",0]]]],[[["pypipeline",3],["python",3],["u32",0]],["pyresult",6,[["vec",3,[["hashmap",3,[["string",3],["pyobject",6]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["pyvariable",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[],["option",4,[["pybufferprocs",3]]]],[[["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["imguiinput",3],["python",3],["windowevent",4]],["pyresult",6]],[[["pyvariable",3],["",0]]],[[["pyeditrange",3]],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["pypipeline",3],["u32",0]],["result",4,[["pyerr",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pypipeline",3],["python",3]],["pyobject",6]],[[["pyvariable",3],["python",3]],["pyobject",6]],[[["pyobjectbehavior",3],["python",3]],["pyobject",6]],[[["pyaddress",3],["python",3]],["pyobject",6]],[[["pyeditrange",3],["python",3]],["pyobject",6]],[[["pyadjustedstick",3],["python",3]],["pyobject",6]],[[["pyintendedstick",3],["python",3]],["pyobject",6]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6,[["bool",0]]]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6,[["bool",0]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6,[["bool",0]]]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6,[["option",4,[["str",0]]]]]],[[["python",3],["str",0]],["pyresult",6,[["py",3,[["pypipeline",3]]]]]],[[["python",3],["str",0],["py",3,[["pypipeline",3]]]],["pyresult",6,[["py",3,[["pypipeline",3]]]]]],null,null,null,[[["pyvariable",3]],["str",0]],[[["pyvariable",3],["pyvariable",3]],["bool",0]],[[["python",3]],["pyresult",6,[["imguiinput",3]]]],[[["str",0]],["pyvariable",3]],[[["f32",0],["f32",0],["f32",0]],["pyadjustedstick",3]],[[["i16",0],["f32",0]],["pyintendedstick",3]],[[["pypipeline",3]],["usize",0]],[[["pypipeline",3]],["usize",0]],[[["pyvariable",3]],["option",4,[["usize",0]]]],[[["pypipeline",3],["u32",0],["usize",0]],["pyresult",6,[["option",4,[["pyobjectbehavior",3]]]]]],[[["pyvariable",3]],["option",4,[["pyobjectbehavior",3]]]],[[["pypipeline",3],["pyobjectbehavior",3]],["string",3]],[[["str",0],["pyobject",6]],["pyresult",6]],[[["str",0],["pyobject",6]],["pyresult",6]],[[["pypipeline",3],["u32",0],["str",0]],["pyresult",6,[["option",4,[["pyaddress",3]]]]]],[[["pypipeline",3],["python",3],["u32",0],["str",0]],["pyresult",6,[["pyobject",6]]]],[[["pypipeline",3],["python",3],["pyvariable",3]],["pyresult",6,[["pyobject",6]]]],[[["pypipeline",3],["u32",0],["u32",0]],["pyresult",6,[["objectpath",3]]]],[[["pypipeline",3],["scene",3],["u32",0]],["pyresult",6]],[[["pypipeline",3],["python",3],["u32",0],["pyaddress",3]],["pyresult",6,[["pybytes",3]]]],[[["pypipeline",3],["scene",3],["u32",0]],["pyresult",6]],[[["pypipeline",3]],["result",4,[["pyerr",3]]]],[[["pypipeline",3],["pyvariable",3]],["pyresult",6]],[[["imguiinput",3],["python",3],["f64",0]],["pyresult",6]],[[["imguiinput",3],["python",3]],["pyresult",6]],[[["pypipeline",3],["str",0],["u32",0]]],[[["imguiinput",3],["python",3]],["pyresult",6]],[[["pyeditrange",3]],["u32",0]],[[["pyadjustedstick",3],["i16",0],["i16",0],["bool",0]],["pyintendedstick",3]],[[["f32",0],["f32",0]]],[[["pyintendedstick",3],["i16",0],["i16",0],["bool",0],["i16",0]]],[[["i16",0],["i16",0]],["pyadjustedstick",3]],[[["pyvariable",3]],["option",4,[["usize",0]]]],[[["pyvariable",3],["python",3]],["pyresult",6,[["pybytes",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["pypipeline",3],["u32",0]],["pyresult",6,[["option",4,[["usize",0]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytype",3]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["python",3]],["pytypeobject",0]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["pypipeline",3],["u32",0]],["result",4,[["pyerr",3]]]],[[["pyeditrange",3],["python",3]],["pyresult",6,[["pyobject",6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pyvariable",3],["u32",0]],["pyvariable",3]],[[["pyvariable",3],["usize",0]],["pyvariable",3]],[[["pyvariable",3],["pyobjectbehavior",3]],["pyvariable",3]],[[["pyvariable",3],["usize",0]],["pyvariable",3]],[[["pyvariable",3]],["pyvariable",3]],[[["pyvariable",3]],["pyvariable",3]],[[["pyvariable",3]],["pyvariable",3]],[[["pyvariable",3]],["pyvariable",3]],[[["pypipeline",3],["python",3],["pyvariable",3],["pyobject",6]],["pyresult",6]],null,null,null,[[["python",3],["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],[[["python",3],["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],[[["python",3],["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],[[["python",3],["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["adjustedstick",3]],["adjustedstick",3]],[[["intendedstick",3]],["intendedstick",3]],[[["editrangeid",3]],["editrangeid",3]],[[["editrange",3,[["clone",8]]]],["editrange",3,[["clone",8]]]],[[["objectslot",3]],["objectslot",3]],[[["surfaceslot",3]],["surfaceslot",3]],[[["objectbehavior",3]],["objectbehavior",3]],[[["variable",3]],["variable",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["adjustedstick",3]],[[],["intendedstick",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["objectslot",3]]]],[[],["result",4,[["surfaceslot",3]]]],[[],["result",4,[["objectbehavior",3]]]],[[],["result",4,[["variable",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["adjustedstick",3],["adjustedstick",3]],["bool",0]],[[["intendedstick",3],["intendedstick",3]],["bool",0]],[[["editrangeid",3],["editrangeid",3]],["bool",0]],[[["objectslot",3],["objectslot",3]],["bool",0]],[[["surfaceslot",3],["surfaceslot",3]],["bool",0]],[[["objectbehavior",3],["objectbehavior",3]],["bool",0]],[[["variable",3],["variable",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["sm64errorcause",4],["formatter",3]],["result",6]],[[["sm64errorcause",4],["formatter",3]],["result",6]],[[["adjustedstick",3],["formatter",3]],["result",6]],[[["intendedstick",3],["formatter",3]],["result",6]],[[["editrangeid",3],["formatter",3]],["result",6]],[[["editrange",3,[["debug",8]]],["formatter",3]],["result",6]],[[["objectslot",3],["formatter",3]],["result",6]],[[["objectslot",3],["formatter",3]],["result",6]],[[["surfaceslot",3],["formatter",3]],["result",6]],[[["surfaceslot",3],["formatter",3]],["result",6]],[[["objectbehavior",3],["formatter",3]],["result",6]],[[["objectbehavior",3],["formatter",3]],["result",6]],[[["variable",3],["formatter",3]],["result",6]],[[["variable",3],["formatter",3]],["result",6]],null,null,[[["error",3]],["sm64errorcause",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0],["",0]],["u64",0]],[[["",0]],["u64",0]],[[["editrangeid",3],["",0]]],[[["objectslot",3],["",0]]],[[["surfaceslot",3],["",0]]],[[["objectbehavior",3],["",0]]],[[["variable",3],["",0]]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["adjustedstick",3],["adjustedstick",3]],["bool",0]],[[["intendedstick",3],["intendedstick",3]],["bool",0]],[[["editrangeid",3],["editrangeid",3]],["bool",0]],[[["objectslot",3],["objectslot",3]],["bool",0]],[[["surfaceslot",3],["surfaceslot",3]],["bool",0]],[[["objectbehavior",3],["objectbehavior",3]],["bool",0]],[[["variable",3],["variable",3]],["bool",0]],[[["str",0]],["variable",3]],null,null,[[["objectslot",3]],["result",4]],[[["surfaceslot",3]],["result",4]],[[["objectbehavior",3]],["result",4]],[[["variable",3]],["result",4]],[[["sm64errorcause",4]],["option",4,[["error",8]]]],[[["adjustedstick",3],["angle",6],["angle",6],["bool",0]],["intendedstick",3]],[[["f32",0],["f32",0]]],[[["intendedstick",3],["angle",6],["angle",6],["bool",0],["angle",6]]],[[["i16",0],["i16",0]],["adjustedstick",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["variable",3]],["result",4,[["u32",0],["error",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["variable",3]],["result",4,[["objectslot",3],["error",6]]]],[[["variable",3]],["result",4,[["surfaceslot",3],["error",6]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["variable",3],["u32",0]],["variable",3]],[[["variable",3],["objectslot",3]],["variable",3]],[[["variable",3],["objectbehavior",3]],["variable",3]],[[["variable",3],["surfaceslot",3]],["variable",3]],[[["variable",3]],["variable",3]],[[["variable",3]],["variable",3]],[[["variable",3]],["variable",3]],[[["variable",3]],["variable",3]],null,null,null,null,null,null,null,null,null],"p":[[4,"ErrorCause"],[3,"WithContext"],[6,"Error"],[13,"ApiError"],[13,"ValueTypeError"],[13,"SM64Error"],[3,"StoredMatrix4f"],[3,"StoredVector3f"],[3,"StoredVector4f"],[3,"StoredPoint3f"],[3,"ImguiConfig"],[3,"ImguiDrawData"],[3,"ImguiCommandList"],[3,"ImguiCommand"],[3,"ImguiRenderer"],[3,"Renderer"],[4,"Camera"],[4,"SurfaceType"],[3,"Scene"],[3,"Viewport"],[3,"RotateCamera"],[3,"BirdsEyeCamera"],[3,"ObjectPath"],[3,"QuarterStep"],[3,"Surface"],[3,"Object"],[3,"ObjectPathNode"],[13,"Rotate"],[13,"BirdsEye"],[3,"PyVariable"],[3,"PyPipeline"],[3,"PyObjectBehavior"],[3,"PyAddress"],[3,"PyEditRange"],[3,"PyAdjustedStick"],[3,"PyIntendedStick"],[3,"ImguiInput"],[3,"ObjectSlot"],[3,"SurfaceSlot"],[3,"ObjectBehavior"],[4,"SM64ErrorCause"],[3,"AdjustedStick"],[3,"IntendedStick"],[3,"EditRangeId"],[3,"EditRange"],[3,"Variable"],[13,"VariableSerdeError"],[13,"ValueFromPython"],[13,"UnhandledVariable"],[13,"MissingFrame"],[13,"MissingObject"],[13,"MissingSurface"]]},\
"wafel_data_path":{"doc":"Data path compilation and evaluation.","t":[13,13,4,4,4,13,13,13,3,13,13,13,3,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["CompileError","ConcatTypeMismatch","DataPath","DataPathCompileError","DataPathError","ExpectedGlobalPath","ExpectedLocalPath","Global","GlobalDataPath","IndexOutOfBounds","LayoutLookupError","Local","LocalDataPath","MaskOnNonInt","NotAField","NotAStruct","NotAnArray","NullableNotAPointer","ParseError","UndefinedField","UndefinedSymbol","UnsizedBaseType","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compile","compile","compile","concat","concat","concrete_type","concrete_type","concrete_type","field_offset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into_global","into_local","read","root_type","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","0","0","0","0","field_name","index","length","name","name","error","path","path","path","path1","path2","source","type1","type2"],"q":["wafel_data_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_data_path::DataPath","","wafel_data_path::DataPathCompileError","","","","","","","wafel_data_path::DataPathError","","","","","","","",""],"d":["","","Either a global or a local data path.","","","","","A global data path.","A data path starting from a global variable address.","","","A local data path.","A data path starting from a type, such as a specific …","","","","","","","","","","Evaluate the path and return the address of the variable.","","","","","","","","","","","","","","","","","","","","","Compile a global data path from source.","Compile a local data path from source.","Compile a data path from source.","Concatenate a global and local path.","Concatenate two local paths.","Get the concrete data type that the path points to.","Get the concrete data type that the path points to.","Get the concrete data type that the path points to.","Return the field offset for a path of the form <code>struct A.x</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Try to convert into a <code>GlobalDataPath</code>.","Try to convert into a <code>LocalDataPath</code>.","Evaluate the path and return the value stored in the …","Get the path’s root data type.","Get the source for the path.","","","","","","","","","","","","","","","","","","","","","","","","","","Evaluate the path and write <code>value</code> to the variable.","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,0,1,1,2,0,3,3,2,0,3,1,3,3,3,3,3,3,3,4,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,4,5,4,5,2,5,4,4,5,5,2,2,1,1,3,3,4,5,2,1,3,3,4,5,2,1,3,2,2,4,5,4,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,6,7,8,9,10,11,11,12,13,14,15,16,17,18,18,14,18,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["globaldatapath",3]],["result",4,[["option",4,[["address",3]]],["memoryerror",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["globaldatapath",3]],["globaldatapath",3]],[[["localdatapath",3]],["localdatapath",3]],[[["datapath",4]],["datapath",4]],[[["datapatherror",4]],["datapatherror",4]],[[["datapathcompileerror",4]],["datapathcompileerror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["arc",3],["str",0]],["result",4,[["globaldatapath",3],["datapatherror",4]]]],[[["arc",3],["str",0]],["result",4,[["localdatapath",3],["datapatherror",4]]]],[[["arc",3],["str",0]],["result",4,[["datapath",4],["datapatherror",4]]]],[[["globaldatapath",3],["localdatapath",3]],["result",4,[["globaldatapath",3],["datapatherror",4]]]],[[["localdatapath",3],["localdatapath",3]],["result",4,[["localdatapath",3],["datapatherror",4]]]],[[["globaldatapath",3]],["datatyperef",6]],[[["localdatapath",3]],["datatyperef",6]],[[["datapath",4]],["datatyperef",6]],[[["localdatapath",3]],["result",4,[["usize",0],["datapatherror",4]]]],[[["globaldatapath",3],["formatter",3]],["result",6]],[[["globaldatapath",3],["formatter",3]],["result",6]],[[["localdatapath",3],["formatter",3]],["result",6]],[[["localdatapath",3],["formatter",3]],["result",6]],[[["datapath",4],["formatter",3]],["result",6]],[[["datapath",4],["formatter",3]],["result",6]],[[["datapatherror",4],["formatter",3]],["result",6]],[[["datapatherror",4],["formatter",3]],["result",6]],[[["datapathcompileerror",4],["formatter",3]],["result",6]],[[["datapathcompileerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["layoutlookuperror",4]],["datapathcompileerror",4]],[[]],[[]],[[]],[[]],[[]],[[["datapath",4]],["result",4,[["globaldatapath",3],["datapatherror",4]]]],[[["datapath",4]],["result",4,[["localdatapath",3],["datapatherror",4]]]],[[["globaldatapath",3]],["result",4,[["value",4],["memoryerror",4]]]],[[["localdatapath",3]],["datatyperef",6]],[[["globaldatapath",3]],["str",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["globaldatapath",3],["",0],["value",4]],["result",4,[["memoryerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"DataPathError"],[4,"DataPath"],[4,"DataPathCompileError"],[3,"GlobalDataPath"],[3,"LocalDataPath"],[13,"Global"],[13,"Local"],[13,"ParseError"],[13,"LayoutLookupError"],[13,"NotAStruct"],[13,"IndexOutOfBounds"],[13,"UndefinedSymbol"],[13,"UndefinedField"],[13,"CompileError"],[13,"ExpectedGlobalPath"],[13,"ExpectedLocalPath"],[13,"NotAField"],[13,"ConcatTypeMismatch"]]},\
"wafel_data_type":{"doc":"Representation of Wafel data types and values, mostly …","t":[12,3,13,13,13,4,6,13,13,3,13,13,4,6,13,13,4,6,13,4,13,3,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,13,3,4,4,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","Address","Address","Array","Array","DataType","DataTypeRef","F32","F64","Field","Float","Float","FloatType","FloatValue","Int","Int","IntType","IntValue","Name","Namespace","None","NotAnArrayOrPointerError","Pointer","S16","S32","S64","S8","String","Struct","Struct","Struct","TypeName","Typedef","U16","U32","U64","U8","Union","Union","Value","ValueTypeError","Void","actual","add","as_address","as_array","as_array_with_len","as_f32","as_f32_3","as_float","as_float_lenient","as_i16_3","as_int","as_int_lenient","as_none","as_struct","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","expected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","is_array","is_float","is_int","is_name","is_none","is_null","is_pointer","is_struct","is_union","is_void","name","namespace","ne","ne","ne","ne","ne","offset","serialize","serialize","serialize","serialize","serialize","serialize","shallow","size","size","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_as_address","try_as_array","try_as_array_with_len","try_as_f32","try_as_f32_3","try_as_float","try_as_float_lenient","try_as_i16_3","try_as_int","try_as_int_lenient","try_as_none","try_as_struct","try_as_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","base","base","fields","fields","length","stride","stride","0","0","0","0","0","0","Alias","Array","BuildDataTypesError","CyclicDependency","Defer","DeferMult","Float","Int","Known","Name","Pointer","PreDataType","PreDataTypeSize","ShallowDataType","ShallowField","Struct","UndefinedTypeId","Union","Unknown","UnsizedArrayElement","Void","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_types","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","dependencies","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_size_from_pre_types","hash","into","into","into","into","into","map","ne","ne","ne","offset","resolve_direct","shallow_type","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","1","0","0","0","0","base","base","fields","fields","length"],"q":["wafel_data_typewafel_data_type::DataType","","","","","","","","","","wafel_data_type::Value","","","","","","wafel_data_type::shallow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_data_type::shallow::BuildDataTypesError","","","wafel_data_type::shallow::PreDataTypeSize","","","","wafel_data_type::shallow::ShallowDataType","","","","","","","",""],"d":["","A raw pointer value that can be stored in memory.","An address value.","An array type, optionally with a length.","An array value.","A representation of a C data type.","A reference to a <code>DataType</code>.","32 bit float","64 bit float","A field in a struct or union.","A float type.","A float value, regardless of the underlying <code>FloatType</code> size.","Float types of different sizes.","An integer value.","An integer type.","An integer value, regardless of the underlying <code>IntType</code> …","Integer types of different sizes and signedness.","An integer value.","A symbolic reference to a type definition, e.g. <code>struct Foo</code>.","The C type namespaces.","Represents the lack of a value.","","A pointer type.","16 bit signed int","32 bit signed int","64 bit signed int","8 bit signed int","A string value.","A struct type.","Types defined using <code>struct A { ... }</code>.","A struct value.","A symbolic reference to a type definition, e.g. <code>struct Foo</code>.","Types defined using <code>typedef ... A</code>.","16 bit unsigned int","32 bit unsigned int","64 bit unsigned int","8 bit unsigned int","A union type.","Types defined using <code>union A { ... }</code>.","A dynamically typed value.","","Void, typically used as a pointer target or function …","","","Convert the value to an address, panicking on failure.","Convert the value to an array and return its elements, …","Convert the value to an array and return its elements, …","Convert the value to a float, and then truncate to an f32, …","Convert the value to an array of three f32s, panicking on …","Convert the value to a float, panicking if the value is …","Convert the value to a usize, allowing in-range integers.","Convert the value to an array of three i16s, panicking on …","Convert the value to an int, panicking if it is not an int.","Convert the value to an int, allowing in-range floats that …","Panics if the value is not <code>Value::None</code>.","Convert the value to a struct and return its fields, …","Convert the value to a usize, panicking on failure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the data type is an array type.","Return true if the data type is a float type.","Return true if the data type is an integer type.","Return true if the data type is a type name.","Return true if the value is <code>Value::None</code>.","Returns true if the address is null (equal to zero).","Return true if the data type is a pointer type.","Return true if the data type is a struct type.","Return true if the data type is a union type.","Return true if the data type is void.","The raw name of the type.","The namespace that the type name blongs to.","","","","","","The byte offset within the struct or union.","","","","","","","Non-recursive version of data types that can be resolved …","The size of the int in bytes.","The size of the float in bytes.","Return the stride for an array or pointer type.","","","","","","","","","","","","","","","","","","","","Convert the value to an address.","Convert the value to an array and return its elements.","Convert the value to an array and return its elements.","Convert the value to a float and then truncate to an f32.","Convert the value to an array of three f32s.","Convert the value to a float.","Convert the value to a float, allowing in-range integers.","Convert the value to an array of three i16s.","Convert the value to an int.","Convert the value to an int, allowing in-range floats that …","Returns an error if the value is not <code>Value::None</code>.","Convert the value to a struct and return its fields.","Convert the value to a usize.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type being pointed to.","The element type.","The fields contained in the struct.","The fields contained in the union.","The length of the array, if known.","The size of the type being pointed to, if known.","The size of the element type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,3,2,0,0,4,4,0,3,2,0,0,3,2,0,0,3,0,2,0,3,5,5,5,5,2,3,6,2,0,6,5,5,5,5,3,6,0,0,3,7,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,9,10,7,1,2,9,3,5,4,8,9,1,3,5,4,6,8,9,1,2,7,3,3,5,5,4,4,6,6,8,8,9,10,10,7,7,1,1,2,2,3,5,4,6,8,9,10,7,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,4,6,8,1,3,5,4,6,8,9,10,7,1,2,3,3,3,3,2,1,3,3,3,3,8,8,3,8,9,1,2,9,3,5,4,8,9,1,0,5,4,3,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,10,7,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,9,10,7,1,2,3,5,4,6,8,9,10,7,1,2,11,12,13,14,15,16,17,15,14,15,18,19,20,21,22,23,24,24,0,25,26,26,24,24,26,24,24,0,0,0,0,24,25,24,26,25,24,27,24,28,26,25,27,24,28,26,25,0,27,24,28,26,25,27,24,28,26,25,27,28,27,24,26,27,24,28,26,25,25,27,24,28,26,25,0,26,27,24,28,26,25,25,27,24,26,27,24,28,28,27,24,28,26,25,25,27,24,28,26,25,27,24,28,26,25,27,24,28,26,25,29,30,31,32,33,34,34,35,36,37,38,39,40,41,42,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["address",3],["usize",0]]],[[["value",4]],["address",3]],[[["value",4]]],[[["value",4],["usize",0]]],[[["value",4]],["f32",0]],[[["value",4]]],[[["value",4]],["floatvalue",6]],[[["value",4]],["floatvalue",6]],[[["value",4]]],[[["value",4]],["intvalue",6]],[[["value",4]],["intvalue",6]],[[["value",4]]],[[["value",4]],["hashmap",3]],[[["value",4]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["datatype",4]],["datatype",4]],[[["inttype",4]],["inttype",4]],[[["floattype",4]],["floattype",4]],[[["namespace",4]],["namespace",4]],[[["typename",3]],["typename",3]],[[["field",3]],["field",3]],[[["notanarrayorpointererror",3]],["notanarrayorpointererror",3]],[[["valuetypeerror",3]],["valuetypeerror",3]],[[["address",3]],["address",3]],[[["value",4]],["value",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["result",4,[["datatype",4]]]],[[],["result",4,[["inttype",4]]]],[[],["result",4,[["floattype",4]]]],[[],["result",4,[["typename",3]]]],[[],["result",4,[["field",3]]]],[[],["result",4,[["address",3]]]],[[["datatype",4],["datatype",4]],["bool",0]],[[["inttype",4],["inttype",4]],["bool",0]],[[["floattype",4],["floattype",4]],["bool",0]],[[["namespace",4],["namespace",4]],["bool",0]],[[["typename",3],["typename",3]],["bool",0]],[[["field",3],["field",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["value",4],["value",4]],["bool",0]],null,[[["datatype",4],["formatter",3]],["result",6]],[[["datatype",4],["formatter",3]],["result",6]],[[["inttype",4],["formatter",3]],["result",6]],[[["inttype",4],["formatter",3]],["result",6]],[[["floattype",4],["formatter",3]],["result",6]],[[["floattype",4],["formatter",3]],["result",6]],[[["namespace",4],["formatter",3]],["result",6]],[[["namespace",4],["formatter",3]],["result",6]],[[["typename",3],["formatter",3]],["result",6]],[[["typename",3],["formatter",3]],["result",6]],[[["field",3],["formatter",3]],["result",6]],[[["notanarrayorpointererror",3],["formatter",3]],["result",6]],[[["notanarrayorpointererror",3],["formatter",3]],["result",6]],[[["valuetypeerror",3],["formatter",3]],["result",6]],[[["valuetypeerror",3],["formatter",3]],["result",6]],[[["address",3],["formatter",3]],["result",6]],[[["address",3],["formatter",3]],["result",6]],[[["value",4],["formatter",3]],["result",6]],[[["value",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]],["value",4]],[[],["value",4]],[[["vec",3,[["into",8,[["value",4]]]]]],["value",4]],[[["i8",0]],["value",4]],[[],["value",4]],[[["u8",0]],["value",4]],[[["i16",0]],["value",4]],[[["u16",0]],["value",4]],[[["i32",0]],["value",4]],[[["u32",0]],["value",4]],[[["i64",0]],["value",4]],[[["u64",0]],["value",4]],[[["i128",0]],["value",4]],[[["isize",0]],["value",4]],[[],["value",4]],[[]],[[["f32",0]],["value",4]],[[["f64",0]],["value",4]],[[["string",3]],["value",4]],[[["vec",3]],["value",4]],[[],["value",4]],[[["str",0]],["value",4]],[[["address",3]],["value",4]],[[["hashmap",3,[["string",3],["into",8,[["value",4]]]]]],["value",4]],[[["hashmap",3,[["str",0],["into",8,[["value",4]]]]]],["value",4]],[[],["value",4]],[[["vec",3]],["value",4]],[[],["value",4]],[[],["value",4]],[[["inttype",4],["",0]]],[[["floattype",4],["",0]]],[[["namespace",4],["",0]]],[[["typename",3],["",0]]],[[["address",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["value",4]],["bool",0]],[[["address",3]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],[[["datatype",4]],["bool",0]],null,null,[[["datatype",4],["datatype",4]],["bool",0]],[[["typename",3],["typename",3]],["bool",0]],[[["field",3],["field",3]],["bool",0]],[[["address",3],["address",3]],["bool",0]],[[["value",4],["value",4]],["bool",0]],null,[[["datatype",4]],["result",4]],[[["inttype",4]],["result",4]],[[["floattype",4]],["result",4]],[[["typename",3]],["result",4]],[[["field",3]],["result",4]],[[["address",3]],["result",4]],null,[[["inttype",4]],["usize",0]],[[["floattype",4]],["usize",0]],[[["datatype",4]],["result",4,[["option",4,[["usize",0]]],["notanarrayorpointererror",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["value",4]],["result",4,[["address",3],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4],["usize",0]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["f32",0],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["floatvalue",6],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["floatvalue",6],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["intvalue",6],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["intvalue",6],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["valuetypeerror",3]]]],[[["value",4]],["result",4,[["hashmap",3],["valuetypeerror",3]]]],[[["value",4]],["result",4,[["usize",0],["valuetypeerror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["hashmap",3]],["result",4,[["hashmap",3,[["",26,[["clone",8],["eq",8],["hash",8]]],["datatyperef",6]]],["builddatatypeserror",4,[["",26,[["clone",8],["eq",8],["hash",8]]]]]]]],[[["shallowfield",3,[["clone",8]]]],["shallowfield",3,[["clone",8]]]],[[["shallowdatatype",4,[["clone",8]]]],["shallowdatatype",4,[["clone",8]]]],[[["predatatype",3,[["clone",8]]]],["predatatype",3,[["clone",8]]]],[[["predatatypesize",4,[["clone",8]]]],["predatatypesize",4,[["clone",8]]]],[[["builddatatypeserror",4,[["clone",8]]]],["builddatatypeserror",4,[["clone",8]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["predatatype",3]],["vec",3]],[[["shallowfield",3,[["partialeq",8]]],["shallowfield",3]],["bool",0]],[[["shallowdatatype",4,[["partialeq",8]]],["shallowdatatype",4]],["bool",0]],[[["predatatypesize",4,[["partialeq",8]]],["predatatypesize",4]],["bool",0]],[[["shallowfield",3,[["debug",8]]],["formatter",3]],["result",6]],[[["shallowdatatype",4,[["debug",8]]],["formatter",3]],["result",6]],[[["predatatype",3,[["debug",8]]],["formatter",3]],["result",6]],[[["predatatypesize",4,[["debug",8]]],["formatter",3]],["result",6]],[[["builddatatypeserror",4,[["debug",8]]],["formatter",3]],["result",6]],[[["builddatatypeserror",4,[["display",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["hashmap",3]],["fn",8]],[[["predatatypesize",4,[["hash",8]]],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["builddatatypeserror",4],["fnonce",8]],["builddatatypeserror",4]],[[["shallowfield",3,[["partialeq",8]]],["shallowfield",3]],["bool",0]],[[["shallowdatatype",4,[["partialeq",8]]],["shallowdatatype",4]],["bool",0]],[[["predatatypesize",4,[["partialeq",8]]],["predatatypesize",4]],["bool",0]],null,[[["shallowdatatype",4,[["clone",8]]],["fn",8],["fn",8]],["result",4,[["datatyperef",6],["builddatatypeserror",4,[["clone",8]]]]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Address"],[4,"Value"],[4,"DataType"],[4,"FloatType"],[4,"IntType"],[4,"Namespace"],[3,"ValueTypeError"],[3,"TypeName"],[3,"Field"],[3,"NotAnArrayOrPointerError"],[13,"Int"],[13,"Float"],[13,"Name"],[13,"Pointer"],[13,"Array"],[13,"Struct"],[13,"Union"],[13,"Int"],[13,"Float"],[13,"String"],[13,"Address"],[13,"Struct"],[13,"Array"],[4,"ShallowDataType"],[4,"BuildDataTypesError"],[4,"PreDataTypeSize"],[3,"ShallowField"],[3,"PreDataType"],[13,"UndefinedTypeId"],[13,"CyclicDependency"],[13,"UnsizedArrayElement"],[13,"Known"],[13,"Defer"],[13,"DeferMult"],[13,"Alias"],[13,"Int"],[13,"Float"],[13,"Name"],[13,"Pointer"],[13,"Array"],[13,"Struct"],[13,"Union"]]},\
"wafel_layout":{"doc":"Defines a mapping from global variables to types/values.","t":[13,3,4,3,3,3,4,3,13,13,13,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["BuildDataTypesError","Constant","ConstantSource","DataLayout","DllLayout","DllLayoutError","DllLayoutErrorKind","DllSegment","DwarfReadError","Enum","FileReadError","Global","InvalidIndex","LayoutLookupError","LayoutLookupError","Macro","MissingAttribute","MissingDeclaration","MissingRawData","MissingRawDataArray","MissingSubrangeNode","NoDwarfInfo","ObjectReadError","ObjectStructInUse","ObjectStructNotStruct","RawDataNotUnion","SM64ExtrasError","UndefinedConstant","UndefinedGlobal","UndefinedTypeName","UnexpectedTag","UnknownBaseTypeName","add_sm64_extras","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","concrete_type","constant","constants","data_layout","data_type","data_type","data_type_mut","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","global","globals","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","kind","name","ne","ne","ne","new","read","read_dll_segments","segments","serialize","serialize","serialize","serialize","serialize","serialize","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_defns","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","value","virtual_address","virtual_size","name","0","0","0","0","actual","attribute","entry_label","entry_label","entry_label","expected","name","0","0","0","0","0","0"],"q":["wafel_layoutwafel_layout::ConstantSource","wafel_layout::DllLayoutErrorKind","","","","","","","","","","","wafel_layout::LayoutLookupError","","","wafel_layout::SM64ExtrasError","",""],"d":["","A constant’s value and source.","The source for a constant value.","A description of accessible variables and types.","Debugging and structural information extracted from a DLL.","","","A segment defined in the DLL.","","The constant is defined as an enum variant.","","A global variable or function.","","","","The constant is defined as a macro.","","","","","","","","","","","","","","","","","Load hardcoded SM64 data into the data layout.","The relative address of the variable, if known.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recursively look up a type name.","Look up the value of a constant.","The values of integer constants.","The data layout for the DLL.","Look up the definition of a type name.","The type of the global variable.","Look up the definition of a type name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Look up a global variable or function.","The types of global variables and functions.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The name of the segment.","","","","Create an empty data layout.","Construct a DllLayout from the DWARF debugging information …","Load segment definitions from the DLL.","The segments defined in the DLL.","","","","","","","The source for the constant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The definitions of structs, unions, and typedefs.","","","","","","","","","","","","The integer value for the constant.","The virtual address that the segment is loaded to.","The size that the segment has when loaded into memory.","The name of the enum, or None for an anonymous enum.","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,1,2,1,0,3,0,3,2,1,1,3,3,1,1,1,3,3,3,0,4,4,4,1,1,5,6,5,6,7,2,8,9,10,1,4,3,5,6,7,2,8,9,10,1,4,3,5,6,7,2,8,9,10,1,4,3,5,6,7,2,8,9,10,1,4,3,5,5,5,8,5,6,5,5,5,6,7,2,8,9,7,2,9,7,2,9,5,5,6,7,7,2,2,8,8,9,9,10,10,1,1,4,4,3,3,5,6,7,2,8,9,10,10,10,10,1,1,1,1,1,4,3,3,5,5,7,2,9,5,6,7,2,8,9,10,1,4,3,10,9,7,2,9,5,8,0,8,5,6,7,2,8,9,7,5,6,7,2,8,9,10,1,4,3,5,7,2,8,9,10,1,4,3,5,6,7,2,8,9,10,1,4,3,5,6,7,2,8,9,10,1,4,3,5,5,6,7,2,8,9,10,1,4,3,10,7,9,9,11,12,13,14,15,16,17,17,16,18,16,19,20,21,22,23,24,25],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["datalayout",3]],["result",4,[["sm64extraserror",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["datalayout",3]],["datalayout",3]],[[["global",3]],["global",3]],[[["constant",3]],["constant",3]],[[["constantsource",4]],["constantsource",4]],[[["dlllayout",3]],["dlllayout",3]],[[["dllsegment",3]],["dllsegment",3]],[[["dlllayouterror",3]],["dlllayouterror",3]],[[["dlllayouterrorkind",4]],["dlllayouterrorkind",4]],[[["layoutlookuperror",4]],["layoutlookuperror",4]],[[["sm64extraserror",4]],["sm64extraserror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["datalayout",3],["datatyperef",6]],["result",4,[["datatyperef",6],["layoutlookuperror",4]]]],[[["datalayout",3],["str",0]],["result",4,[["constant",3],["layoutlookuperror",4]]]],null,null,[[["datalayout",3],["typename",3]],["result",4,[["datatyperef",6],["layoutlookuperror",4]]]],null,[[["datalayout",3],["typename",3]],["result",4,[["datatyperef",6],["layoutlookuperror",4]]]],[[],["datalayout",3]],[[],["result",4,[["datalayout",3]]]],[[],["result",4,[["global",3]]]],[[],["result",4,[["constant",3]]]],[[],["result",4,[["constantsource",4]]]],[[],["result",4,[["dlllayout",3]]]],[[],["result",4,[["dllsegment",3]]]],[[["constant",3],["constant",3]],["bool",0]],[[["constantsource",4],["constantsource",4]],["bool",0]],[[["dllsegment",3],["dllsegment",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["datalayout",3],["formatter",3]],["result",6]],[[["datalayout",3],["formatter",3]],["result",6]],[[["global",3],["formatter",3]],["result",6]],[[["constant",3],["formatter",3]],["result",6]],[[["constant",3],["formatter",3]],["result",6]],[[["constantsource",4],["formatter",3]],["result",6]],[[["constantsource",4],["formatter",3]],["result",6]],[[["dlllayout",3],["formatter",3]],["result",6]],[[["dlllayout",3],["formatter",3]],["result",6]],[[["dllsegment",3],["formatter",3]],["result",6]],[[["dllsegment",3],["formatter",3]],["result",6]],[[["dlllayouterror",3],["formatter",3]],["result",6]],[[["dlllayouterror",3],["formatter",3]],["result",6]],[[["dlllayouterrorkind",4],["formatter",3]],["result",6]],[[["dlllayouterrorkind",4],["formatter",3]],["result",6]],[[["layoutlookuperror",4],["formatter",3]],["result",6]],[[["layoutlookuperror",4],["formatter",3]],["result",6]],[[["sm64extraserror",4],["formatter",3]],["result",6]],[[["sm64extraserror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["error",3]],["dlllayouterror",3]],[[["error",3]],["dlllayouterror",3]],[[["error",4]],["dlllayouterror",3]],[[["error",3]],["dlllayouterrorkind",4]],[[["builddatatypeserror",4,[["string",3]]]],["dlllayouterrorkind",4]],[[["error",4]],["dlllayouterrorkind",4]],[[["error",3]],["dlllayouterrorkind",4]],[[]],[[]],[[]],[[["layoutlookuperror",4]],["sm64extraserror",4]],[[["datalayout",3],["str",0]],["result",4,[["global",3],["layoutlookuperror",4]]]],null,[[["constant",3],["",0]]],[[["constantsource",4],["",0]]],[[["dllsegment",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["constant",3],["constant",3]],["bool",0]],[[["constantsource",4],["constantsource",4]],["bool",0]],[[["dllsegment",3],["dllsegment",3]],["bool",0]],[[],["datalayout",3]],[[["asref",8,[["path",3]]]],["result",4,[["dlllayout",3],["dlllayouterror",3]]]],[[["asref",8,[["path",3]]]],["result",4,[["vec",3,[["dllsegment",3]]],["dlllayouterror",3]]]],null,[[["datalayout",3]],["result",4]],[[["global",3]],["result",4]],[[["constant",3]],["result",4]],[[["constantsource",4]],["result",4]],[[["dlllayout",3]],["result",4]],[[["dllsegment",3]],["result",4]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"DllLayoutErrorKind"],[4,"ConstantSource"],[4,"SM64ExtrasError"],[4,"LayoutLookupError"],[3,"DataLayout"],[3,"Global"],[3,"Constant"],[3,"DllLayout"],[3,"DllSegment"],[3,"DllLayoutError"],[13,"Enum"],[13,"FileReadError"],[13,"ObjectReadError"],[13,"DwarfReadError"],[13,"BuildDataTypesError"],[13,"UnexpectedTag"],[13,"MissingAttribute"],[13,"MissingSubrangeNode"],[13,"UnknownBaseTypeName"],[13,"UndefinedTypeName"],[13,"UndefinedGlobal"],[13,"UndefinedConstant"],[13,"LayoutLookupError"],[13,"MissingRawDataArray"],[13,"InvalidIndex"]]},\
"wafel_memory":{"doc":"Abstractions for reading and writing values to game memory.","t":[13,13,3,13,4,3,3,3,3,8,13,13,4,8,8,8,8,13,13,13,13,16,16,16,16,8,13,13,13,13,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,10,11,10,10,10,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["Context","DlOpenError","DllGameMemory","DllLayoutError","DllLoadError","DllSlot","DllSlotMemoryView","DllSlotMemoryViewMut","DllStaticMemoryView","GameMemory","InvalidAddress","IoError","MemoryError","MemoryRead","MemoryReadPrimitive","MemoryWrite","MemoryWritePrimitive","MissingDataSegments","NonStaticAddressInStaticView","ReadUnion","ReadUnsizedArray","Slot","SlotView","SlotViewMut","StaticView","SymbolLookup","UndefinedSymbol","UndefinedTypeName","ValueTypeError","WriteExtraField","WriteMissingField","WriteToStaticAddress","WriteUnion","advance_base_slot","advance_base_slot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copy_slot","copy_slot","create_backup_slot","create_backup_slot","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","is_base_slot","load","read_address","read_address","read_address","read_address","read_address","read_float","read_int","read_primitive","read_primitive","read_primitive","read_primitive","read_string","read_string","read_value","read_value","static_view","static_view","symbol_address","symbol_address","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_slot","with_slot","with_slot_mut","with_slot_mut","write_address","write_address","write_address","write_float","write_int","write_primitive","write_primitive","write_value","write_value","0","0","0","0","0","0","0","0","context","error"],"q":["wafel_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_memory::DllLoadError","","","","wafel_memory::MemoryError","","","","",""],"d":["","","Memory management for a loaded DLL and backup slots.","","","A slot for DllGameMemory.","A read-only view of both static and non-static memory, …","A read-write view of both static and non-static memory, …","A read-only view of shared static memory.","A trait that allows accessing game memory and …","","","","Trait for a view of memory that allows reading values by …","A helper trait for implementing MemoryRead.","Trait for a view of memory that allows writing values by …","A helper trait for implementing MemoryWrite.","","","","","A buffer that can hold a copy of non-static memory.","A read-only view of both static and non-static memory, …","A read-write view of both static and non-static memory, …","A read-only view of shared static memory.","Trait for looking up a symbol’s address.","","","","","","","","Advance the base slot by one frame.","","","","","","","","","","","","","","","","","","","","Copy data from one slot to another.","","Allocate a new backup slot.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the slot is the base slot for its …","Load a DLL and return a DllGameMemory and its base slot.","Read an address value from the given address.","Read an address from memory.","","","","Read a float from the given address.","Read an int from the given address.","Read a primitive value from memory.","","","","Read a null terminated C string from the given address.","Read a null terminated C string from the given address.","Read a value of the given type.","Read a value of the given type.","Return a read-only view of shared static memory.","","Look up a symbol’s address.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a read-only view of both static and non-static …","","Return a read-write view of both static and non-static …","","Write an address value at the given address.","Write an address to memory.","","Write a float at the given address.","Write an int at the given address.","Write a primitive value to memory.","","Write a value of the given type.","Write a value of the given type.","","","","","","","","","",""],"i":[1,2,0,2,0,0,0,0,0,0,1,2,0,0,0,0,0,2,1,1,1,3,3,3,3,0,2,1,1,1,1,1,1,3,4,5,4,6,7,8,1,2,5,4,6,7,8,1,2,1,2,1,2,3,4,3,4,5,4,6,7,8,1,1,2,2,5,4,6,7,8,1,1,2,2,2,2,5,4,6,7,8,1,2,5,4,9,10,6,7,8,9,9,10,6,7,8,9,9,9,9,3,4,11,4,1,2,1,2,5,4,6,7,8,1,2,5,4,6,7,8,1,2,5,4,6,7,8,1,2,3,4,3,4,12,13,8,12,12,13,8,12,12,14,15,16,17,18,19,20,21,22,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["dllgamememory",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["memoryerror",4]],["memoryerror",4]],[[["dllloaderror",4]],["dllloaderror",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]]],[[["dllgamememory",3]]],[[["",0]]],[[["dllgamememory",3]]],[[["dllslot",3],["formatter",3]],["result",6]],[[["dllgamememory",3],["formatter",3]],["result",6]],[[["dllstaticmemoryview",3],["formatter",3]],["result",6]],[[["dllslotmemoryview",3],["formatter",3]],["result",6]],[[["dllslotmemoryviewmut",3],["formatter",3]],["result",6]],[[["memoryerror",4],["formatter",3]],["result",6]],[[["memoryerror",4],["formatter",3]],["result",6]],[[["dllloaderror",4],["formatter",3]],["result",6]],[[["dllloaderror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["valuetypeerror",3]],["memoryerror",4]],[[]],[[]],[[["dlllayouterror",3]],["dllloaderror",4]],[[["error",4]],["dllloaderror",4]],[[["error",3]],["dllloaderror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dllslot",3]],["bool",0]],[[["str",0],["str",0],["str",0]],["result",4,[["dllloaderror",4]]]],[[["",0],["address",3]],["result",4,[["address",3],["memoryerror",4]]]],[[["",0],["address",3]],["result",4,[["address",3],["memoryerror",4]]]],[[["dllstaticmemoryview",3],["address",3]],["result",4,[["address",3],["memoryerror",4]]]],[[["dllslotmemoryview",3],["address",3]],["result",4,[["address",3],["memoryerror",4]]]],[[["dllslotmemoryviewmut",3],["address",3]],["result",4,[["address",3],["memoryerror",4]]]],[[["",0],["address",3],["floattype",4]],["result",4,[["floatvalue",6],["memoryerror",4]]]],[[["",0],["address",3],["inttype",4]],["result",4,[["intvalue",6],["memoryerror",4]]]],[[["",0],["address",3]],["result",4,[["copy",8],["memoryerror",4]]]],[[["dllstaticmemoryview",3],["address",3]],["result",4,[["copy",8],["memoryerror",4]]]],[[["dllslotmemoryview",3],["address",3]],["result",4,[["copy",8],["memoryerror",4]]]],[[["dllslotmemoryviewmut",3],["address",3]],["result",4,[["copy",8],["memoryerror",4]]]],[[["",0],["address",3]],["result",4,[["vec",3,[["u8",0]]],["memoryerror",4]]]],[[["",0],["address",3]],["result",4,[["vec",3,[["u8",0]]],["memoryerror",4]]]],[[["",0],["address",3],["datatyperef",6],["fnmut",8]],["result",4,[["value",4],["memoryerror",4]]]],[[["",0],["address",3],["datatyperef",6],["fnmut",8]],["result",4,[["value",4],["memoryerror",4]]]],[[["",0]]],[[["dllgamememory",3]]],[[["",0],["str",0]],["option",4,[["address",3]]]],[[["dllgamememory",3],["str",0]],["option",4,[["address",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["dllgamememory",3]]],[[["",0]]],[[["dllgamememory",3]]],[[["",0],["address",3],["address",3]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["address",3]],["result",4,[["memoryerror",4]]]],[[["dllslotmemoryviewmut",3],["address",3],["address",3]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["floattype",4],["floatvalue",6]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["inttype",4],["intvalue",6]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["copy",8]],["result",4,[["memoryerror",4]]]],[[["dllslotmemoryviewmut",3],["address",3],["copy",8]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["datatyperef",6],["value",4],["fnmut",8]],["result",4,[["memoryerror",4]]]],[[["",0],["address",3],["datatyperef",6],["value",4],["fnmut",8]],["result",4,[["memoryerror",4]]]],null,null,null,null,null,null,null,null,null,null],"p":[[4,"MemoryError"],[4,"DllLoadError"],[8,"GameMemory"],[3,"DllGameMemory"],[3,"DllSlot"],[3,"DllStaticMemoryView"],[3,"DllSlotMemoryView"],[3,"DllSlotMemoryViewMut"],[8,"MemoryRead"],[8,"MemoryReadPrimitive"],[8,"SymbolLookup"],[8,"MemoryWrite"],[8,"MemoryWritePrimitive"],[13,"DlOpenError"],[13,"IoError"],[13,"DllLayoutError"],[13,"UndefinedSymbol"],[13,"ValueTypeError"],[13,"UndefinedTypeName"],[13,"WriteExtraField"],[13,"WriteMissingField"],[13,"Context"]]},\
"wafel_timeline":{"doc":"The Wafel timeline algorithm, which allows its TAS rewind …","t":[16,8,3,4,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Error","GameController","GameTimeline","InvalidatedFrames","None","StartingAt","apply","balance_distribution","borrow","borrow","borrow_mut","borrow_mut","cached_frames","clear","clone","clone_into","controller","delete_hotspot","earliest_error","eq","equivalent","fmt","fmt","frame","frame_checked","frame_mut","frame_mut_checked","from","from","hash","include","into","into","into_parts","invalidate_frame","memory","ne","new","set_hotspot","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","union","vzip","vzip","with_controller_mut","0"],"q":["wafel_timeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wafel_timeline::InvalidatedFrames"],"d":["Error type if the controller fails to apply edits.","Applies edits at the end of each frame to control the game.","An implementation of the Wafel timeline algorithm.","A set of frames that should be invalidated after a …","No frames need to be invalidated.","Invalidate states at and after the given frame.","Apply edits to the given state.","Perform housekeeping to improve scrolling near hotspots.","","","","","Return the currently loaded frames for debugging purposes.","Set <code>self</code> to None.","","","Return an immutable reference to the underlying controller.","Delete a hotspot with the given name, if it exists.","Return the earliest error that is encountered in the …","","","","","Return a slot holding the state for the given frame, and …","Return a slot holding the state for the given frame.","Return a mutable slot holding the state for the given …","Return a mutable slot holding the state for the given …","Returns the argument unchanged.","Returns the argument unchanged.","","Include <code>frame</code> in the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destruct into the memory, base slot, and controller.","Invalidate a frame and all frames after it.","Return a reference to the underlying game memory.","","Construct a new GameTimeline.","Set a hotspot with a given name.","","","","","","","","The union of two sets of frames.","","","Make changes to the underlying controller.",""],"i":[1,0,0,0,2,2,1,3,2,3,2,3,3,2,2,2,3,3,3,2,2,2,3,3,3,3,3,2,3,2,2,2,3,3,3,3,2,3,3,2,2,3,2,3,2,3,2,2,3,3,4],"f":[null,null,null,null,null,null,[[["",0],["",0],["u32",0]],["vec",3]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["duration",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]]],["vec",3,[["u32",0]]]],[[["invalidatedframes",4]]],[[["invalidatedframes",4]],["invalidatedframes",4]],[[["",0],["",0]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]]],["",0]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["str",0]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0]],["option",4]],[[["invalidatedframes",4],["invalidatedframes",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["invalidatedframes",4],["formatter",3]],["result",6]],[[["gametimeline",3,[["",26,[["debug",8],["gamememory",8]]],["",26,[["debug",8],["gamecontroller",8,[["",26,[["debug",8],["gamememory",8]]]]]]]]],["formatter",3]],["result",6]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0],["bool",0]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0],["bool",0]],["result",4]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0],["bool",0]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0],["bool",0]],["result",4]],[[]],[[]],[[["invalidatedframes",4],["",0]]],[[["invalidatedframes",4],["u32",0]]],[[]],[[]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["u32",0]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]]],["",0]],[[["invalidatedframes",4],["invalidatedframes",4]],["bool",0]],[[["gamememory",8],["gamecontroller",8,[["gamememory",8]]],["usize",0]],["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["str",0],["u32",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["invalidatedframes",4],["invalidatedframes",4]],["invalidatedframes",4]],[[]],[[]],[[["gametimeline",3,[["gamememory",8],["gamecontroller",8,[["gamememory",8]]]]],["fnonce",8]]],null],"p":[[8,"GameController"],[4,"InvalidatedFrames"],[3,"GameTimeline"],[13,"StartingAt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
