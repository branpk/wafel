var searchIndex = JSON.parse('{\
"fast3d":{"doc":"Decoding, interpreting, and rendering of Nintendo 64 â€¦","t":"ENNNNNLLLLAALLLLALALLLLLLASSEENNNNNNNNEEEDSSSSSSNNNNEDEDNNENNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNEDSSNDNNNNNDNSNNDENNNNSSSNNSNEENNNNSNNNNNNNNNNNNNNNENNNNNDNNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNNDSSNNNNNNNNNNNNNNNNNENNNNSSSNNNNDEEEEDNDDDNNDNSNNSESSNNMLLMMMMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLMLLMMLLLMLLMMMMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMNEDDNNLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMNNEDEQDQIDNNNNDDQNDDNNNDDDENMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMFLLLLLLLLLLLLLMLLMMMMMMKKKKLLMMKMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLMMMMMLMMDLLLLLLLLLLLLLLGDRRDDDDFFLLLLLLLLLLLLLLLLLLLMMMMFFMLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLMMMLLMLLFFFFFFFFLLLFMLFMLLLLLMLLLLLLLLLLLLLLLLLLLLLLM","n":["F3DError","InvalidCommand","InvalidTMemOffset","InvalidVertexIndex","MissingSetTextureImage","MultipleFillColors","borrow","borrow_mut","clone","clone_into","cmd","decode","downcast","fmt","fmt","from","interpret","into","render","to_owned","to_string","try_from","try_into","type_id","upcast","util","ALPHA_CVG_SEL","ANTI_ALIASING","AlphaCompare","AlphaDither","Average","Bayer","Bilerp","Bits16","Bits32","Bits4","Bits8","Blend","BlendAlpha1","BlendAlpha2","BlendColor","BlendMode","CLAMP","CLEAR_ON_CVG","CLIPPING","CULL_BACK","CULL_FRONT","CVG_X_ALPHA","CenterOrScaleOrOne","Ci","Clamp","Clamp","ColorCombineComponent","ColorCombineMode","ColorDither","CombineMode","CombinedAlphaOrNoiseOrK4OrZero","CombinedOrPrimLodFraction","ComponentSize","Conv","Copy","CvgDst","CycleType","DD","DPFillRectangle","DPFullSync","DPLoadBlock","DPLoadSync","DPLoadTLUTCmd","DPLoadTile","DPPipeSync","DPPipelineMode","DPSetAlphaCompare","DPSetAlphaDither","DPSetBlendColor","DPSetColorDither","DPSetColorImage","DPSetCombineKey","DPSetCombineMode","DPSetConvert","DPSetCycleType","DPSetDepthImage","DPSetDepthSource","DPSetEnvColor","DPSetFillColor","DPSetFogColor","DPSetKeyGB","DPSetKeyR","DPSetOtherMode","DPSetPrimColor","DPSetPrimDepth","DPSetRenderMode","DPSetScissor","DPSetTextureConvert","DPSetTextureDetail","DPSetTextureFilter","DPSetTextureImage","DPSetTextureLOD","DPSetTextureLUT","DPSetTexturePersp","DPSetTile","DPSetTileSize","DPTextureRectangle","DPTextureRectangleFlip","DPTileSync","Decal","DepthSource","Detail","Disable","Disable","Dither","Env","EnvAlpha","EvenInterlace","F3DCommand","F3DWrapMode","FOG","FORCE_BLEND","Fill","FillColor","Filt","FiltConv","Fog","Fog","Full","GeometryModes","I","IMAGE_READ","Ia","Ia16","Image","ImageFormat","Input","Input","Interpenetrating","K5","LIGHTING","LOAD","LOD","Load","LodFraction","MIRROR","MagicSq","MatrixMode","MatrixOp","Memory","Memory","ModelView","Mul","NO_OP","NPrimitive","NoOp","Noise","Noise","NonInterlace","None","None","NotPattern","OddInterlace","One","OneCycle","OneMinusAlpha","OnePrimitive","Opaque","Pattern","PipelineMode","Pixel","Point","Prim","Prim","PrimAlpha","PrimDepth","PrimLodFraction","Proj","RENDER","RM_AA_DEC_LINE","RM_AA_OPA_SURF","RM_AA_OPA_TERR","RM_AA_PCL_SURF","RM_AA_SUB_SURF","RM_AA_SUB_TERR","RM_AA_TEX_EDGE","RM_AA_TEX_TERR","RM_AA_XLU_LINE","RM_AA_XLU_SURF","RM_AA_ZB_DEC_LINE","RM_AA_ZB_OPA_DECAL","RM_AA_ZB_OPA_INTER","RM_AA_ZB_OPA_SURF","RM_AA_ZB_OPA_TERR","RM_AA_ZB_PCL_SURF","RM_AA_ZB_SUB_SURF","RM_AA_ZB_SUB_TERR","RM_AA_ZB_TEX_EDGE","RM_AA_ZB_TEX_INTER","RM_AA_ZB_TEX_TERR","RM_AA_ZB_XLU_DECAL","RM_AA_ZB_XLU_INTER","RM_AA_ZB_XLU_LINE","RM_AA_ZB_XLU_SURF","RM_ADD","RM_CLD_SURF","RM_CUSTOM_AA_ZB_XLU_SURF","RM_NOOP","RM_OPA_CI","RM_OPA_SURF","RM_PCL_SURF","RM_RA_OPA_SURF","RM_RA_ZB_OPA_DECAL","RM_RA_ZB_OPA_SURF","RM_TEX_EDGE","RM_VISCVG","RM_XLU_SURF","RM_ZB_CLD_SURF","RM_ZB_OPA_DECAL","RM_ZB_OPA_SURF","RM_ZB_OVL_SURF","RM_ZB_PCL_SURF","RM_ZB_XLU_DECAL","RM_ZB_XLU_SURF","Rectangle","RenderMode","RenderModeFlags","Rgba","Rgba16","Rgba32","SHADE","SHADING_SMOOTH","SPBranchList","SPClearGeometryMode","SPDisplayList","SPEndDisplayList","SPFogFactor","SPLight","SPMatrix","SPNumLights","SPOneTriangle","SPPerspNormalize","SPPopMatrix","SPSegment","SPSetGeometryMode","SPTexture","SPVertex","SPViewport","Save","ScissorMode","Shade","Shade","ShadeAlpha","Sharpen","TEXTURE_ENABLE","TEXTURE_GEN","TEXTURE_GEN_LINEAR","Texel0","Texel0Alpha","Texel1","Texel1Alpha","TextureBlock","TextureConvert","TextureDetail","TextureFilter","TextureLUT","TextureRectangle","Threshold","TileIndex","TileParams","TileSize","Translucent","TwoCycle","Unimplemented","Unknown","WRAP","Wrap","Yuv","ZBUFFER","ZMode","Z_COMPARE","Z_UPDATE","Zero","Zero","a","all","all","alpha1","alpha1","alpha2","alpha2","args","b","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","blend_cycle1","blend_cycle2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cms","cmt","color1","color1","color2","color2","complement","complement","contains","contains","cvg_dst","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","difference","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dsdx","dtdy","dxt","dz","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_rgb_a","g","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","img","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","line","lrs","lrs","lrt","lrx","lry","masks","maskt","mirror","not","not","num_bits","one_cycle","palette","partial_cmp","partial_cmp","r","rect","remove","remove","rgb","s","set","set","shifts","shiftt","size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","t","tile","tmem","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uls","uls","ult","ult","ulx","uly","union","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","w0","w1","width","z","z_mode","base","flag","level","light","matrix","mode","mul","n","n","offset","on","op","push","sc","seg","tc","tile","v","v0","v0","v1","v2","Complete","DecodeResult","F3DCommandIter","RawF3DCommand","TextureRectangle1","TextureRectangle2","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode_f3d_command","decode_f3d_display_list","downcast","downcast","downcast","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","into","into","into","into_iter","is_complete","next","next","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","upcast","upcast","upcast","w0","w1","w1_ptr","flip","flip","rect","rect","s","t","tile","tile","Back","Clamp","ColorArg","ColorExpr","CullMode","DlIter","DrawCommand","Error","F3DMemory","F3DRenderData","Front","Input","MirrorRepeat","None","PipelineId","PipelineInfo","Ptr","Repeat","SamplerState","ScreenRectangle","Texel0","Texel0Alpha","Texel1","TextureData","TextureIndex","TextureState","WrapMode","Zero","a","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commands","cull_mode","data","dbg_constant","dbg_gradient","decal","default","default","default","default","default","default","default","default","default","depth_compare","depth_write","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fog","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","interpret_f3d_display_list","into","into","into","into","into","into","into","into","into","into","into","into","into","linear_filter","new","new","noise","num_inputs","num_vertices","output_color","pipeline","pipelines","read_dl","read_u16","read_u32","read_u8","read_vertices","read_vertices_default","rgb","rgba8","root_dl","sampler","scissor","screen_size","screen_top_left","texture_edge","textures","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_wrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","used_textures","uses_textures","v_wrap","vertex_buffer","viewport","w","width","with_buffer","x","y","F3DRenderer","borrow","borrow_mut","downcast","fmt","from","into","new","prepare","render","render_command_range","try_from","try_into","type_id","upcast","Angle","Light","M_PI_32","M_PI_64","MatrixStack","Matrixf","Vertex","Viewport","atan2f","atan2s","billboard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cn","color","color_copy","cols","coss","cross","cur","default","default","default","default","default","dir","dot","dot3","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fixed","from_rows","from_rows_vec3","get_hash","get_hash","get_hash","hash","hash","hash","identity","into","into","into","into","into","invert_isometry","look_at","mul","mul","normalize","normalize3","ortho","pad1","pad2","pad3","perspective","pop","pos","pos_from_transform_mtx","push_mul","read_ia16","read_ia4","read_ia8","read_light","read_matrix","read_rgba16","read_viewport","rgba_16_to_32","rotate_xy","rotate_xyz_and_translate","rotate_zxy_and_translate","scalar_mul","scale","scale_vec3f","sins","stack","to_fixed","to_owned","to_owned","to_owned","to_owned","trans","translate","transpose","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","uv"],"q":[[0,"fast3d"],[26,"fast3d::cmd"],[1203,"fast3d::cmd::F3DCommand"],[1225,"fast3d::decode"],[1287,"fast3d::decode::DecodeResult"],[1295,"fast3d::interpret"],[1613,"fast3d::render"],[1628,"fast3d::util"],[1773,"core::fmt"],[1774,"core::fmt"],[1775,"core::result"],[1776,"core::any"],[1777,"core::option"],[1778,"core::clone"],[1779,"core::cmp"],[1780,"core::default"],[1781,"core::cmp"],[1782,"core::fmt"],[1783,"core::marker"],[1784,"core::hash"],[1785,"core::marker"],[1786,"alloc::vec"],[1787,"wgpu"],[1788,"wgpu"],[1789,"wgpu"]],"d":["","","","","","","","","","","Rust types representing Fast3D commands.","Fast3D command decoding.","","","","Returns the argument unchanged.","A display list interpreter that produces a self-contained â€¦","Calls <code>U::from(self)</code>.","A wgpu renderer for the data produced by crate::interpret.","","","","","","","Utilities for working with Fast3D-related data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A decoded Fast3D command.","","","","","Either rgba5551 or zdz (z = 14 bits, dz = 2 bits)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","","[A, B, C, D]  -&gt;  (A - B) * C + D","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","Toggles the set of flagseturns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","Returns an empty set of flagseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-placeeturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result of decoding a raw command.","","A raw Fast3D command for decoding.","","","","","","","","","","","","","Decodes a raw Fast3D command.","Decodes a stream of RawF3DCommands into a stream of â€¦","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the command is fully decoded and â€¦","If the command is not yet complete, continue decoding â€¦","","","","","","","","","","","","","Returns the decoded command.","","","","","","","","","","","","","","","","","An argument to ColorExpr.","An expression for the fragment color output.","","An iterator over a display list that is read from memory.","One triangle list draw call.","Error that can be thrown when reading from memory.","A trait with methods for reading from game memory.","An object containing processed render data from a display â€¦","","The i-th vertex input (after pos/uv/fog).","","","An id for the pipeline state of a draw call.","The pipeline state used for a draw call.","The pointer type that can be read from a display list â€¦","","Sampling parameters for a texture.","A rectangle in screen space.","The rgba value from texture 0.","The alpha value from texture 0, repeated to a vec4.","The rgba value from texture 1.","Rgba8 texture buffer.","An id for a loaded texture.","Texture pixel data and sampling parameters.","","(0, 0, 0, 0)","Expression for calculating alpha. (Take .a after â€¦","Use standard alpha blending.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The draw calls to issue.","Face cull mode.","","","","We are drawing a decal, so z values should be offset to â€¦","","","","","","","","","","Enable standard depth buffer compare.","Enable updates to the depth buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable fog. This is calculated as mix(color, fog.rgb, â€¦","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Texture height in pixels.","Processes <code>memory.root_dl()</code> and returns draw data in a â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an empty F3DRenderData.","","Enable random dithering (e.g. SM64 vanish cap effect).","The number of vec4 inputs after pos/uv/fog.","","Expression for calculating fragment output color.","","Pipeline modes that are used by the commands.","Reads a child display list from memory at the given â€¦","Reads dst.len() u16s from memory, starting at ptr + offset â€¦","Reads dst.len() u32s from memory, starting at ptr + offset â€¦","Reads dst.len() u8s from memory, starting at ptr + offset â€¦","Reads dst.len() vertices from memory, starting at ptr + â€¦","Reads dst.len() vertices from memory, starting at ptr + â€¦","Expression for calculating rgb. (Truncate to vec3 after â€¦","Rgba8 color data (32 bits per pixel).","Returns the top level display list to be interpreted.","","","The screen size in pixels.","The offset of the screen from the top left corner in â€¦","Uses an alpha edge mask, so fragments with low alpha â€¦","Textures that are used by the commands.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which texture bindings should be enabled. DrawCommand â€¦","Returns true if either texture is used.","","","","","Texture width in pixels.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","fov_y is in degrees","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,0,11,11,0,0,22,20,22,37,37,37,37,32,0,0,0,0,45,11,10,10,10,11,40,36,24,29,0,0,0,0,40,40,0,21,25,0,0,37,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,30,0,24,19,20,27,40,40,50,0,0,10,11,25,0,21,21,32,33,29,0,36,11,36,23,0,0,32,33,30,40,10,48,10,18,40,45,20,0,0,32,34,17,18,9,26,14,19,20,50,23,27,19,50,34,25,34,26,30,19,0,28,22,28,40,40,0,40,17,48,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,36,23,0,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,29,0,33,40,40,24,10,10,10,40,40,40,40,0,0,0,0,0,0,27,0,0,0,30,25,0,14,45,29,36,10,0,11,11,33,40,41,10,11,31,38,31,38,39,41,10,11,10,11,10,11,10,11,10,11,10,11,10,11,9,9,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,45,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,10,11,44,44,31,38,31,38,10,11,10,11,9,10,19,20,21,22,23,24,25,26,27,28,9,36,37,38,39,40,41,42,43,44,45,47,50,10,11,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,51,46,49,10,11,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,14,14,16,16,17,17,18,18,10,10,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,9,9,11,11,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,10,11,9,14,16,17,18,10,10,10,10,10,19,20,21,22,23,24,25,26,27,28,9,11,11,11,11,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,35,44,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,39,39,40,41,42,43,44,45,45,46,47,48,49,50,51,10,11,10,11,10,11,10,11,41,41,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,35,10,11,10,11,10,11,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,10,11,10,11,44,46,47,47,43,43,44,44,45,10,11,37,38,44,10,11,41,51,10,11,41,51,10,11,44,44,35,44,10,11,10,11,10,11,51,51,44,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,10,11,14,16,17,17,18,18,10,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,9,9,11,29,29,30,30,31,32,32,33,33,34,34,35,36,36,37,37,38,39,40,40,41,42,43,44,45,46,47,48,49,50,50,51,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,36,37,40,50,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,46,47,46,47,43,43,10,11,14,16,17,18,10,19,20,21,22,23,24,25,26,27,28,9,11,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,16,16,35,49,9,102,103,104,105,106,106,107,105,108,107,104,106,106,104,102,104,104,108,108,103,103,103,67,0,0,0,67,67,66,67,69,66,67,69,66,67,66,67,0,0,66,67,69,66,67,66,66,67,67,66,67,69,66,67,69,66,67,66,67,66,67,69,69,67,67,69,66,67,66,67,69,66,67,69,66,67,69,67,66,67,69,66,66,66,109,110,109,110,110,110,109,110,74,81,0,0,0,84,0,84,0,0,74,76,81,74,0,0,84,81,0,0,76,76,76,0,0,0,0,76,75,73,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,73,78,79,79,73,73,74,75,76,78,79,80,81,83,73,73,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,71,72,73,74,75,76,77,78,79,80,81,82,83,73,71,72,73,74,75,76,77,78,79,80,81,81,82,83,72,73,74,75,76,77,78,79,80,81,82,83,83,72,73,74,75,76,77,78,79,80,81,82,83,79,0,71,72,73,74,75,76,77,78,79,80,81,82,83,80,71,79,73,73,82,73,82,71,84,84,84,84,84,84,75,79,84,78,82,71,71,73,71,82,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,71,72,73,74,75,76,77,78,79,80,81,82,83,80,71,72,73,74,75,76,77,78,79,80,81,82,83,73,73,80,82,82,83,79,82,83,83,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,0,0,0,0,0,0,0,0,97,97,100,98,88,99,97,100,98,88,99,97,98,88,99,97,98,88,99,88,99,99,97,0,0,100,97,100,98,88,99,99,0,0,97,100,98,88,99,97,98,88,99,98,98,88,88,99,99,100,97,100,98,88,99,97,100,98,88,99,97,97,97,98,88,99,98,88,99,97,97,100,98,88,99,97,97,97,97,0,0,97,99,99,99,97,100,88,97,100,0,0,0,0,0,0,0,0,97,97,97,0,98,97,0,100,97,97,98,88,99,98,97,97,97,100,98,88,99,97,100,98,88,99,97,100,98,88,99,97,100,98,88,99,88],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],0,0,[-1,-2,[],[]],[[1,3],4],[[1,3],4],[-1,-1,[]],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,5,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],11],0,0,0,0,0,0,[[10,10],10],[[11,11],11],[[10,10],2],[[11,11],2],[[10,10],10],[[11,11],11],[[10,10],2],[[11,11],2],[10,12],[11,13],[[10,10],10],[[11,11],11],[[10,10],2],[[11,11],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[14,[-1]]],[[14,[-1]]],15],[16,16],[17,17],[18,18],[10,10],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[9,9],[11,11],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[[[35,[-1]]],[[35,[-1]]],15],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[[[43,[-1]]],[[43,[-1]]],15],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[10,10],52],[[11,11],52],0,0,0,0,0,0,[10,10],[11,11],[[10,10],53],[[11,11],53],0,[[],10],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],9],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],[[43,[-1]]],54],[[],44],[[],45],[[],47],[[],50],[[10,10],10],[[11,11],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],10],[[],11],[[[14,[-1]],[14,[-1]]],53,55],[[16,16],53],[[17,17],53],[[18,18],53],[[10,10],53],[[19,19],53],[[20,20],53],[[21,21],53],[[22,22],53],[[23,23],53],[[24,24],53],[[25,25],53],[[26,26],53],[[27,27],53],[[28,28],53],[[9,9],53],[[11,11],53],[[29,29],53],[[30,30],53],[[31,31],53],[[32,32],53],[[33,33],53],[[34,34],53],[[[35,[-1]],[35,[-1]]],53,55],[[36,36],53],[[37,37],53],[[38,38],53],[[39,39],53],[[40,40],53],[[41,41],53],[[42,42],53],[[[43,[-1]],[43,[-1]]],53,55],[[44,44],53],[[45,45],53],[[46,46],53],[[47,47],53],[[48,48],53],[[49,49],53],[[50,50],53],[[51,51],53],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[10,-1],2,56],[[11,-1],2,56],0,[[[14,[-1]],3],4,57],[[16,3],4],[[17,3],4],[[18,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[19,3],4],[[20,3],4],[[21,3],4],[[22,3],4],[[23,3],4],[[24,3],4],[[25,3],4],[[26,3],4],[[27,3],4],[[28,3],4],[[9,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[11,3],4],[[29,3],4],[[30,3],4],[[31,3],4],[[32,3],4],[[33,3],4],[[34,3],4],[[[35,[-1]],3],4,57],[[36,3],4],[[37,3],4],[[38,3],4],[[39,3],4],[[40,3],4],[[41,3],4],[[42,3],4],[[[43,[-1]],3],4,57],[[44,3],4],[[45,3],4],[[46,3],4],[[47,3],4],[[48,3],4],[[49,3],4],[[50,3],4],[[51,3],4],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,39],[[[59,[58]]],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[58,45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[8,[10]]]],[13,[[8,[11]]]],[12,10],[13,11],[12,10],[13,11],[-1,10,56],[-1,11,56],[[[59,[58]],58],41],0,[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[[14,[-1]],-2],2,61,64],[[16,-1],2,64],[[17,-1],2,64],[[18,-1],2,64],[[10,-1],2,64],[[19,-1],2,64],[[20,-1],2,64],[[21,-1],2,64],[[22,-1],2,64],[[23,-1],2,64],[[24,-1],2,64],[[25,-1],2,64],[[26,-1],2,64],[[27,-1],2,64],[[28,-1],2,64],[[9,-1],2,64],[[11,-1],2,64],[[29,-1],2,64],[[30,-1],2,64],[[31,-1],2,64],[[32,-1],2,64],[[33,-1],2,64],[[34,-1],2,64],[[[35,[-1]],-2],2,61,64],[[36,-1],2,64],[[37,-1],2,64],[[38,-1],2,64],[[39,-1],2,64],[[40,-1],2,64],[[41,-1],2,64],[[42,-1],2,64],[[[43,[-1]],-2],2,61,64],[[44,-1],2,64],[[45,-1],2,64],[[46,-1],2,64],[[47,-1],2,64],[[48,-1],2,64],[[49,-1],2,64],[[50,-1],2,64],[[51,-1],2,64],0,[[10,10],2],[[11,11],2],[[10,10],10],[[11,11],11],[[10,10],53],[[11,11],53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,53],[11,53],[10,53],[11,53],0,0,0,0,0,0,0,0,0,[10,10],[11,11],[37,12],[[39,39],38],0,[[10,10],[[8,[52]]]],[[11,11],[[8,[52]]]],0,0,[[10,10],2],[[11,11],2],[41,[[59,[58]]]],0,[[10,10,53],2],[[11,11,53],2],0,0,0,0,[[10,10],10],[[11,11],11],[[10,10],2],[[11,11],2],[[10,10],10],[[11,11],11],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,10],2],[[11,11],2],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[17,[65,[17]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[18,[65,[18]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[19,[65,[19]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[20,[65,[20]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[21,[65,[21]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[22,[65,[22]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[23,[65,[23]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[24,[65,[24]]]]]],[58,[[6,[25,[65,[25]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[26,[65,[26]]]]]],[58,[[6,[27,[65,[27]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[28,[65,[28]]]]]],[-1,[[6,[-2]]],[],[]],[12,[[6,[9]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[29,[65,[29]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[30,[65,[30]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[32,[65,[32]]]]]],[58,[[6,[33,[65,[33]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[34,[65,[34]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[36,[65,[36]]]]]],[-1,[[6,[-2]]],[],[]],[58,[[6,[37,[65,[37]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[40,[65,[40]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[58,[[6,[50,[65,[50]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[],[[6,[17,[65,[17]]]]]],[[],[[6,[18,[65,[18]]]]]],[[],[[6,[19,[65,[19]]]]]],[[],[[6,[20,[65,[20]]]]]],[[],[[6,[21,[65,[21]]]]]],[[],[[6,[22,[65,[22]]]]]],[[],[[6,[23,[65,[23]]]]]],[[],[[6,[24,[65,[24]]]]]],[[],[[6,[25,[65,[25]]]]]],[[],[[6,[26,[65,[26]]]]]],[[],[[6,[27,[65,[27]]]]]],[[],[[6,[28,[65,[28]]]]]],[[],[[6,[29,[65,[29]]]]]],[[],[[6,[30,[65,[30]]]]]],[[],[[6,[32,[65,[32]]]]]],[[],[[6,[33,[65,[33]]]]]],[[],[[6,[34,[65,[34]]]]]],[[],[[6,[36,[65,[36]]]]]],[[],[[6,[37,[65,[37]]]]]],[[],[[6,[40,[65,[40]]]]]],[[],[[6,[50,[65,[50]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,0,0,0,0,0,[[10,10],10],[[11,11],11],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]]],[[66,[-1]]],15],[[[67,[-1]]],[[67,[-1]]],15],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[66,[-1]]],[[6,[[67,[-1]],1]]],68],[-1,[[69,[-1]]],70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]],[66,[-1]]],53,55],[[[67,[-1]],[67,[-1]]],53,55],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[[66,[-1]],3],4,[]],[[[67,[-1]],3],4,57],[[[69,[-1]],3],4,57],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[[66,[-1]],-2],2,61,64],[[[67,[-1]],-2],2,61,64],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1]]],53,[]],[[[67,[-1]],[66,[-1]]],[[67,[-1]]],[]],[[[69,[-1]]],8,70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[[[67,[-1]]],[[14,[-1]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[[[82,[-1]]],[[82,[-1]]],15],[83,83],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[58,58,58,58],79],[[],79],0,[[],73],[[],74],[[],75],[[],76],[[],78],[[],79],[[],80],[[],81],[[],83],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[71,71],53],[[72,72],53],[[73,73],53],[[74,74],53],[[75,75],53],[[76,76],53],[[77,77],53],[[78,78],53],[[79,79],53],[[80,80],53],[[81,81],53],[[[82,[-1]],[82,[-1]]],53,55],[[83,83],53],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[71,3],4],[[72,3],4],[[73,3],4],[[74,3],4],[[75,3],4],[[76,3],4],[[77,3],4],[[78,3],4],[[79,3],4],[[80,3],4],[[81,3],4],[[[82,[-1]],3],4,57],[[83,3],4],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,81],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],0,[[72,-1],2,64],[[73,-1],2,64],[[74,-1],2,64],[[75,-1],2,64],[[76,-1],2,64],[[77,-1],2,64],[[78,-1],2,64],[[79,-1],2,64],[[80,-1],2,64],[[81,-1],2,64],[[[82,[-1]],-2],2,61,64],[[83,-1],2,64],0,[[-1,[59,[12]],[59,[12]],53],[[6,[71]]],84],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[59,[12]],[59,[12]]],71],[[12,12,[85,[58]]],79],0,0,0,0,0,0,[-1,6,[]],[[-1,[86,[13]],87],[[6,[2]]],[]],[[-1,[86,[12]],87],[[6,[2]]],[]],[[-1,[86,[58]],87],[[6,[2]]],[]],[[-1,[86,[88]],87],[[6,[2]]],[]],[[-1,[86,[88]],87],[[6,[2]]],[]],0,0,[-1,6,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[73,53],0,0,0,0,0,[[[82,[-1]],-2],[[82,[-2]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[89,3],4],[-1,-1,[]],[-1,-2,[],[]],[[90,12],89],[[89,90,91,92,71],2],[[89,93,94],2],[[89,93,[95,[87]],94],2],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,[[94,94],94],[[94,94],96],[[97,[59,[94]],96],97],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,97],[98,98],[88,88],[99,99],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,[96,94],[[[59,[94]],[59,[94]]],[[59,[94]]]],0,[[],97],[[],100],[[],98],[[],88],[[],99],0,[[[59,[94]],[59,[94]]],94],[[[59,[94]],[59,[94]]],94],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[97,97],53],[[98,98],53],[[88,88],53],[[99,99],53],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[-1,-2],53,[],[]],[[100,97,18,53],2],[[97,3],4],[[100,3],4],[[98,3],4],[[88,3],4],[[99,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[86,[101]]],97],[[[59,[[59,[94]]]]],97],[[[59,[[59,[94]]]]],97],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[-1,-2],60,[61,62],63],[[98,-1],2,64],[[88,-1],2,64],[[99,-1],2,64],[[],97],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,97],[[[59,[94]],[59,[94]],96],97],[[97,97]],[[97,[59,[94]]]],[[[59,[94]]],[[59,[94]]]],[[[59,[94]]],[[59,[94]]]],[[94,94,94,94,94,94,94],97],0,0,0,[[94,94,94,94],97],[100,2],0,[[97,97],[[59,[94]]]],[[100,97],2],[[-1,12,12],[[6,[79]]],84],[[-1,12,12],[[6,[79]]],84],[[-1,12,12],[[6,[79]]],84],[-1,[[6,[99]]],84],[[-1,87],[[6,[[85,[101]]]]],84],[[-1,12,12],[[6,[79]]],84],[[-1,87],[[6,[98]]],84],[13,[[59,[58]]]],[96,97],[[[59,[94]],[59,[96]]],97],[[[59,[94]],[59,[96]]],97],[[[59,[94]],94],[[59,[94]]]],0,[[[59,[94]]],97],[96,94],0,[97,[[85,[101]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[59,[94]]],97],[97,97],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0],"c":[],"p":[[4,"F3DError",0],[15,"tuple"],[3,"Formatter",1773],[6,"Result",1773],[3,"String",1774],[4,"Result",1775],[3,"TypeId",1776],[4,"Option",1777],[3,"RenderMode",26],[3,"GeometryModes",26],[3,"RenderModeFlags",26],[15,"u32"],[15,"u16"],[4,"F3DCommand",26],[8,"Clone",1778],[3,"Unimplemented",26],[4,"MatrixMode",26],[4,"MatrixOp",26],[4,"AlphaDither",26],[4,"ColorDither",26],[4,"TextureConvert",26],[4,"TextureFilter",26],[4,"TextureLUT",26],[4,"TextureDetail",26],[4,"CycleType",26],[4,"PipelineMode",26],[4,"AlphaCompare",26],[4,"DepthSource",26],[4,"CvgDst",26],[4,"ZMode",26],[3,"BlendMode",26],[4,"BlendColor",26],[4,"BlendAlpha1",26],[4,"BlendAlpha2",26],[3,"Image",26],[4,"ImageFormat",26],[4,"ComponentSize",26],[3,"CombineMode",26],[3,"ColorCombineMode",26],[4,"ColorCombineComponent",26],[3,"Rgba32",26],[3,"FillColor",26],[3,"Rectangle",26],[3,"TileParams",26],[3,"F3DWrapMode",26],[3,"TextureBlock",26],[3,"TileSize",26],[3,"TileIndex",26],[3,"PrimDepth",26],[4,"ScissorMode",26],[3,"TextureRectangle",26],[4,"Ordering",1779],[15,"bool"],[8,"Default",1780],[8,"PartialEq",1779],[8,"IntoIterator",1781],[8,"Debug",1773],[15,"u8"],[15,"array"],[15,"u64"],[8,"Hash",1782],[8,"Sized",1783],[8,"BuildHasher",1782],[8,"Hasher",1782],[3,"TryFromPrimitiveError",1784],[3,"RawF3DCommand",1225],[4,"DecodeResult",1225],[8,"Copy",1783],[3,"F3DCommandIter",1225],[8,"Iterator",1785],[3,"F3DRenderData",1295],[3,"PipelineId",1295],[3,"PipelineInfo",1295],[4,"CullMode",1295],[3,"ColorExpr",1295],[4,"ColorArg",1295],[3,"TextureIndex",1295],[3,"TextureState",1295],[3,"TextureData",1295],[3,"SamplerState",1295],[4,"WrapMode",1295],[3,"DrawCommand",1295],[3,"ScreenRectangle",1295],[8,"F3DMemory",1295],[3,"Vec",1786],[15,"slice"],[15,"usize"],[3,"Vertex",1628],[3,"F3DRenderer",1613],[3,"Device",1787],[3,"Queue",1787],[4,"TextureFormat",1788],[3,"RenderPass",1787],[15,"f32"],[3,"Range",1789],[6,"Angle",1628],[3,"Matrixf",1628],[3,"Viewport",1628],[3,"Light",1628],[3,"MatrixStack",1628],[15,"i32"],[13,"SPSegment",1203],[13,"SPOneTriangle",1203],[13,"SPTexture",1203],[13,"SPLight",1203],[13,"SPMatrix",1203],[13,"SPFogFactor",1203],[13,"SPVertex",1203],[13,"TextureRectangle1",1287],[13,"TextureRectangle2",1287]]},\
"libsm64_lock":{"doc":"A standalone executable for locking/unlocking a libsm64 â€¦","t":"F","n":["main"],"q":[[0,"libsm64_lock"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"sm64_layout":{"doc":"A program for calculating SM64 variable layouts and types.","t":"F","n":["main"],"q":[[0,"sm64_layout"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"sm64_var_dump":{"doc":"","t":"NGNGFFFFFFFF","n":["Err","Error","Ok","Result","escape_csv","format_csv_line","get_vars","main","open_streams","print_headers","print_vars","run"],"q":[[0,"sm64_var_dump"],[12,"alloc::string"],[13,"clap::args::arg_matches"],[14,"alloc::vec"],[15,"core::error"],[16,"alloc::boxed"],[17,"core::result"],[18,"std::io"],[19,"core::ops::function"]],"d":["Contains the error value","","Contains the success value","","","","","","","","",""],"i":[12,0,12,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[1,2],[[[3,[2]]],2],[4,[[8,[[5,[2]],[7,[6]]]]]],[[],9],[4,[[8,[[5,[[7,[10]]]],[7,[6]]]]]],[[[3,[[7,[10]]]],[3,[2]]],[[8,[9,[7,[6]]]]]],[[[3,[[7,[10]]]],[3,[2]],-1],[[8,[9,[7,[6]]]]],11],[4,[[8,[9,[7,[6]]]]]]],"c":[],"p":[[15,"str"],[3,"String",12],[15,"slice"],[3,"ArgMatches",13],[3,"Vec",14],[8,"Error",15],[3,"Box",16],[4,"Result",17],[15,"tuple"],[8,"Write",18],[8,"FnMut",19],[6,"Result",0]]},\
"wafel":{"doc":"Python bindings for wafel_api.","t":"DDDDDDFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLL","n":["Address","Emu","Game","Input","M64Metadata","ObjectHitbox","PyInit_wafel","SaveState","Surface","WafelError","__hash__","__hash__","__repr__","__repr__","__repr__","__repr__","__repr__","__repr__","__repr__","__richcmp__","__richcmp__","__str__","__str__","__str__","__str__","__str__","__str__","__str__","add_rerecords","address","address","address_to_symbol","address_to_symbol","advance","advance_n","arguments","arguments","arguments","arguments","arguments","arguments","arguments","arguments","as_ptr","as_ref","attach","author","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","clone","clone","clone_into","clone_into","constant","constant","copy","country_code","crc_code","data_type","data_type","deref","description","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","equivalent","equivalent","equivalent","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","frame","frame_log","from","from","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get_hash","get_hash","hash","hash","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","is_process_open","load_m64","load_state","mario_action_names","mario_action_names","new","new","new_err","object_hitboxes","object_hitboxes","open","read","read","read_string_at","read_string_at","rerecords","rerecords","save_m64","save_state","set_author","set_buttons","set_country_code","set_crc_code","set_description","set_input","set_rerecords","set_stick_x","set_stick_y","set_version","source","stick_x","stick_y","surfaces","surfaces","to_object","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wafel","with_version","write","write"],"q":[[0,"wafel"],[259,"pyo3_ffi::object"],[260,"pyo3::pyclass"],[261,"core::option"],[262,"pyo3::err"],[263,"alloc::string"],[264,"pyo3::marker"],[265,"pyo3::types::any"],[266,"pyo3::instance"],[267,"pyo3::instance"],[268,"core::fmt"],[269,"core::fmt"],[270,"std::collections::hash::map"],[271,"alloc::vec"],[272,"core::hash"],[273,"core::marker"],[274,"core::hash"],[275,"core::marker"],[276,"pyo3::err"],[277,"core::any"],[278,"pyo3::types::typeobject"],[279,"pyo3_ffi::cpython::object::typeobject"],[280,"pyo3::types::module"]],"d":["","","","","","","This autogenerated function is called by the python â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the underlying FFI pointer, returns a borrowed â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a new <code>PyErr</code> of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,2,3,7,8,2,3,4,5,6,2,3,7,8,6,4,5,4,5,5,5,4,5,29,6,2,3,7,8,19,19,4,6,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,2,2,3,2,3,4,5,2,6,6,4,5,19,6,4,5,29,6,2,19,3,7,8,2,3,2,2,3,3,2,19,3,4,5,29,6,2,19,19,3,7,8,4,5,29,6,2,3,7,8,5,5,4,5,29,6,2,19,3,7,8,19,19,2,3,2,3,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,4,0,5,4,5,6,2,19,4,5,5,4,5,4,5,5,6,0,5,6,2,6,6,6,5,6,2,2,6,19,2,2,4,5,19,2,3,19,4,5,29,6,2,19,19,3,7,8,19,19,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,4,5,29,6,2,19,3,7,8,6,4,5,29,6,2,19,3,7,8,0,6,4,5],"f":[0,0,0,0,0,0,[[],1],0,0,0,[2],[3],[4],[5],[6],[2],[3],[7],[8],[[2,9]],[[3,9]],[4],[5],[6],[2],[3],[7],[8],[[6,10],11],[[4,12],[[14,[[13,[3]]]]]],[[5,12],[[14,[[13,[3]]]]]],[[4,3],[[13,[15]]]],[[5,3],[[13,[15]]]],[5,11],[[5,10],11],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[[-1,16],[[18,[17]]],[]],[19,1],[19,17],[[10,20,12],[[14,[4]]]],[6,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,21],[2,2],[3,3],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[4,16,12],[[14,[22]]]],[[5,16,12],[[14,[22]]]],[2,2],[6,23],[6,10],[[4,12],[[14,[15]]]],[[5,12],[[14,[15]]]],[19,17],[6,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],24],[[3,3],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[17,[[26,[-1,25]]],[]],[17,[[14,[19]]]],[17,[[26,[-1,25]]],[]],[[4,27],28],[[5,27],28],[[29,27],28],[[6,27],28],[[2,27],28],[[19,27],[[26,[11,30]]]],[[19,27],[[26,[11,30]]]],[[3,27],28],[[7,27],28],[[8,27],28],[31,11],[31,11],[31,11],[31,11],[31,11],[31,11],[31,11],[31,11],[5,10],[[5,16],[[14,[[33,[[32,[15,22]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[16,1],[[13,[-1]]],[]],[[16,1],[[13,[-1]]],[]],[[-1,-2],34,[35,36],37],[[-1,-2],34,[35,36],37],[[2,-1],11,38],[[3,-1],11,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,16],22],[[5,16],22],[[29,16],22],[[6,16],22],[[2,16],22],[[19,16],[[18,[19]]]],[[3,16],22],[[7,16],22],[[8,16],22],[4,24],[12,[[14,[[11,[6,[33,[2]]]]]]]],[[5,29],[[14,[11]]]],[4,[[32,[10,15]]]],[5,[[32,[10,15]]]],[[10,23],6],[[21,39,39],2],[-1,25,[40,41,42]],[4,[[14,[[33,[8]]]]]],[5,[[14,[[33,[8]]]]]],[12,[[14,[5]]]],[[4,16,12],[[14,[22]]]],[[5,16,12],[[14,[22]]]],[[4,3],[[14,[[33,[23]]]]]],[[5,3],[[14,[[33,[23]]]]]],[5,10],[6,10],[[12,6,[33,[2]]],[[14,[11]]]],[5,29],[[6,12],[[14,[11]]]],[[2,21],11],[[6,23],11],[[6,10],11],[[6,12],[[14,[11]]]],[[5,2],[[14,[11]]]],[[6,10],11],[[2,39],11],[[2,39],11],[[6,12],[[14,[11]]]],[19,[[13,[43]]]],[2,44],[2,44],[4,[[14,[[33,[7]]]]]],[5,[[14,[[33,[7]]]]]],[[19,16],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,45]]],[[46,[17]]],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2,45]]],[[46,[17]]],[]],[-1,-2,[[46,[17]]],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[16,48],[16,48],[16,48],[16,48],[16,48],[16,48],[16,48],[16,48],[16,48],[16,49],[16,49],[16,49],[16,49],[16,49],[16,49],[16,49],[16,49],[16,49],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[6,[[13,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,50],[[14,[11]]]],[12,[[14,[6]]]],[[4,16,12,22],[[14,[11]]]],[[5,16,12,22],[[14,[11]]]]],"c":[],"p":[[3,"PyObject",259],[3,"Input",0],[3,"Address",0],[3,"Emu",0],[3,"Game",0],[3,"M64Metadata",0],[3,"Surface",0],[3,"ObjectHitbox",0],[4,"CompareOp",260],[15,"u32"],[15,"tuple"],[15,"str"],[4,"Option",261],[6,"PyResult",262],[3,"String",263],[3,"Python",264],[3,"PyAny",265],[3,"Py",266],[3,"WafelError",0],[15,"usize"],[15,"u16"],[6,"PyObject",266],[15,"u8"],[15,"bool"],[3,"PyErr",262],[4,"Result",267],[3,"Formatter",268],[6,"Result",268],[3,"SaveState",0],[3,"Error",268],[8,"FnMut",269],[3,"HashMap",270],[3,"Vec",271],[15,"u64"],[8,"Hash",272],[8,"Sized",273],[8,"BuildHasher",272],[8,"Hasher",272],[15,"i32"],[8,"PyErrArguments",274],[8,"Send",273],[8,"Sync",273],[8,"Error",275],[15,"i8"],[3,"PyDowncastError",262],[8,"Into",276],[3,"TypeId",277],[3,"PyType",278],[3,"PyTypeObject",279],[3,"PyModule",280]]},\
"wafel_api":{"doc":"The main SM64 API for Wafel.","t":"DNGNNNENNENNNNEDENNNNNNEGDNEDNNEGNNNNNNDNNDNNDNNNNSNNNEDNDNDNNDNNNNNNNNEDNNNNNDEDNNNNNNEDNNDNDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLFLLLLMMMLLLLMMLLLLLLLMMMMLLLLLLLLLLLLLLLLLMFLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMMMMMMMM","n":["Address","Address","Angle","ApplyEditError","Array","Array","Camera","DataError","DataPathError","DataType","Disabled","DisplayList","DllLayoutError","EU","Element","Emu","Error","F32","F64","FileReadError","FileWriteError","Float","Float","FloatType","FloatValue","Game","InGame","InGameRenderMode","Input","Int","Int","IntType","IntValue","InvalidM64Error","InvalidRom","JP","LayoutLookupError","Libsm64DecryptionError","Libsm64EncryptionError","Line","Line","LookAt","LookAtCamera","M64AuthorTooLong","M64DescriptionTooLong","M64Metadata","M64ReadError","M64WriteError","MemoryError","MemoryInitError","NULL","None","None","Normal","ObjectCull","ObjectHitbox","Ortho","OrthoCamera","Physical","Point","Point","Pointer","RemoteDll","Rerender","S16","S32","S64","S8","SH","SM64DataError","SM64ExtrasError","SM64Version","SaveState","SaveStateMismatch","ShowAll","String","Struct","Struct","Surface","SurfaceMode","Timeline","U16","U32","U64","U8","US","Union","Value","ValueTypeError","ValueTypeError","Visual","VizConfig","VizError","VizRenderData","Void","actual","add","add_assign","add_rerecords","address","address","address","address","address_to_symbol","address_to_symbol","address_to_symbol","address_to_symbol","advance","advance_n","all","as_address","as_array","as_array_with_len","as_f32","as_f32_3","as_float","as_float_lenient","as_i16_3","as_int","as_int_lenient","as_none","as_str","as_struct","as_usize","attach","attach","author","balance_distribution","base_address","base_slot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","camera","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color","color","constant","constant","constant","constant","country_code","crc_code","data_type","data_type","data_type","data_type","dbg_cached_frames","dbg_data_cache_size","default","default","default","default","default","default","default","delete_frame","delete_hotspot","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","elements","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expected","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","forward","frame","frame","frame_log","frame_log","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","highlighted_surfaces","hitbox_height","hitbox_radius","in_game_render_mode","insert_frame","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_array","is_float","is_int","is_none","is_not_null","is_null","is_pointer","is_process_open","is_process_open","is_struct","is_union","is_void","layout","layout","layout","load_m64","load_state","lock_libsm64","mario_action_names","mario_action_names","mario_action_names","mario_action_names","memory","memory","memory","new","new","new","new","normal","object_cull","object_hitboxes","object_hitboxes","object_hitboxes","object_hitboxes","option","partial_cmp","pid","pos","pos","pos","pos","read","read","read","read","read_string_at","read_string_at","read_string_at","read_string_at","reader","render","render","render","render","rerecords","rerecords","reset","reset_all","roll","save_m64","save_state","screen_size","screen_top_left","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_author","set_country_code","set_crc_code","set_description","set_hotspot","set_input","set_input","set_rerecords","set_version","show_camera_focus","show_in_game_overlays","size","size","size","span_v","stick_x","stick_y","stride","sub","sub_assign","surface_mode","surfaces","surfaces","surfaces","surfaces","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transparent_surfaces","try_address","try_address","try_address","try_address","try_as_address","try_as_array","try_as_array_with_len","try_as_f32","try_as_f32_3","try_as_float","try_as_float_lenient","try_as_i16_3","try_as_int","try_as_int_lenient","try_as_none","try_as_str","try_as_struct","try_as_usize","try_attach","try_attach","try_constant","try_constant","try_constant","try_constant","try_data_type","try_data_type","try_data_type","try_data_type","try_field","try_frame_log","try_frame_log","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load_m64","try_load_state","try_lock_libsm64","try_new","try_new","try_object_hitboxes","try_object_hitboxes","try_object_hitboxes","try_object_hitboxes","try_read","try_read","try_read","try_read","try_read_string_at","try_read_string_at","try_read_string_at","try_read_string_at","try_render","try_render","try_render","try_render","try_reset","try_save_m64","try_set_author","try_set_description","try_set_input","try_set_input","try_surfaces","try_surfaces","try_surfaces","try_surfaces","try_unlock_libsm64","try_write","try_write","try_write","try_write","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_ptr_native","unlock_libsm64","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upward","version","vertices","vertices","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_hitbox_radius","with_version","write","write","write","write","writer","error","error","error","error","error","filename","filename","filename","filename","filename","path","value"],"q":[[0,"wafel_api"],[860,"wafel_api::Error"],[872,"core::option"],[873,"alloc::string"],[874,"std::collections::hash::map"],[875,"indexmap::map"],[876,"core::cmp"],[877,"alloc::vec"],[878,"core::result"],[879,"serde::de"],[880,"core::fmt"],[881,"core::fmt"],[882,"wafel_memory::error"],[883,"wafel_data_access::error"],[884,"wafel_memory::error"],[885,"wafel_data_access::error"],[886,"core::convert"],[887,"core::clone"],[888,"alloc::alloc"],[889,"fast3d::f3d_render_data"],[890,"core::hash"],[891,"core::marker"],[892,"core::hash"],[893,"wafel_data_access::layout"],[894,"serde::ser"],[895,"wafel_sm64::surface"],[896,"core::any"],[897,"wafel_data_access::writers"]],"d":["A raw pointer value that can be stored in memory.","An address value.","A 16 bit signed angle.","","An array type.","An array value.","","","","A simplified description of a variableâ€™s data type.","","","","PAL version.","","An SM64 API that attaches to a running emulator and can â€¦","","32 bit float","64 bit float","","","A float type.","A float value, regardless of the underlying <code>FloatType</code> size.","Float types of different sizes.","An integer value.","An SM64 API that uses a traditional frame advance / save â€¦","","","A set of inputs for a given frame.","An integer type.","An integer value, regardless of the underlying <code>IntType</code> â€¦","Integer types of different sizes and signedness.","An integer value.","","","The original Japanese release.","","","","","","","","","","Metadata for a .m64 TAS.","","","","","The NULL address.","","Represents the lack of a value.","","","Hitbox information for an SM64 object.","","","","","","A pointer type.","An SM64 API that attaches to a running instance of libsm64 â€¦","","16 bit signed int","32 bit signed int","64 bit signed int","8 bit signed int","Shindou version.","","","SM64 game versions.","A save state used by Game.","","","A string value.","A struct type.","A struct value.","An SM64 surface (currently missing several fields).","","An SM64 API that allows reads and writes to arbitrary â€¦","16 bit unsigned int","32 bit unsigned int","64 bit unsigned int","8 bit unsigned int","US version.","A union type.","A dynamically typed value.","","","","","","","Void, typically used as a pointer target or function â€¦","","","","Add a number of rerecords, saturating on overflow.","Find the address of a path.","Find the address of a path.","Find the address of a path.","Find the address of a path on the given frame.","Return the name of the global variable at the given â€¦","Return the name of the global variable at the given â€¦","Return the name of the global variable at the given â€¦","Return the name of the global variable at the given â€¦","Advance a single frame.","Advance multiple frames.","Return all game versions.","Convert the value to an address, panicking on failure.","Convert the value to an array and return its elements, â€¦","Convert the value to an array and return its elements, â€¦","Convert the value to a float, and then truncate to an f32, â€¦","Convert the value to an array of three f32s, panicking on â€¦","Convert the value to a float, panicking if the value is â€¦","Convert the value to a usize, allowing in-range integers.","Convert the value to an array of three i16s, panicking on â€¦","Convert the value to an int, panicking if it is not an int.","Convert the value to an int, allowing in-range floats that â€¦","Panic if the value is not <code>Value::None</code>.","Convert the value to a string, panicking on failure.","Convert the value to a struct and return its fields, â€¦","Convert the value to a usize, panicking on failure.","Attach to a running emulator.","Attach to a running instance of libsm64 in a different â€¦","Get the author field.","Perform housekeeping to improve scrolling near hotspots.","Return the base address of the libsm64 DLL in memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The standard button bit flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Get the country code.","Get the CRC code.","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Return a list of the frames that are currently loaded by â€¦","Return the size of the data cache in bytes.","","","","","","","","Delete edits at the given frame, shifting all later edits â€¦","Delete a hotspot with the given name, if it exists.","Get the description field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the value to a struct and look up the field with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the frame of the current game state.","Return the frame that the save state was taken on.","Read the Wafel frame log for the previous frame advance.","Read the Wafel frame log for the previous frame advance.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","The objectâ€™s hitbox height (hitboxHeight).","The objectâ€™s hitbox radius (hitboxRadius).","","Shift all edits to the right, starting at the given frame.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the data type is an array type.","Return true if the data type is a float type.","Return true if the data type is an integer type.","Return true if the value is <code>Value::None</code>.","Returns true if the address is not null (equal to zero).","Returns true if the address is null (equal to zero).","Return true if the data type is a pointer type.","Return true if a process with the given pid is currently â€¦","Return true if a process with the given pid is currently â€¦","Return true if the data type is a struct type.","Return true if the data type is a union type.","Return true if the data type is void.","","","","Load an m64 TAS from a file.","Load a save state.","Lock a libsm64 DLL so that it requires a ROM to open.","Return a mapping from Mario action values to their name â€¦","Return a mapping from Mario action values to their name â€¦","Return a mapping from Mario action values to their name â€¦","Return a mapping from Mario action values to their name â€¦","","","","Load a libsm64 DLL.","Create a new metadata object with the given CRC and â€¦","Load a libsm64 DLL.","","The surfaceâ€™s normal vector.","","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Return None if the value is none, and Some(self) otherwise.","","Return the PID of the running process.","","","The objectâ€™s position (oPosX, oPosY, oPosZ).","","Read a value from memory.","Read a value from memory.","Read a value from memory.","Read a value from memory on the given frame.","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory on the given â€¦","","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Return the number of times that a save state has been â€¦","Get the number of rerecords.","Clear all previous calls to write with the given <code>frame</code> and â€¦","Clear all previous calls to write.","","Save an m64 TAS to a file.","Create a save state using the current game state.","","","","","","","","","","","","","","","","","Set the author field (max 222 bytes).","Set the country code.","Set the CRC code.","Set the description field (max 256 bytes).","Set a hotspot with a given name.","Set the gameâ€™s controller input for the current frame â€¦","Set the gameâ€™s controller input for the given frame â€¦","Set the number of rerecords.","Set the CRC and country code to match the given SM64 â€¦","","","The size of the int in bytes.","The size of the float in bytes.","","","The joystick x coordinate.","The joystick y coordinate.","","","","","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Read the currently loaded surfaces.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find the address of a path.","Find the address of a path.","Find the address of a path.","Find the address of a path on the given frame.","Convert the value to an address.","Convert the value to an array and return its elements.","Convert the value to an array and return its elements.","Convert the value to a float and then truncate to an f32.","Convert the value to an array of three f32s.","Convert the value to a float.","Convert the value to a float, allowing in-range integers.","Convert the value to an array of three i16s.","Convert the value to an int.","Convert the value to an int, allowing in-range floats that â€¦","Return an error if the value is not <code>Value::None</code>.","Convert the value to a string.","Convert the value to a struct and return its fields.","Convert the value to a usize.","Attach to a running emulator.","Attach to a running instance of libsm64 in a different â€¦","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Return the value of the macro constant or enum variant â€¦","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Return a simplified description of the type of the given â€¦","Convert the value to a struct and look up the field with â€¦","Read the Wafel frame log for the previous frame advance.","Read the Wafel frame log for the previous frame advance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load an m64 TAS from a file.","Load a save state.","Lock a libsm64 DLL so that it requires a ROM to open.","Load a libsm64 DLL.","Load a libsm64 DLL.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read the hitboxes for active objects.","Read a value from memory.","Read a value from memory.","Read a value from memory.","Read a value from memory on the given frame.","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory at the given â€¦","Read a null terminated string from memory on the given â€¦","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Render the game to a VizRenderData object, which can be â€¦","Clear all previous calls to write with the given <code>frame</code> and â€¦","Save an m64 TAS to a file.","Set the author field (max 222 bytes).","Set the description field (max 256 bytes).","Set the gameâ€™s controller input for the current frame â€¦","Set the gameâ€™s controller input for the given frame â€¦","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Read the currently loaded surfaces.","Unlock a libsm64 DLL using a ROM.","Write a value to memory.","Write a value to memory.","Write a value to memory.","Write a value on the given frame.","Return the type of the surface (floor/wall/ceiling).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An unsigned IntType with the same size as native usize.","Unlock a libsm64 DLL using a ROM.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the SM64 version with matching CRC and country â€¦","The surfaceâ€™s vertex coordinates.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new metadata object using the CRC and country â€¦","Write a value to memory.","Write a value to memory.","Write a value to memory.","Write a value on the given frame.","","","","","","","","","","","","",""],"i":[0,15,0,24,23,15,0,24,24,0,26,26,24,13,0,0,0,31,31,24,24,23,15,0,0,0,28,0,0,23,15,0,0,24,24,13,24,24,24,0,36,28,0,24,24,0,24,24,24,24,1,35,15,33,0,0,28,0,35,0,36,23,0,26,29,29,29,29,13,24,24,0,0,24,33,15,23,15,0,0,0,29,29,29,29,13,23,0,0,24,35,0,24,0,23,34,1,1,4,6,9,10,11,6,9,10,11,9,9,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,10,4,11,9,9,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,27,25,23,24,25,26,13,4,27,28,29,30,31,32,33,34,35,36,37,1,38,39,15,40,41,23,24,25,26,13,4,27,28,29,30,31,32,33,34,35,36,37,1,38,39,15,40,41,1,38,40,6,9,10,11,4,4,6,9,10,11,11,11,25,26,27,28,33,35,1,11,11,4,25,26,28,29,30,31,32,33,35,36,1,38,15,40,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,25,23,25,26,13,27,28,29,30,31,32,33,35,36,1,38,15,40,41,23,23,26,26,13,13,27,27,29,29,31,31,33,33,35,35,1,1,34,15,23,23,6,24,24,25,26,9,51,13,13,4,4,27,27,28,29,29,10,11,30,31,31,32,33,34,34,35,36,37,1,1,38,39,15,15,40,41,30,32,9,51,9,11,23,6,24,24,24,24,24,24,24,24,24,24,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,40,41,41,23,26,13,27,29,31,33,35,1,23,26,13,27,29,31,33,35,1,25,37,37,25,11,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,23,23,23,15,1,1,23,6,10,23,23,23,6,9,10,0,9,0,6,9,10,11,6,9,10,9,4,11,41,39,25,6,9,10,11,15,1,9,30,32,37,38,6,9,10,11,6,9,10,11,1,6,9,10,11,9,4,11,11,30,0,9,25,25,25,26,28,29,30,31,32,33,35,36,1,38,15,40,4,4,4,4,11,9,11,4,4,25,25,29,31,38,32,27,27,1,1,1,25,6,9,10,11,23,24,25,26,13,4,27,28,29,30,31,32,33,34,35,36,37,1,38,39,15,40,41,23,24,13,4,27,29,31,34,1,15,25,6,9,10,11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,6,10,6,9,10,11,6,9,10,11,15,9,11,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,0,9,0,9,11,6,9,10,11,6,9,10,11,6,9,10,11,6,9,10,11,11,0,4,4,9,11,6,9,10,11,0,6,9,10,11,39,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,29,0,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,32,4,39,40,23,6,24,25,26,9,51,13,4,27,28,29,10,11,30,31,32,33,34,35,36,37,1,38,39,15,40,41,25,4,6,9,10,11,1,82,83,84,85,86,83,87,84,85,86,82,82],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[1,2],3],[[4,5],4],[[6,7],[[8,[1]]]],[[9,7],[[8,[1]]]],[[10,7],[[8,[1]]]],[[11,5,7],[[8,[1]]]],[[6,1],[[8,[12]]]],[[9,1],[[8,[12]]]],[[10,1],[[8,[12]]]],[[11,1],[[8,[12]]]],[9,3],[[9,5],3],[[],[[14,[13]]]],[15,1],[15,[[14,[15]]]],[[15,2],[[14,[15]]]],[15,16],[15,[[17,[16]]]],[15,18],[15,18],[15,[[17,[19]]]],[15,20],[15,20],[15,3],[15,7],[15,[[22,[12,15,21]]]],[15,2],[[5,2,13],6],[[5,2,7],10],[4,7],[[11,16],3],[9,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[23,23],[24,24],[25,25],[26,26],[13,13],[4,4],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[1,1],[38,38],[39,39],[15,15],[40,40],[41,41],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[1,1],42],0,0,[[6,7],15],[[9,7],15],[[10,7],15],[[11,7],15],[4,43],[4,5],[[6,7],23],[[9,7],23],[[10,7],23],[[11,7],23],[11,[[44,[5]]]],[11,2],[[],25],[[],26],[[],27],[[],28],[[],33],[[],35],[[],1],[[11,5],3],[[11,7],3],[4,7],[-1,[[45,[25]]],46],[-1,[[45,[26]]],46],[-1,[[45,[28]]],46],[-1,[[45,[29]]],46],[-1,[[45,[30]]],46],[-1,[[45,[31]]],46],[-1,[[45,[32]]],46],[-1,[[45,[33]]],46],[-1,[[45,[35]]],46],[-1,[[45,[36]]],46],[-1,[[45,[1]]],46],[-1,[[45,[38]]],46],[-1,[[45,[15]]],46],[-1,[[45,[40]]],46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[23,23],47],[[25,25],47],[[26,26],47],[[13,13],47],[[27,27],47],[[28,28],47],[[29,29],47],[[30,30],47],[[31,31],47],[[32,32],47],[[33,33],47],[[35,35],47],[[36,36],47],[[1,1],47],[[38,38],47],[[15,15],47],[[40,40],47],[[41,41],47],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],0,[[15,7],15],[[23,48],49],[[23,48],49],[[6,48],49],[[24,48],49],[[24,48],49],[[25,48],[[45,[3,50]]]],[[26,48],[[45,[3,50]]]],[[9,48],49],[[51,48],49],[[13,48],49],[[13,48],49],[[4,48],49],[[4,48],49],[[27,48],49],[[27,48],49],[[28,48],[[45,[3,50]]]],[[29,48],[[45,[3,50]]]],[[29,48],[[45,[3,50]]]],[[10,48],49],[[11,48],49],[[30,48],[[45,[3,50]]]],[[31,48],[[45,[3,50]]]],[[31,48],[[45,[3,50]]]],[[32,48],[[45,[3,50]]]],[[33,48],[[45,[3,50]]]],[[34,48],[[45,[3,50]]]],[[34,48],[[45,[3,50]]]],[[35,48],[[45,[3,50]]]],[[36,48],[[45,[3,50]]]],[[37,48],[[45,[3,50]]]],[[1,48],[[45,[3,50]]]],[[1,48],[[45,[3,50]]]],[[38,48],[[45,[3,50]]]],[[39,48],[[45,[3,50]]]],[[15,48],[[45,[3,50]]]],[[15,48],[[45,[3,50]]]],[[40,48],[[45,[3,50]]]],[[41,48],[[45,[3,50]]]],0,0,[9,5],[51,5],[9,[[44,[[52,[12,15]]]]]],[[11,5],[[44,[[52,[12,15]]]]]],[-1,-1,[]],[-1,-1,[]],[53,24],[-1,-1,[]],[54,24],[55,24],[56,24],[57,24],[58,24],[59,24],[34,24],[60,24],[61,24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[62,15],[63,15],[7,15],[43,15],[64,15],[3,15],[[[17,[[3,[12,-1]]]]],15,[[65,[15]]]],[5,15],[[[52,[12,-1,21]]],15,[[65,[15]]]],[18,15],[[[14,[[3,[7,-1]]]]],15,[[65,[15]],66]],[[[44,[[3,[12,-1]],67]]],15,[[65,[15]]]],[[[44,[-1,67]]],15,[[65,[15]]]],[[[14,[[3,[12,-1]]]]],15,[[65,[15]],66]],[[[44,[[3,[7,-1]],67]]],15,[[65,[15]]]],[20,15],[16,15],[19,15],[[[14,[-1]]],15,[[65,[15]],66]],[68,15],[2,15],[[[17,[[3,[7,-1]]]]],15,[[65,[15]]]],[-1,-1,[]],[[[17,[-1]]],15,[[65,[15]]]],[69,15],[70,15],[[[52,[7,-1,21]]],15,[[65,[15]]]],[12,15],[1,15],[-1,-1,[]],[-1,-1,[]],[71,41],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[-1,-2],64,[72,73],74],[[23,-1],3,75],[[26,-1],3,75],[[13,-1],3,75],[[27,-1],3,75],[[29,-1],3,75],[[31,-1],3,75],[[33,-1],3,75],[[35,-1],3,75],[[1,-1],3,75],0,0,0,0,[[11,5],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,47],[23,47],[23,47],[15,47],[1,47],[1,47],[23,47],[6,47],[10,47],[23,47],[23,47],[23,47],0,0,0,[7,[[3,[4,[44,[27]]]]]],[[9,51],3],[[7,7,7],3],[6,[[52,[5,12]]]],[9,[[52,[5,12]]]],[10,[[52,[5,12]]]],[11,[[52,[5,12]]]],0,0,0,[7,9],[[5,43],4],[7,11],[[[17,[5]],[17,[5]]],41],0,0,[6,[[44,[37]]]],[9,[[44,[37]]]],[10,[[44,[37]]]],[[11,5],[[44,[37]]]],[15,[[8,[15]]]],[[1,1],[[8,[42]]]],[9,5],0,0,0,0,[[6,7],15],[[9,7],15],[[10,7],15],[[11,5,7],15],[[6,1],[[44,[43]]]],[[9,1],[[44,[43]]]],[[10,1],[[44,[43]]]],[[11,5,1],[[44,[43]]]],[-1,[[45,[76,55]]],77],[[6,25],41],[[9,25],41],[[10,25],41],[[11,5,25],[[45,[41,24]]]],[9,5],[4,5],[[11,5,7],3],[11,3],0,[[7,4,[14,[27]]],3],[9,51],0,0,[[25,-1],45,78],[[26,-1],45,78],[[28,-1],45,78],[[29,-1],45,78],[[30,-1],45,78],[[31,-1],45,78],[[32,-1],45,78],[[33,-1],45,78],[[35,-1],45,78],[[36,-1],45,78],[[1,-1],45,78],[[38,-1],45,78],[[15,-1],45,78],[[40,-1],45,78],[[4,7],4],[[4,43],4],[[4,5],4],[[4,7],4],[[11,7,5],3],[[9,27],3],[[11,5,27],3],[[4,5],4],[[4,13],4],0,0,[29,2],[31,2],0,0,0,0,[-1,[[45,[2,55]]],77],[[1,2]],[[1,2],3],0,[6,[[44,[39]]]],[9,[[44,[39]]]],[10,[[44,[39]]]],[[11,5],[[44,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[[6,7],[[45,[[8,[1]],24]]]],[[9,7],[[45,[[8,[1]],24]]]],[[10,7],[[45,[[8,[1]],24]]]],[[11,5,7],[[45,[[8,[1]],24]]]],[15,[[45,[1,34]]]],[15,[[45,[[14,[15]],34]]]],[[15,2],[[45,[[14,[15]],34]]]],[15,[[45,[16,34]]]],[15,[[45,[[17,[16]],34]]]],[15,[[45,[18,34]]]],[15,[[45,[18,34]]]],[15,[[45,[[17,[19]],34]]]],[15,[[45,[20,34]]]],[15,[[45,[20,34]]]],[15,[[45,[3,34]]]],[15,[[45,[7,34]]]],[15,[[45,[[22,[12,15,21]],34]]]],[15,[[45,[2,34]]]],[[5,2,13],[[45,[6,24]]]],[[5,2,7],[[45,[10,24]]]],[[6,7],[[45,[15,24]]]],[[9,7],[[45,[15,24]]]],[[10,7],[[45,[15,24]]]],[[11,7],[[45,[15,24]]]],[[6,7],[[45,[23,24]]]],[[9,7],[[45,[23,24]]]],[[10,7],[[45,[23,24]]]],[[11,7],[[45,[23,24]]]],[[15,7],[[45,[15,34]]]],[9,[[45,[[44,[[52,[12,15]]]],24]]]],[[11,5],[[45,[[44,[[52,[12,15]]]],24]]]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[7,[[45,[[3,[4,[44,[27]]]],24]]]],[[9,51],[[45,[3,24]]]],[[7,7,7],[[45,[3,24]]]],[7,[[45,[9,24]]]],[7,[[45,[11,24]]]],[6,[[45,[[44,[37]],24]]]],[9,[[45,[[44,[37]],24]]]],[10,[[45,[[44,[37]],24]]]],[[11,5],[[45,[[44,[37]],24]]]],[[6,7],[[45,[15,24]]]],[[9,7],[[45,[15,24]]]],[[10,7],[[45,[15,24]]]],[[11,5,7],[[45,[15,24]]]],[[6,1],[[45,[[44,[43]],24]]]],[[9,1],[[45,[[44,[43]],24]]]],[[10,1],[[45,[[44,[43]],24]]]],[[11,5,1],[[45,[[44,[43]],24]]]],[[6,25],[[45,[41,24]]]],[[9,25],[[45,[41,24]]]],[[10,25],[[45,[41,24]]]],[[11,5,25],[[45,[41,24]]]],[[11,5,7],[[45,[3,24]]]],[[7,4,[14,[27]]],[[45,[3,24]]]],[[4,7],[[45,[4,24]]]],[[4,7],[[45,[4,24]]]],[[9,27],[[45,[3,24]]]],[[11,5,27],[[45,[3,24]]]],[6,[[45,[[44,[39]],24]]]],[9,[[45,[[44,[39]],24]]]],[10,[[45,[[44,[39]],24]]]],[[11,5],[[45,[[44,[39]],24]]]],[[7,7,7],[[45,[3,24]]]],[[6,7,15],[[45,[3,24]]]],[[9,7,15],[[45,[3,24]]]],[[10,7,15],[[45,[3,24]]]],[[11,5,7,15],[[45,[3,24]]]],[39,79],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[[],29],[[7,7,7],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[4,[[8,[13]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[13,4],[[6,7,15],3],[[9,7,15],3],[[10,7,15],3],[[11,5,7,15],3],[-1,[[45,[81,55]]],77],0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Address",0],[15,"usize"],[15,"tuple"],[3,"M64Metadata",0],[15,"u32"],[3,"Emu",0],[15,"str"],[4,"Option",872],[3,"Game",0],[3,"RemoteDll",0],[3,"Timeline",0],[3,"String",873],[4,"SM64Version",0],[15,"slice"],[4,"Value",0],[15,"f32"],[15,"array"],[15,"f64"],[15,"i16"],[15,"i128"],[3,"RandomState",874],[3,"IndexMap",875],[4,"DataType",0],[4,"Error",0],[3,"VizConfig",0],[4,"InGameRenderMode",0],[3,"Input",0],[4,"Camera",0],[4,"IntType",0],[3,"LookAtCamera",0],[4,"FloatType",0],[3,"OrthoCamera",0],[4,"ObjectCull",0],[3,"ValueTypeError",0],[4,"SurfaceMode",0],[4,"Element",0],[3,"ObjectHitbox",0],[3,"Point",0],[3,"Surface",0],[3,"Line",0],[3,"VizRenderData",0],[4,"Ordering",876],[15,"u8"],[3,"Vec",877],[4,"Result",878],[8,"Deserializer",879],[15,"bool"],[3,"Formatter",880],[6,"Result",880],[3,"Error",880],[3,"SaveState",0],[3,"HashMap",874],[3,"DllLayoutError",881],[4,"MemoryError",882],[4,"DataError",883],[4,"MemoryInitError",882],[4,"SM64DataError",884],[4,"DataPathError",883],[4,"LayoutLookupError",881],[4,"SM64LayoutError",881],[4,"VizError",885],[15,"i8"],[15,"u16"],[15,"u64"],[8,"Into",886],[8,"Clone",887],[3,"Global",888],[15,"i64"],[15,"isize"],[15,"i32"],[3,"F3DRenderData",889],[8,"Hash",890],[8,"Sized",891],[8,"BuildHasher",890],[8,"Hasher",890],[3,"AddressReader",892],[8,"MemoryLayout",893],[8,"Serializer",894],[4,"SurfaceType",895],[3,"TypeId",896],[3,"AddressWriter",897],[13,"ApplyEditError",860],[13,"M64ReadError",860],[13,"M64WriteError",860],[13,"FileReadError",860],[13,"FileWriteError",860],[13,"InvalidM64Error",860]]},\
"wafel_app":{"doc":"The executable for the main Wafel GUI.","t":"RAAAAAFADLLLLLLMMLLLLMLMLLLLLLLLMMLMLDLLMLLLLLLLLLLMLMLMMMLLLLLLHDLLLLLLLLLLLLLLMLLLLLLLLLAIHHHHHDHDFFFLLLLLLLLLLLLLLLMLMMLLLLLLLLLKKLKMMLFMKLMLLLLLLLLLLFKMMHDDHLLLLLLLLLLLLLLLFLLLLFMMLFFLLFLLLLLLLLLLIFKKFKK","n":["WAFEL_VERSION","app","egui_state","env","hot_reload","logging","main","window","WafelApp","borrow","borrow_mut","deref","deref_mut","downcast","drop","egui_state","env","fmt","from","init","into","msaa_samples","new","output_format","render","render_egui","render_viz","try_from","try_into","type_id","upcast","update","viz_render_data","viz_renderer","vzip","wafel","window_event","EguiState","borrow","borrow_mut","context","deref","deref_mut","downcast","drop","fmt","from","init","into","new","prepare","primitives","render","renderer","run","screen_descriptor","state","textures_delta","try_from","try_into","type_id","upcast","vzip","window_event","SYSTEM","WafelEnv","borrow","borrow_mut","create","deref","deref_mut","downcast","drop","fmt","from","init","into","is_process_open","log_file_path","log_file_path","log_file_path","processes","take_recent_panic_details","try_from","try_into","type_id","upcast","vzip","wafel_version","wafel_version","hot_wafel_app_ui","Env","LIB_CHANGE_NOTIFIER","LIB_CHANGE_NOTIFIER_INIT","LIB_LOADER","LIB_LOADER_INIT","VERSION","VizRenderData","WAS_UPDATED","Wafel","__lib_loader","__lib_loader_subscription","__lib_notifier","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","elements","eq","error_boundary","f3d_render_data","fmt","fmt","from","from","from","init","init","into","into","is_process_open","log_file_path","new","processes","render_output","root","show","subscribe","surface_vertices","take_recent_panic_details","to_owned","transparent_surface_vertices","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","wafel_show","wafel_version","wall_hitbox_outline_vertices","wall_hitbox_vertices","LOG_FILE","LogLayer","MessageVisitor","RECENT_PANIC_DETAILS","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","init","init","init","into","into","log_callback","log_target","message","on_event","panic_hook","print_to_log_file","record_debug","record_str","take_recent_panic_details","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","WindowedApp","load_window_icon","new","render","run_app","update","window_event"],"q":[[0,"wafel_app"],[8,"wafel_app::app"],[37,"wafel_app::egui_state"],[64,"wafel_app::env"],[90,"wafel_app::hot_reload"],[91,"wafel_app::hot_reload::hot_wafel_app_ui"],[157,"wafel_app::logging"],[200,"wafel_app::window"],[207,"core::fmt"],[208,"core::fmt"],[209,"wgpu"],[210,"wgpu_types"],[211,"wgpu"],[212,"core::result"],[213,"core::any"],[214,"winit::event"],[215,"wgpu"],[216,"std::path"],[217,"wafel_app_ui::env"],[218,"alloc::vec"],[219,"alloc::string"],[220,"hot_lib_reloader::lib_reloader"],[221,"std::sync::rwlock"],[222,"alloc::sync"],[223,"hot_lib_reloader::lib_reload_events"],[224,"hot_lib_reloader::lib_reload_events"],[225,"alloc::alloc"],[226,"egui::context"],[227,"tracing_core::metadata"],[228,"tracing_core::event"],[229,"tracing_subscriber::layer::context"],[230,"tracing_core::subscriber"],[231,"tracing_subscriber::registry"],[232,"core::panic::panic_info"],[233,"tracing_core::field"],[234,"core::fmt"]],"d":["","","","Environment for the Wafel application.","","","","Sets up the main application window and event loop.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Return the path to the log file.","","","","","","","","","","","Return the current version of Wafel.","","A trait defining the Wafel applicationâ€™s interaction â€¦","","","","","","","","State of the Wafel application.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if a process with the given pid is open.","Return the path to the log file.","","Return a list of running processes.","","","Render the Wafel UI and respond to user input events.","","","Return details of the most recent panic caught by the â€¦","","","","","","","","","","","","","","Return the current version of Wafel.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Opens a maximized window and runs the application.","",""],"i":[0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,37,36,37,36,36,36,37,37,36,37,36,37,36,37,36,36,36,37,36,37,36,37,36,36,37,36,37,36,41,41,36,41,36,37,37,0,36,41,36,36,37,36,37,36,37,36,37,36,37,36,0,41,36,36,0,0,0,0,45,43,45,43,43,45,43,45,43,45,43,45,43,45,43,0,45,43,45,43,0,43,43,45,0,0,43,43,0,45,43,45,43,45,43,45,43,45,43,0,0,54,54,0,54,54],"f":[0,0,0,0,0,0,[[],1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,-1,[]],[-1,-2,[],[]],[2,1],0,0,[[3,4],5],[-1,-1,[]],[[],2],[-1,-2,[],[]],0,[[6,7,8,9,10],3],0,[[3,8,11,12,9,[13,[10]],14],1],[[3,8,11,15,12,12,[13,[10]],14,[18,[[17,[16]]]]],1],[[3,8,11,15,12,12,12,9,14,[18,[[17,[16]]]]],1],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,[[18,[-2]]],[],[]],[[3,7,8],1],0,0,[-1,-2,[],[]],0,[[3,21],1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[2,-1,[]],[2,-1,[]],[-1,-2,[],[]],[2,1],[[22,4],5],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[7,8,9,10],22],[[22,8,11,15,[13,[10]],14],1],0,[[22,23],1],0,[[22,7,-1],1,24],0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[[22,21],25],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[2,-1,[]],[2,-1,[]],[-1,-2,[],[]],[2,1],[[6,4],5],[-1,-1,[]],[[],2],[-1,-2,[],[]],[[6,10],25],[6,26],[6,26],0,[6,[[28,[27]]]],[6,[[18,[29]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[6,30],[6,30],0,0,0,0,0,0,0,0,0,0,[[],[[33,[[32,[31]]]]]],[[],34],[[],[[33,[[32,[35]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],1,[],[]],[[],37],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,1],[2,1],0,[[36,36],25],0,0,[[37,4],[[19,[1,38]]]],[[36,4],[[19,[1,38]]]],[-1,-1,[]],[-1,-1,[]],[39,36],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,10],25,[]],[-1,26,[]],[[[13,[10]],[13,[10]]],36],[-1,[[28,[27,40]]],[]],0,0,[[37,41,42],[[28,[36,40]]]],[[],34],0,[-1,[[18,[29]]],[]],[-1,-2,[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,41,42],[[28,[36]]]],[-1,30,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],43],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,1],[2,1],[-1,-1,[]],[-1,-1,[]],[26,1],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[44,30],1],0,0,[[45,46,[47,[-1]]],1,[48,49]],[50,1],[30,1],[[43,51,52],1],[[43,51,30],1],[[],[[18,[29]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],53],[[6,7,8,9,10],-1,[]],[[-1,8,11,12,9,[13,[10]],14],1,[]],[[6,30],1],[[-1,7,8],1,[]],[[-1,21],1,[]]],"c":[],"p":[[15,"tuple"],[15,"usize"],[3,"WafelApp",8],[3,"Formatter",207],[6,"Result",207],[3,"WafelEnv",64],[3,"Window",208],[3,"Device",209],[4,"TextureFormat",210],[15,"u32"],[3,"Queue",209],[3,"TextureView",209],[15,"array"],[15,"f32"],[3,"CommandEncoder",209],[3,"Color",210],[4,"LoadOp",209],[4,"Option",211],[4,"Result",212],[3,"TypeId",213],[4,"WindowEvent",214],[3,"EguiState",37],[3,"RenderPass",209],[8,"FnOnce",215],[15,"bool"],[3,"Path",216],[3,"ProcessInfo",217],[3,"Vec",218],[3,"String",219],[15,"str"],[3,"LibReloader",220],[3,"RwLock",221],[3,"Arc",222],[3,"LibReloadObserver",223],[3,"LibReloadNotifier",223],[3,"VizRenderData",91],[3,"Wafel",91],[3,"Error",207],[3,"F3DRenderData",224],[3,"Global",225],[8,"Env",91],[3,"Context",226],[3,"MessageVisitor",157],[3,"Level",227],[3,"LogLayer",157],[3,"Event",228],[3,"Context",229],[8,"Subscriber",230],[8,"LookupSpan",231],[3,"PanicInfo",232],[3,"Field",233],[8,"Debug",207],[3,"Icon",234],[8,"WindowedApp",200]]},\
"wafel_app_ui":{"doc":"The logic and UI for the main Wafel application.","t":"IDDLLLLLLLLLLLLLLLLLLLLLKKMLMKLKLLLLLLLLLLLFK","n":["Env","ProcessInfo","Wafel","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","default","downcast","downcast","eq","equivalent","equivalent","fmt","fmt","from","from","get_hash","hash","into","into","is_process_open","log_file_path","name","partial_cmp","pid","processes","show","take_recent_panic_details","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","wafel_show","wafel_version"],"q":[[0,"wafel_app_ui"],[45,"core::cmp"],[46,"core::fmt"],[47,"core::fmt"],[48,"core::marker"],[49,"core::hash"],[50,"core::option"],[51,"alloc::vec"],[52,"egui::context"],[53,"wafel_viz::render_data"],[54,"alloc::string"],[55,"core::result"],[56,"core::any"]],"d":["A trait defining the Wafel applicationâ€™s interaction â€¦","The name and PID of a running process.","State of the Wafel application.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if a process with the given pid is open.","Return the path to the log file.","Name of the process.","","PID of the process.","Return a list of running processes.","Render the Wafel UI and respond to user input events.","Return details of the most recent panic caught by the â€¦","","","","","","","","","","","","Render the Wafel UI and respond to user input events.","Return the current version of Wafel."],"i":[0,0,0,1,4,1,4,1,1,1,4,1,4,1,1,1,1,4,1,4,1,1,1,4,17,17,1,1,1,17,4,17,1,1,4,1,4,1,4,1,4,1,4,0,17],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1,6],7],[[4,6],7],[-1,-1,[]],[-1,-1,[]],[[-1,-2],8,[9,10],11],[[1,-1],2,12],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,13],5,[]],[-1,14,[]],0,[[1,1],[[15,[3]]]],0,[-1,[[16,[1]]],[]],[[4,17,18],[[16,[19]]]],[-1,[[15,[20]]],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,17,18],[[16,[19]]]],[-1,23,[]]],"c":[],"p":[[3,"ProcessInfo",0],[15,"tuple"],[4,"Ordering",45],[3,"Wafel",0],[15,"bool"],[3,"Formatter",46],[6,"Result",46],[15,"u64"],[8,"Hash",47],[8,"Sized",48],[8,"BuildHasher",47],[8,"Hasher",47],[15,"u32"],[3,"Path",49],[4,"Option",50],[3,"Vec",51],[8,"Env",0],[3,"Context",52],[3,"VizRenderData",53],[3,"String",54],[4,"Result",55],[3,"TypeId",56],[15,"str"]]},\
"wafel_core":{"doc":"Rust code for Wafel.","t":"AAAAANGENNDMMLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDGGLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDDDDDDLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLNDENNDDDDNDDDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMMMLDDDDFDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLFFLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFFFFFFFFDNEDDNDNNNDDDDNEDNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMFLMLFLFFLLLLLLLLLLLFFFFMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMM","n":["error","geo","graphics","python","sm64","ApiError","Error","ErrorCause","SM64Error","ValueTypeError","WithContext","backtrace","backtrace","borrow","borrow","borrow_mut","borrow_mut","cause","cause","cause_into","context","context","context","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","map_cause","source","source","to_string","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Matrix4f","Point3f","StoredMatrix4f","StoredPoint3f","StoredVector3f","StoredVector4f","Vector3f","Vector4f","arguments","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coords","data","data","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","direction_to_pitch_yaw","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","eq","extract","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_py","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","pitch_yaw_to_direction","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","IMGUI_FONT_TEXTURE_ID","ImguiCommand","ImguiCommandList","ImguiConfig","ImguiDrawData","ImguiRenderer","Renderer","VizContainer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip_rect","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command_lists","commands","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","elem_count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_texture_data","font_texture_height","font_texture_width","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","index_buffer","index_size","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","render","render","render","scene","texture_id","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_buffer","vertex_color_offset","vertex_pos_offset","vertex_size","vertex_tex_coord_offset","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BirdsEye","BirdsEyeCamera","Camera","Ceiling","Floor","Object","ObjectPath","ObjectPathNode","QuarterStep","Rotate","RotateCamera","Scene","Surface","SurfaceType","Viewport","WallXProj","WallZProj","arguments","arguments","arguments","arguments","arguments","arguments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","extract","extract","extract","extract","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","fov_y","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_camera","get_hash","hash","height","hidden_surfaces","hitbox_height","hitbox_radius","hovered_surface","init","init","init","init","init","init","init","init","init","init","init","intended_pos","into","into","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","new","nodes","normal","object_paths","objects","pitch","pos","pos","pos","pos","quarter_steps","result_pos","root_index","set_camera","set_quarter_steps","show_camera_target","span_y","surfaces","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertices","viewport","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_hitbox_radius","width","x","y","yaw","ImguiInput","PyAddress","PyAdjustedStick","PyEditRange","PyInit_wafel_core","PyIntendedStick","PyObjectBehavior","PyPipeline","PyVariable","PyVizRenderData","__hash__","__repr__","__richcmp__","__str__","action_names","arguments","arguments","arguments","arguments","arguments","arguments","balance_distribution","begin_drag","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached_frames","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_cache_size","delete_frame","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","eq","equivalent","equivalent","extract","extract","extract","extract","extract","find_edit_range","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","for_all_items","frame","frame_log","from","from","from","from","from","from","from","from","from","from_bytes","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","handle_event","hash","id","init","init","init","init","init","init","init","init","init","insert_frame","into","into","into","into","into","into","into","into","into","into_py","into_py","into_py","into_py","into_py","into_py","into_py","into_py","is_bit_flag","is_float","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_int","label","load","load_reusing_edits","log","mag","mag","name","new","new","new","new","num_advances","num_copies","object","object_behavior","object_behavior","object_behavior_name","open_window_and_run","open_window_and_run_impl","path_address","path_read","read","read_mario_path","read_objects_to_scene","read_string","read_surfaces_to_scene","release_drag","render","reset","set_delta_time","set_display_size","set_hotspot","set_key_map","start","stick_adjusted_to_intended","stick_adjusted_to_raw_euclidean","stick_intended_to_raw_heuristic","stick_raw_to_adjusted","surface","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_ray_to_surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","type_object_raw","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_drag","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_frame","with_object","with_object_behavior","with_surface","without_frame","without_object","without_object_behavior","without_surface","write","x","y","yaw","debug","debug_acquire","error","error_acquire","info","info_acquire","warn","warn_acquire","AdjustedStick","Delete","EditOperation","EditRange","EditRangeId","Insert","IntendedStick","MissingFrame","MissingObject","MissingSurface","ObjectBehavior","ObjectSlot","Pipeline","RangeEdits","Reset","SM64ErrorCause","SurfaceSlot","UnhandledVariable","ValueFromPython","Variable","VariableSerdeError","Write","begin_drag","begin_drag","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","concat_object_path","concat_surface_path","data_variables","default","default","delete_frame","delete_frame","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_edit_range","find_range","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","initial_ops","insert_frame","insert_frame","into","into","into","into","into","into","into","into","into","into","into","into","into_edits","is_bit_flag","is_float","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_int","label","mag","mag","name","new","new","new","object","object_behavior","object_behavior","object_behavior","object_behavior_name","object_path","read","read_objects_to_scene","read_surfaces_to_scene","release_drag","release_drag","reset","reset","serialize","serialize","serialize","serialize","set_edits","set_hotspot","source","stick_adjusted_to_intended","stick_adjusted_to_raw_euclidean","stick_intended_to_raw_heuristic","stick_raw_to_adjusted","surface","surface_path","timeline","timeline_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_ray_to_surface","trace_ray_to_surface","try_begin_drag","try_find_edit_range","try_frame","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_object","try_object_behavior","try_read","try_release_drag","try_reset","try_set_edits","try_surface","try_update_drag","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_drag","update_drag","value","variable_group","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_frame","with_object","with_object_behavior","with_surface","without_drag_state","without_frame","without_object","without_object_behavior","without_surface","write","write","x","y","yaw","value","variable","variable","variable","variable"],"q":[[0,"wafel_core"],[5,"wafel_core::error"],[72,"wafel_core::geo"],[198,"wafel_core::graphics"],[373,"wafel_core::graphics::scene"],[721,"wafel_core::python"],[1043,"wafel_core::python::log"],[1051,"wafel_core::sm64"],[1459,"wafel_core::sm64::SM64ErrorCause"],[1464,"core::convert"],[1465,"alloc::string"],[1466,"core::fmt"],[1467,"core::fmt"],[1468,"wafel_api::error"],[1469,"core::ops::function"],[1470,"core::error"],[1471,"core::option"],[1472,"core::result"],[1473,"core::any"],[1474,"pyo3::marker"],[1475,"pyo3::types::any"],[1476,"pyo3::instance"],[1477,"pyo3::err"],[1478,"pyo3::instance"],[1479,"wgpu"],[1480,"wgpu"],[1481,"pyo3::err"],[1482,"core::marker"],[1483,"core::hash"],[1484,"pyo3::types::typeobject"],[1485,"pyo3_ffi::cpython::object::typeobject"],[1486,"pyo3_ffi::object"],[1487,"pyo3::pyclass"],[1488,"std::collections::hash::map"],[1489,"winit::event"],[1490,"pyo3::types::bytes"],[1491,"core::convert"],[1492,"core::cmp"],[1493,"core::clone"],[1494,"serde::de"],[1495,"serde_json::error"],[1496,"wafel_api::timeline"],[1497,"serde::ser"],[1498,"wafel_data_type::value"]],"d":["Error definitions.","Geometric types and functions.","UI and game scene rendering.","SM64-specific Python API for Wafel.","SM64-specific utilities and data access.","","","","","","An error with extra context.","The backtrace for the error.","The backtrace for the error.","","","","","The root source of the error.","The root source of the error.","Convert the cause into another type.","Add additional context to the error.","The additional context for the error.","The additional context for the error.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Change the errorâ€™s cause.","","","","","","","","","","","","","","","","","","","4x4 f32 matrix","f32 point of length 3","Wrapper type, mainly for Pod and pyo3 conversion â€¦","Wrapper type, mainly for Pod and pyo3 conversion â€¦","Wrapper type, mainly for Pod and pyo3 conversion â€¦","Wrapper type, mainly for Pod and pyo3 conversion â€¦","f32 vector of length 3","f32 vector of length 4","","","","","","","","","","","","","","","","","","The coordinates of this point, i.e., the shift from the â€¦","The data storage that contains all the matrix components. â€¦","The data storage that contains all the matrix components. â€¦","The data storage that contains all the matrix components. â€¦","","","","","","","","","","","","","","","","","Convert a direction to its pitch and yaw in radians.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Convert a pitch and yaw in radians to a direction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The main font texture.","A single draw command.","An imgui command list, which consists of commands that use â€¦","Initial configuration for imgui draw lists.","The draw data for one frame.","A renderer for imgui frame data.","A renderer for the game views.","Wrapper for VizRenderer that renders multiple scenes.","","","","","","","","","","","","","","","The clip rectangle in screen coordinates.","","","","","","","","","The command lists to draw.","The commands in this list.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of indices.","","","","","","","","The RGBA32 data for the font texture.","The height in pixels of the font texture.","The width in pixels of the font texture.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The bytes of the index buffer.","The size of an index element (2 for ushort or 4 for uint).","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a renderer with the given config.","Initialize the renderer.","Create a VizContainer.","Render the given draw data.","Render the given scenes.","Render the given viz scenes.","Representation of the state of the game for the purposes â€¦","The texture to use (must equal <code>IMGUI_FONT_TEXTURE_ID</code>).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bytes of the vertex buffer.","The offset of color in the vertex struct.","The offset of position in the vertex struct.","The size of a vertex element.","The offset of tex coord in the vertex struct.","","","","","","","","A 2D overhead view.","A 2D overhead view camera.","A camera used to render a scene.","Normal is pointing somewhat downward.","Normal is pointing somewhat upward.","SM64 object data used for rendering.","Info about an objectâ€™s movement over the course of â€¦","A single node in an object path, with information for a â€¦","A single quarter step within a frame.","A 3D rotational camera.","A 3D rotational camera.","An object representing the state of the game for the â€¦","SM64 surface data used for rendering.","An SM64 surface type, based on the gameâ€™s definitions.","A rectangular viewport in screen coordinates.","Normal is almost horizontal and points more in the X â€¦","Normal is almost horizontal and points more in the Z â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The birdâ€™s eye or rotational camera to use.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The y FOV in radians.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Get the camera as a python object.","","","The height in pixels.","The surfaces that have been hidden by the user (indices â€¦","The physical hitbox height of the object.","The physical hitbox radius of the object.","The surface to highlight because the mouse cursor is above â€¦","","","","","","","","","","","","The intended position of the step before surface â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Create an empty scene.","Create a viewport with zero values.","Create a new camera with zero values.","Create a camera with zero values.","Create an empty quarter step node.","The list of nodes along the path, in chronological order.","The surfaceâ€™s normal vector.","The detailed paths of object movement across multiple â€¦","The SM64 objects to render.","Get the cameraâ€™s facing pitch.","The position of the camera.","The position of the camera.","The position of the object.","The objectâ€™s position at the start of the frame.","The quarter steps that occurred during the frame (i.e. â€¦","The final position of the step.","The index into <code>nodes</code> that is considered the focus (i.e. â€¦","Set the camera from a python object.","Convenience method to set the quarter steps for a single â€¦","Whether to draw the cameraâ€™s focus point (RotateCamera â€¦","The world space distance covered by the vertical span of â€¦","The SM64 surfaces to render.","The point that the camera is focusing on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the surface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The surfaceâ€™s vertices.","The viewport in screen coordinates where the scene should â€¦","","","","","","","","","","","","The size of wall hitboxes. Setting this to 0 disables them.","The width in pixels.","The left x coordinate.","The upper y coordinate.","Get the cameraâ€™s facing yaw.","Utility for updating imgui keys.","An opaque representation of a memory address.","The joystickâ€™s state after removing the dead zone and â€¦","Information about a variable edit range.","This autogenerated function is called by the python â€¦","The joystickâ€™s state as stored in the mario struct.","An opaque representation of an object behavior.","An abstraction for reading and writing variables.","An abstract game variable.","Render data for wafel_viz","","","","","Return a map from mario action values to human readable â€¦","","","","","","","Perform housekeeping to improve scrolling near hotspots.","Begin a drag operation starting at <code>source_variable</code>.","","","","","","","","","","","","","","","","","","","Return the set of currently loaded frames for debugging â€¦","","","","","","","","","","","Return the size of the data cache in bytes.","Delete the state at the given frame, shifting edits â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The end frame of the range (exclusive).","","","","","","","","","Find the edit range containing a variable, if present.","","","","","","","","","","","","","","","","","","","Get the frame for the variable.","Get the wafel frame log for a frame of gameplay.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a variable from bytes.","","","","","","","","","","","Handle a winit window event.","","The id of the range.","","","","","","","","","","Insert a new state at the given frame, shifting edits â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return true if the variable is a bit flag.","Return true if the variable has a float data type.","","","","","","","","","","Return true if the variable has an integer data type.","Return the label for the variable if it has one.","Load a new pipeline using the given DLL.","Load a new pipeline using the given DLL, reusing the edits â€¦","Provides access to the log file.","Adjusted magnitude, [0, 64].","Intended magnitude, normally [0, 32].","Get the name of the variable.","Initialize a new <code>ImguiInput</code>.","Create a variable with the given name with no associated â€¦","Constructor.","Constructor.","Return the number of frame advances since the timeline was â€¦","Return the number of slot copies since the timeline was â€¦","Get the object slot for the variable.","Get the object behavior for an object, or None if the â€¦","Get the object behavior for the variable.","Get a human readable name for the given object behavior, â€¦","Open a window, call <code>update_fn</code> on each frame, and render â€¦","Open a window, call <code>update_fn</code> on each frame, and render â€¦","Get the address for the given path.","Read from the given path.","Read a variable.","Add an object path for mario to the scene, using the given â€¦","Load the SM64 objects from the game state and add them to â€¦","Read a null terminated byte string from the given address â€¦","Load the SM64 surfaces from the game state and add them to â€¦","End the drag operation, committing range changes.","Render the game for wafel_viz using <code>config_json</code> for â€¦","Reset a variable.","Update delta time for a frame.","Set the display size for a frame.","Set a hotspot, allowing for faster scrolling near the â€¦","Initialize the imgui key map.","The start frame of the range (inclusive).","In-game calculation converting adjusted stick to intended.","Return the raw stick value whose adjusted stick is closest â€¦","Find a raw josytick value that approximately maps to the â€¦","In-game calculation converting raw stick inputs to â€¦","Get the surface slot for the variable.","Serialize a variable to bytes.","","","","","","","","","","","","","","","","","","","","","","","","","Trace a ray until it hits a surface, and return the surfaceâ€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drag from <code>source_variable</code> to <code>target_frame</code>.","The value that is applied to the range.","","","","","","","","","","Return a copy of the variable but associated with the â€¦","Return a copy of the variable but associated to the given â€¦","Return a copy of the variable but associated to the given â€¦","Return a copy of the variable but associated to the given â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","Write a variable.","Adjusted stick x.","Adjusted stick y.","Intended yaw in world space.","Print a debug message.","Print a debug message.","Print an error.","Print an error.","Print an info message.","Print an info message.","Print a warning.","Print a warning.","The joystickâ€™s state after removing the dead zone and â€¦","","","A range of contiguous cells in a single column which are â€¦","A unique identifier for an edit range.","","The joystickâ€™s state as stored in the mario struct.","","","","An opaque wrapper for an object behavior pointer.","A wrapper for an object slot index.","An abstraction for reading and writing variables.","Manages all of the active edit ranges.","","","A wrapper for a surface slot index.","","","An abstract game variable, typically corresponding to a â€¦","","","","Begin a drag operation in <code>column</code> starting at <code>source_frame</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the data variables for this pipeline.","","","Delete the state at the given frame, shifting edits â€¦","Delete a frame, shifting all lower frames upward.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find the edit range containing a cell.","","","","","","","","","","","","","","","","","","The frame that the variable is taken on.","The frames included in the range.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","The id of the range.","","","","","","","","","","","","","Return the set of operations needed to initialize the edit â€¦","Insert a new state at the given frame, shifting edits â€¦","Insert a frame, shifting all lower rows downward.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destroy the pipeline, returning its variable edits.","Return true if the variable is a bit flag.","Return true if the variable has a float data type.","","","","","","","","","","","","","Return true if the variable has an integer data type.","Return the label for the variable if it has one.","Adjusted magnitude, [0, 64].","Intended magnitude, normally [0, 32].","The internal name of the variable.","","An empty set of edit ranges.","Create a variable with the given name with no associated â€¦","The object slot for object variables.","Get the behavior address for an object.","","The accepted object behavior for object variables.","Get a human readable name for the given object behavior, â€¦","Get the data path for an object, or None if the object is â€¦","","Load the SM64 objects from the game state and add them to â€¦","Load the SM64 surfaces from the game state and add them to â€¦","","End the drag operation, committing range changes.","","Reset the value for a given cell.","","","","","","","","In-game calculation converting adjusted stick to intended.","Return the raw stick value whose adjusted stick is closest â€¦","Find a raw josytick value that approximately maps to the â€¦","In-game calculation converting raw stick inputs to â€¦","The surface slot for surface variables.","Get the data path for a surface, or None if the surface is â€¦","Get the timeline for this pipeline.","Get the timeline for this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trace a ray until it hits a surface, and return the surfaceâ€¦","Trace a ray until it hits a surface, and return the surfaceâ€¦","Begin a drag operation starting at <code>source_variable</code>.","Find the edit range containing a variable, if present.","Get the frame for the variable.","","","","","","","","","","","","","","","","","","","","","","","","","Create a new pipeline using the given libsm64 DLL.","Get the object slot for the variable.","Get the object behavior for an object, or None if the â€¦","Read a variable.","End the drag operation, committing range changes.","Reset a variable.","Overwrite all edits with the given edits.","Get the surface for the variable.","Drag from <code>source_variable</code> to <code>target_frame</code>.","Write a variable.","","","","","","","","","","","","","","","","","","","","","","","","","","Drag from <code>source_variable</code> to <code>target_frame</code>.","The value that each variable in the range is edited to.","Get the variables in the given group.","","","","","","","","","","","","","Return a copy of the variable but associated with the â€¦","Return a copy of the variable but associated to the given â€¦","Return a copy of the variable but associated to the given â€¦","Return a copy of the variable but associated to the given â€¦","Return the edit ranges definitions without the interactive â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","Return a copy of the variable but without an associated â€¦","","Edit the value of a given cell.","Adjusted stick x.","Adjusted stick y.","Intended yaw in world space.","","","","",""],"i":[0,0,0,0,0,6,0,0,6,6,0,12,1,6,1,6,1,12,1,1,1,12,1,6,1,6,1,6,1,6,1,6,6,1,1,12,12,12,6,6,6,6,1,1,1,6,1,6,1,6,1,6,1,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,0,0,0,0,0,0,0,0,28,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,35,29,30,31,25,26,27,28,25,25,26,26,27,27,28,28,25,26,27,28,0,25,26,27,28,25,26,27,28,25,26,27,28,28,25,26,27,28,25,25,26,26,27,27,28,28,28,25,26,27,28,25,26,27,28,25,26,27,28,28,25,26,27,28,25,26,27,28,0,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,25,26,27,28,0,0,0,0,0,0,0,0,37,38,39,40,41,42,43,37,38,39,40,41,42,43,40,37,38,39,40,37,38,39,40,38,39,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,40,37,38,39,40,41,42,43,37,37,37,37,38,39,40,41,42,43,37,38,39,40,41,42,43,39,37,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,41,42,43,41,42,43,0,40,37,38,39,40,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,37,38,39,40,41,42,43,39,37,37,37,37,37,38,39,40,41,42,43,53,0,0,57,57,0,0,0,0,53,0,0,0,0,0,57,57,49,52,54,55,59,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,57,57,57,49,52,54,55,59,61,49,52,53,54,55,56,57,58,59,60,61,49,52,54,55,59,61,54,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,57,57,52,49,58,58,49,49,52,53,54,55,56,57,58,59,60,61,61,49,52,53,54,55,56,57,58,59,60,61,49,52,54,55,59,61,49,52,53,54,55,56,57,58,59,60,61,49,52,54,55,61,59,56,49,49,54,54,55,58,60,60,61,59,49,59,49,55,49,54,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,49,52,53,54,55,56,57,58,59,60,61,56,49,52,53,54,55,56,57,58,59,60,61,49,52,54,55,59,61,49,52,54,55,59,61,49,52,53,54,55,56,57,58,59,60,61,56,49,49,52,53,54,55,56,57,58,59,60,61,49,52,52,52,54,0,0,0,0,0,0,0,0,0,0,73,73,73,73,75,83,77,81,78,79,80,75,75,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,75,73,77,78,79,80,73,77,78,79,80,75,75,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,81,73,73,73,73,77,78,79,80,75,82,75,73,73,83,77,81,78,79,80,75,73,83,77,81,78,79,80,73,75,82,75,73,83,77,81,78,79,80,73,82,75,73,83,77,81,78,79,80,73,82,73,81,82,75,73,83,77,81,78,79,80,75,82,75,73,83,77,81,78,79,80,75,73,83,77,81,78,79,80,75,75,82,75,73,83,77,81,78,79,80,75,75,75,75,0,78,79,73,82,73,78,79,75,75,73,75,73,75,0,0,75,75,75,75,75,75,75,75,75,75,82,82,75,82,81,0,0,0,0,73,73,73,77,78,79,80,73,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,75,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,75,73,83,77,81,78,79,80,75,73,83,77,81,78,79,80,82,75,73,83,77,81,78,79,80,75,81,82,75,73,83,77,81,78,79,80,73,73,73,73,73,73,73,73,75,78,78,79,0,0,0,0,0,0,0,0,0,95,0,0,0,95,0,13,13,13,0,0,0,0,95,0,0,13,13,0,13,95,91,94,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,98,99,100,101,95,102,103,104,92,98,99,100,101,95,102,103,104,92,0,0,91,98,99,91,94,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,98,99,100,102,103,104,92,100,100,102,102,103,103,104,104,92,92,91,94,13,13,98,99,91,100,101,95,94,102,102,103,103,104,104,92,92,92,101,13,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,100,102,103,104,92,100,102,103,104,92,101,13,98,99,91,100,101,95,94,102,103,104,92,94,91,94,13,98,99,91,100,101,95,94,102,103,104,92,91,91,91,13,98,99,91,100,101,95,94,102,103,104,92,91,91,98,99,92,91,94,92,92,0,91,92,91,0,91,0,0,91,94,91,94,102,103,104,92,91,91,13,0,0,0,0,92,0,91,91,98,99,100,101,95,102,103,104,92,13,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,0,91,91,91,92,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,91,92,91,91,91,91,91,92,91,91,13,98,99,91,100,101,95,94,102,103,104,92,13,98,99,91,100,101,95,94,102,103,104,92,91,94,101,91,13,98,99,91,100,101,95,94,102,103,104,92,92,92,92,92,94,92,92,92,92,91,94,98,98,99,110,111,112,113,114],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[1,[-1]]],[[1,[-2]]],[],[[2,[-1]]]],[[[1,[-1]],3],[[1,[-1]]],[]],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[[6,7],8],[[6,7],8],[[[1,[-1]],7],8,9],[[[1,[-1]],7],8,10],[11,12],[13,12],[14,12],[14,6],[-1,-1,[]],[13,6],[11,6],[-1,-1,[]],[15,-1,[]],[-1,[[1,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,16,[]],[[[1,[-1]],-2],[[1,[-3]]],[],17,[]],[6,[[19,[18]]]],[[[1,[-1]]],[[19,[18]]],[9,10,18]],[-1,3,[]],[-1,3,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,22],[[24,[23]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[26,26],[27,27],[28,28],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,0,[[],25],[[],26],[[],27],[[],28],[25,29],[4,-1,[]],[26,30],[4,-1,[]],[27,31],[4,-1,[]],[4,-1,[]],[28],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[30,[[5,[32,32]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[4,5],[4,5],[[25,25],16],[[26,26],16],[[27,27],16],[[28,28],16],[23,[[33,[28]]]],[[25,7],8],[[26,7],8],[[27,7],8],[[28,7],8],[29,25],[-1,-1,[]],[30,26],[-1,-1,[]],[-1,-1,[]],[31,27],[[[34,[32]]],28],[-1,-1,[]],[35,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,22],36],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[32,32],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[37,37],[38,38],[39,39],[40,40],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],0,[[37,7],8],[[38,7],8],[[39,7],8],[[40,7],8],[[41,7],8],[[42,7],8],[[43,7],8],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[44,45,46,37],41],[[44,46],42],[[44,46],43],[[41,44,45,47,[5,[48,48]],38],5],[[42,44,45,47,[5,[48,48]],46,[50,[49]]],5],[[43,44,45,47,[5,[48,48]],46,[50,[51]]],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[49,49],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],49],[[],52],[[],53],[[],54],[[],55],[[],59],[[],60],[[],61],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[[57,57],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[[49,7],8],[[52,7],8],[[53,7],8],[[54,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[58,7],8],[[59,7],8],[[60,7],8],[[61,7],8],[63,5],[63,5],[63,5],[63,5],[63,5],[63,5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[49,22],36],[[-1,-2],64,[65,66],67],[[57,-1],5,68],0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[49,22],36],[[52,22],36],[[54,22],36],[[55,22],36],[[59,22],36],[[61,22],36],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[],49],[[],52],[[],54],[[],55],[[],61],0,0,0,0,[54,32],0,0,0,0,0,0,0,[[49,23],[[33,[5]]]],[[59,4,[69,[61]]],5],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],0,[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[22,70],[22,70],[22,70],[22,70],[22,70],[22,70],[22,71],[22,71],[22,71],[22,71],[22,71],[22,71],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[54,32],0,0,0,0,[[],72],0,0,0,0,0,[73],[73],[[73,74]],[73],[75,[[76,[48,3]]]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[-1,22],[[24,[23]]],[]],[[75,32],5],[[75,22,73,36],[[33,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,[[69,[48]]]],[73,73],[77,77],[78,78],[79,79],[80,80],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[75,4],[[75,48],[[20,[5,62]]]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[81,48],[[73,73],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[23,[[20,[-1,62]]],[]],[[75,73],[[33,[[19,[81]]]]]],[[82,7],8],[[75,7],8],[[73,7],8],[[73,7],8],[[83,7],8],[[77,7],8],[[81,7],8],[[78,7],8],[[79,7],8],[[80,7],8],[63,5],[63,5],[63,5],[63,5],[63,5],[63,5],[63,5],[63,5],[73,[[19,[48]]]],[[75,22,48],[[33,[[69,[[76,[3,36]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[50,[84]]],[[33,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],64,[65,66],67],[[82,22,85],[[33,[5]]]],[[73,-1],5,68],[81,4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[75,48],[[20,[5,62]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,22],36],[[73,22],36],[[83,22],36],[[77,22],36],[[81,22],36],[[78,22],36],[[79,22],36],[[80,22],36],[[75,73],[[33,[16]]]],[[75,73],[[33,[16]]]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[75,73],[[33,[16]]]],[[75,73],[[33,[[19,[86]]]]]],[[22,86],[[33,[[24,[75]]]]]],[[22,86,[24,[75]]],[[33,[[24,[75]]]]]],0,0,0,[73,86],[22,[[33,[82]]]],[86,73],[[32,32,32],78],[[87,32],79],[75,4],[75,4],[73,[[19,[4]]]],[[75,48,4],[[33,[[19,[83]]]]]],[73,[[19,[83]]]],[[75,83],3],[[86,36],[[33,[5]]]],[[86,36],[[33,[5]]]],[[75,48,86],[[33,[[19,[77]]]]]],[[75,22,48,86],[[33,[36]]]],[[75,22,73],[[33,[36]]]],[[75,48,48],[[33,[59]]]],[[75,49,48],[[33,[5]]]],[[75,22,48,77],[[33,[88]]]],[[75,49,48],[[33,[5]]]],[75,[[20,[5,62]]]],[[75,48,86],[[33,[[19,[80]]]]]],[[75,73],[[33,[5]]]],[[82,22,89],[[33,[5]]]],[[82,22,[5,[48,48]]],[[33,[5]]]],[[75,86,48],5],[[82,22],[[33,[5]]]],[81,48],[[78,87,87,16],79],[[32,32],[[5,[87,87]]]],[[79,87,87,16,87],[[5,[87,87]]]],[[87,87],78],[73,[[19,[4]]]],[[73,22],[[33,[88]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,48,[5,[[34,[32]],[34,[32]]]]],[[33,[[19,[4]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[22,70],[22,70],[22,70],[22,70],[22,70],[22,70],[22,70],[22,70],[22,71],[22,71],[22,71],[22,71],[22,71],[22,71],[22,71],[22,71],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[75,48],[[20,[5,62]]]],[[81,22],[[33,[36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[73,48],73],[[73,4],73],[[73,83],73],[[73,4],73],[73,73],[73,73],[73,73],[73,73],[[75,22,73,36],[[33,[5]]]],0,0,0,[[22,-1],5,[[90,[3]]]],[-1,5,[[90,[3]]]],[[22,-1],5,[[90,[3]]]],[-1,5,[[90,[3]]]],[[22,-1],5,[[90,[3]]]],[-1,5,[[90,[3]]]],[[22,-1],5,[[90,[3]]]],[-1,5,[[90,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[91,92,93],5],[[[94,[-1,-2]],-1,48,-2],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[99,99],[100,100],[[[101,[-1]]],[[101,[-1]]],97],[[[95,[-1,-2]]],[[95,[-1,-2]]],97,97],[102,102],[103,103],[104,104],[92,92],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[86,86],3],[[86,86],3],0,[[],98],[[],99],[[91,48],[[20,[5,12]]]],[[[94,[-1,-2]],48],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[20,[102]]],105],[-1,[[20,[103]]],105],[-1,[[20,[104]]],105],[-1,[[20,[92]]],105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[[98,98],16],[[99,99],16],[[100,100],16],[[102,102],16],[[103,103],16],[[104,104],16],[[92,92],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[91,92],[[19,[[101,[93]]]]]],[[[94,[-1,-2]],-1,48],[[19,[[101,[-2]]]]],[65,96,97],97],[[13,7],8],[[13,7],8],[[98,7],8],[[99,7],8],[[91,7],8],[[100,7],8],[[[101,[-1]],7],8,9],[[[95,[-1,-2]],7],8,9,9],[[[94,[-1,-2]],7],8,9,9],[[102,7],8],[[102,7],8],[[103,7],8],[[103,7],8],[[104,7],8],[[104,7],8],[[92,7],8],[[92,7],8],0,0,[106,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],64,[65,66],67],[[-1,-2],64,[65,66],67],[[-1,-2],64,[65,66],67],[[-1,-2],64,[65,66],67],[[-1,-2],64,[65,66],67],[[100,-1],5,68],[[102,-1],5,68],[[103,-1],5,68],[[104,-1],5,68],[[92,-1],5,68],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[94,[-1,-2]]],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[[91,48],[[20,[5,12]]]],[[[94,[-1,-2]],48],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,[[94,[92,93]]]],[[91,92],16],[[91,92],16],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[91,92],16],[[91,92],[[19,[86]]]],0,0,0,[86,91],[[],[[94,[-1,-2]]],[65,96,97],97],[86,92],0,[[107,48,86],[[20,[104,12]]]],[[91,48,102],[[19,[104]]]],0,[[91,104],3],[[107,48,102],[[20,[[19,[3]],12]]]],[[91,92],93],[[49,107,48],[[20,[5,12]]]],[[49,107,48],[[20,[5,12]]]],[91,5],[[[94,[-1,-2]]],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[[91,92],5],[[[94,[-1,-2]],-1,48],[[69,[[95,[-1,-2]]]]],[65,96,97],97],[[102,-1],20,108],[[103,-1],20,108],[[104,-1],20,108],[[92,-1],20,108],[[91,[94,[92,93]]],5],[[91,86,48],5],[13,[[19,[18]]]],[[98,109,109,16],99],[[32,32],[[5,[87,87]]]],[[99,109,109,16,109],[[5,[87,87]]]],[[87,87],98],0,[[107,48,103],[[20,[[19,[3]],12]]]],[91,107],[91,107],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[107,48,[5,[35,30]]],[[20,[[19,[[5,[4,35]]]],12]]]],[[91,48,[5,[[34,[32]],[34,[32]]]]],[[19,[4]]]],[[91,92,93],[[20,[5,12]]]],[[91,92],[[20,[[19,[[101,[93]]]],12]]]],[92,[[20,[48,12]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[86,[[20,[91,12]]]],[92,[[20,[102,12]]]],[[91,48,102],[[20,[[19,[104]],12]]]],[[91,92],[[20,[93,12]]]],[91,[[20,[5,12]]]],[[91,92],[[20,[5,12]]]],[[91,[94,[92,93]]],[[20,[5,12]]]],[92,[[20,[103,12]]]],[[91,48],[[20,[5,12]]]],[[91,92,93],[[20,[5,12]]]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[91,48],5],[[[94,[-1,-2]],48],[[69,[[95,[-1,-2]]]]],[65,96,97],97],0,[[91,86],[[69,[92]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[92,48],92],[[92,102],92],[[92,104],92],[[92,103],92],[[[94,[-1,-2]]],[[94,[-1,-2]]],[65,96,97],97],[92,92],[92,92],[92,92],[92,92],[[91,92,93],5],[[[94,[-1,-2]],-1,48,-2],[[69,[[95,[-1,-2]]]]],[65,96,97],97],0,0,0,0,0,0,0,0],"c":[],"p":[[3,"WithContext",5],[8,"From",1464],[3,"String",1465],[15,"usize"],[15,"tuple"],[4,"ErrorCause",5],[3,"Formatter",1466],[6,"Result",1466],[8,"Debug",1466],[8,"Display",1466],[3,"ValueTypeError",1467],[6,"Error",5],[4,"SM64ErrorCause",1051],[4,"Error",1468],[15,"never"],[15,"bool"],[8,"FnOnce",1469],[8,"Error",1470],[4,"Option",1471],[4,"Result",1472],[3,"TypeId",1473],[3,"Python",1474],[3,"PyAny",1475],[3,"Py",1476],[3,"StoredMatrix4f",72],[3,"StoredVector3f",72],[3,"StoredVector4f",72],[3,"StoredPoint3f",72],[6,"Matrix4f",72],[6,"Vector3f",72],[6,"Vector4f",72],[15,"f32"],[6,"PyResult",1477],[15,"array"],[6,"Point3f",72],[6,"PyObject",1476],[3,"ImguiConfig",198],[3,"ImguiDrawData",198],[3,"ImguiCommandList",198],[3,"ImguiCommand",198],[3,"ImguiRenderer",198],[3,"Renderer",198],[3,"VizContainer",198],[3,"Device",1478],[3,"Queue",1478],[4,"TextureFormat",1479],[3,"TextureView",1478],[15,"u32"],[3,"Scene",373],[15,"slice"],[3,"VizRenderData",1480],[3,"Viewport",373],[4,"Camera",373],[3,"RotateCamera",373],[3,"BirdsEyeCamera",373],[3,"Surface",373],[4,"SurfaceType",373],[3,"Object",373],[3,"ObjectPath",373],[3,"ObjectPathNode",373],[3,"QuarterStep",373],[3,"PyErr",1477],[8,"FnMut",1469],[15,"u64"],[8,"Hash",1481],[8,"Sized",1482],[8,"BuildHasher",1481],[8,"Hasher",1481],[3,"Vec",1483],[3,"PyType",1484],[3,"PyTypeObject",1485],[3,"PyObject",1486],[3,"PyVariable",721],[4,"CompareOp",1487],[3,"PyPipeline",721],[3,"HashMap",1488],[3,"PyAddress",721],[3,"PyAdjustedStick",721],[3,"PyIntendedStick",721],[3,"PyVizRenderData",721],[3,"PyEditRange",721],[3,"ImguiInput",721],[3,"PyObjectBehavior",721],[15,"u8"],[4,"WindowEvent",1489],[15,"str"],[15,"i16"],[3,"PyBytes",1490],[15,"f64"],[8,"Into",1464],[3,"Pipeline",1051],[3,"Variable",1051],[4,"Value",1491],[3,"RangeEdits",1051],[4,"EditOperation",1051],[8,"Eq",1492],[8,"Clone",1493],[3,"AdjustedStick",1051],[3,"IntendedStick",1051],[3,"EditRangeId",1051],[3,"EditRange",1051],[3,"ObjectSlot",1051],[3,"SurfaceSlot",1051],[3,"ObjectBehavior",1051],[8,"Deserializer",1494],[3,"Error",1495],[3,"Timeline",1496],[8,"Serializer",1497],[6,"Angle",1491],[13,"ValueFromPython",1459],[13,"UnhandledVariable",1459],[13,"MissingFrame",1459],[13,"MissingObject",1459],[13,"MissingSurface",1459]]},\
"wafel_data_access":{"doc":"Reading and writing structured data to memory.","t":"NNNEEEEENDIYIINIINNNNDNNNNNDNNIDNNNNNNNNNNGQNNNQQNNNNGQLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLKLMLKLKLKAMLLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKAMMMMMMMMMMMMMMMMMMDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CompileError","ConcatTypeMismatch","Context","DataError","DataPath","DataPathCompileError","DataPathEdge","DataPathError","DataPathError","DataPathImpl","DataReadable","DataReadable","DataReader","DataStride","DataTypeError","DataWritable","DataWriter","Deref","ExpectedGlobalPath","ExpectedLocalPath","Global","GlobalDataPath","IndexOutOfBounds","InvalidValue","LayoutLookupError","LayoutLookupError","Local","LocalDataPath","MaskOnNonInt","MemoryError","MemoryLayout","MemoryLayoutImpl","NoSymbolAtAddress","NotAField","NotAStruct","NotAnArray","Nullable","NullableNotAPointer","Offset","ParseError","ReadUnion","ReadUnsizedArray","Reader","Reader","UndefinedField","UndefinedSymbol","UnsizedBaseType","Value","Value","ValueTypeError","WriteExtraField","WriteMissingField","WriteUnion","Writer","Writer","address","address_to_symbol","address_to_symbol","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compile","compile","compile","concat","concat","concrete_type","concrete_type","concrete_type","concrete_type","concrete_types","data_layout","data_layout","data_type_reader","data_type_reader","edges","eq","equivalent","equivalent","field_offset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","global_path","global_path","into","into","into","into","into","into","into","into","into","into_global","into_local","local_path","local_path","mask","new","pointer_size","pointer_size","read","read","reader","readers","root","root_type","source","source","stride","symbol_address","symbol_address","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","writer","writers","context","error","expected","value","field_name","index","length","name","name","error","path","path","path","path1","path2","source","type1","type2","AddressReader","ArrayReader","DataTypeReader","F32Reader","F64Reader","I16Reader","I32Reader","I64Reader","I8Reader","U16Reader","U32Reader","U64Reader","U8Reader","WrappingReader","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AddressWriter","ArrayWriter","DataTypeWriter","F32Writer","F64Writer","I16Writer","I32Writer","I64Writer","I8Writer","U16Writer","U32Writer","U64Writer","U8Writer","WrappingWriter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write","write"],"q":[[0,"wafel_data_access"],[218,"wafel_data_access::DataError"],[222,"wafel_data_access::DataPathCompileError"],[227,"wafel_data_access::DataPathError"],[236,"wafel_data_access::readers"],[492,"wafel_data_access::writers"],[747,"wafel_data_type::value"],[748,"core::option"],[749,"core::result"],[750,"wafel_memory::traits"],[751,"alloc::string"],[752,"wafel_memory::traits"],[753,"wafel_data_type::data_type"],[754,"wafel_layout::data_layout"],[755,"core::fmt"],[756,"core::fmt"],[757,"wafel_data_type::error"],[758,"wafel_data_type::error"],[759,"alloc::sync"],[760,"wafel_data_type::value"],[761,"wafel_memory::traits"],[762,"core::cmp"],[763,"core::hash"],[764,"core::hash"]],"d":["","","","","Either a global or a local data path.","","An operation that is applied when evaluating a data path.","","","Internal representation of a global or local data path.","Trait for Rust types that can be read from memory.","","A type that knows how to read a structured value from â€¦","A readable/writable type that can be used in an array â€¦","","Trait for Rust types that can be written to memory.","A type that knows how to write a structured value to â€¦","addr -&gt; *addr","","","A global data path.","A data path starting from a global variable address.","","","","","A local data path.","A data path starting from a type, such as a specific â€¦","","","A trait for looking up the structured layout of data in â€¦","Basic implementation of MemoryLayout.","","","","","If the value calculated so far is null, return Value::None.","","addr -&gt; addr + offset","","","","Shorthand for the Reader of a DataReadable.","The reader for the type.","","","","The type of value that is read from memory.","The type of value that is written to memory.","","","","","Shorthand for the Writer of a DataWritable.","The writer for the type.","Evaluate the path and return the address of the variable.","Return the name of the global variable at the given â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compile a global data path from source.","Compile a local data path from source.","Compile a data path from source.","Concatenate a global and local path.","Concatenate two local paths.","Get the concrete data type that the path points to.","Get the concrete data type that the path points to.","Get the concrete data type that the path points to.","The type of the value that the path points to.","The concrete type for each type name that appears in the â€¦","Return the layout of data types and globals.","","Returns a DataReader for reading a Value of a given type.","Returns a DataReader for reading a Value of a given type.","The operations to perform when evaluating the path.","","","","Return the field offset for a path of the form <code>struct A.x</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Compile a global data path, cached.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Try to convert into a <code>GlobalDataPath</code>.","Try to convert into a <code>LocalDataPath</code>.","Compile a local data path, cached.","","The mask to apply for an integer variable.","Construct a new MemoryLayoutImpl.","Return the size in bytes of a pointer (4 or 8).","","Read the value from memory at the given address.","Evaluate the path and return the value stored in the â€¦","Construct a reader using the given layout.","","The root for the path (either a global variable address or â€¦","Get the pathâ€™s root data type.","Get the source for the path.","The original source for the data path.","The stride of an array of this type of value.","Look up a symbol in memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the value to memory at the given address.","Evaluate the path and write <code>value</code> to the variable.","Construct a writer using the given layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[15,15,4,0,0,0,0,0,4,0,0,0,0,0,4,0,0,12,15,15,14,0,16,4,4,16,14,0,16,4,0,0,4,15,16,16,12,16,12,16,4,4,0,81,16,16,16,64,80,4,4,4,4,0,82,1,19,8,10,12,1,13,14,4,15,16,8,10,12,1,13,14,4,15,16,8,10,12,1,13,14,4,15,16,10,12,1,13,14,4,15,16,1,13,14,1,13,1,13,14,10,10,19,8,19,19,10,12,12,12,13,10,10,12,1,1,13,13,14,14,4,4,15,15,16,16,8,10,12,1,13,14,4,4,4,4,4,4,15,16,16,8,19,8,10,12,1,13,14,4,15,16,8,14,14,19,8,10,8,19,8,64,1,81,0,10,13,1,10,83,19,8,10,12,1,13,14,4,15,16,10,1,13,14,4,15,16,10,12,1,13,14,4,15,16,8,10,12,1,13,14,4,15,16,8,10,12,1,13,14,4,15,16,8,80,1,82,0,84,84,85,85,86,87,87,88,89,90,91,92,93,94,94,90,94,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,48,36,37,38,39,40,41,42,43,44,45,46,48,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,48,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,22,22,48,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,36,37,38,39,40,41,42,43,44,45,46,47,22,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,79,66,67,68,69,70,71,72,73,74,75,76,79,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,79,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,67,68,69,70,71,72,73,74,75,76,77,78,79,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1],[[5,[[3,[2]],4]]],6],[[-1,2],[[5,[7,4]]],[]],[[[8,[-1]],2],[[5,[7,4]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],[[10,[-1]]],11],[12,12],[1,1],[13,13],[14,14],[4,4],[15,15],[16,16],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,18],[[5,[1,15]]],19],[[-1,18],[[5,[13,15]]],19],[[-1,18],[[5,[14,15]]],19],[[1,13],[[5,[1,15]]]],[[13,13],[[5,[13,15]]]],[1,20],[13,20],[14,20],0,0,[-1,21,[]],[[[8,[-1]]],21,9],[[-1,20],[[5,[22,4]]],[]],[[-1,20],[[5,[22,4]]],[]],0,[[12,12],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[13,[[5,[24,15]]]],[[[10,[-1]],25],26,27],[[[10,[-1]],25],26,[]],[[12,25],26],[[1,25],26],[[1,25],26],[[13,25],26],[[13,25],26],[[14,25],26],[[14,25],26],[[4,25],26],[[4,25],26],[[15,25],26],[[15,25],26],[[16,25],26],[[16,25],26],[[[8,[-1]],25],26,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,4],[29,4],[30,4],[15,4],[31,4],[-1,-1,[]],[-1,-1,[]],[28,16],[-1,-1,[]],[[-1,18],[[5,[[32,[1]],4]]],[]],[[[8,[-1]],18],[[5,[[32,[1]],4]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,[[5,[1,15]]]],[14,[[5,[13,15]]]],[[-1,18],[[5,[[32,[13]],4]]],[]],[[[8,[-1]],18],[[5,[[32,[13]],4]]],9],0,[[[32,[21]],[32,[-1]],24],[[8,[-1]]],9],[-1,24,[]],[[[8,[-1]]],24,9],[[-1,-2,2],[[5,[4]]],[],6],[[1,-1],[[5,[33,4]]],6],[-1,[[5,[4]]],19],0,0,[13,20],[1,18],0,[-1,[[5,[24,4]]],19],[[-1,18],[[5,[2,4]]],[]],[[[8,[-1]],18],[[5,[2,4]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[-1,-2,2],[[5,[17,4]]],[],[6,35]],[[1,-1,33],[[5,[17,4]]],[6,35]],[-1,[[5,[4]]],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[[[47,[-1]]],[[47,[-1]]],11],[22,22],[[[48,[-1]]],[[48,[-1]]],11],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],[[48,[-1]]],49],[[36,36],23],[[37,37],23],[[38,38],23],[[39,39],23],[[40,40],23],[[41,41],23],[[42,42],23],[[43,43],23],[[44,44],23],[[45,45],23],[[46,46],23],[[[48,[-1]],[48,[-1]]],23,50],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[36,25],26],[[37,25],26],[[38,25],26],[[39,25],26],[[40,25],26],[[41,25],26],[[42,25],26],[[43,25],26],[[44,25],26],[[45,25],26],[[46,25],26],[[[47,[-1]],25],26,27],[[22,25],26],[[[48,[-1]],25],26,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[36,-1],17,51],[[37,-1],17,51],[[38,-1],17,51],[[39,-1],17,51],[[40,-1],17,51],[[41,-1],17,51],[[42,-1],17,51],[[43,-1],17,51],[[44,-1],17,51],[[45,-1],17,51],[[46,-1],17,51],[[[48,[-1]],-2],17,52,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,-1,2],[[5,[53,4]]],6],[[36,-1,2],[[5,[53,4]]],6],[[37,-1,2],[[5,[54,4]]],6],[[37,-1,2],[[5,[54,4]]],6],[[38,-1,2],[[5,[55,4]]],6],[[38,-1,2],[[5,[55,4]]],6],[[39,-1,2],[[5,[56,4]]],6],[[39,-1,2],[[5,[56,4]]],6],[[40,-1,2],[[5,[57,4]]],6],[[40,-1,2],[[5,[57,4]]],6],[[41,-1,2],[[5,[58,4]]],6],[[41,-1,2],[[5,[58,4]]],6],[[42,-1,2],[[5,[59,4]]],6],[[42,-1,2],[[5,[59,4]]],6],[[43,-1,2],[[5,[60,4]]],6],[[43,-1,2],[[5,[60,4]]],6],[[44,-1,2],[[5,[61,4]]],6],[[44,-1,2],[[5,[61,4]]],6],[[45,-1,2],[[5,[62,4]]],6],[[45,-1,2],[[5,[62,4]]],6],[[46,-1,2],[[5,[2,4]]],6],[[46,-1,2],[[5,[2,4]]],6],[[[47,[-1]],-2,2],[[5,[63,4]]],64,6],[[[47,[-1]],-2,2],[[5,[63,4]]],64,6],[[22,-1,2],[[5,[33,4]]],6],[[22,-1,2],[[5,[33,4]]],6],[[[48,[-1]],-2,2],[[5,[65,4]]],64,6],[[[48,[-1]],-2,2],[[5,[65,4]]],64,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[[[77,[-1]]],[[77,[-1]]],11],[78,78],[[[79,[-1]]],[[79,[-1]]],11],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[],66],[[],67],[[],68],[[],69],[[],70],[[],71],[[],72],[[],73],[[],74],[[],75],[[],76],[[],[[79,[-1]]],49],[[66,66],23],[[67,67],23],[[68,68],23],[[69,69],23],[[70,70],23],[[71,71],23],[[72,72],23],[[73,73],23],[[74,74],23],[[75,75],23],[[76,76],23],[[[79,[-1]],[79,[-1]]],23,50],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[66,25],26],[[67,25],26],[[68,25],26],[[69,25],26],[[70,25],26],[[71,25],26],[[72,25],26],[[73,25],26],[[74,25],26],[[75,25],26],[[76,25],26],[[[77,[-1]],25],26,27],[[78,25],26],[[[79,[-1]],25],26,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[66,-1],17,51],[[67,-1],17,51],[[68,-1],17,51],[[69,-1],17,51],[[70,-1],17,51],[[71,-1],17,51],[[72,-1],17,51],[[73,-1],17,51],[[74,-1],17,51],[[75,-1],17,51],[[76,-1],17,51],[[[79,[-1]],-2],17,52,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[66,-1,2,53],[[5,[17,4]]],[6,35]],[[66,-1,2,53],[[5,[17,4]]],[6,35]],[[67,-1,2,54],[[5,[17,4]]],[6,35]],[[67,-1,2,54],[[5,[17,4]]],[6,35]],[[68,-1,2,55],[[5,[17,4]]],[6,35]],[[68,-1,2,55],[[5,[17,4]]],[6,35]],[[69,-1,2,56],[[5,[17,4]]],[6,35]],[[69,-1,2,56],[[5,[17,4]]],[6,35]],[[70,-1,2,57],[[5,[17,4]]],[6,35]],[[70,-1,2,57],[[5,[17,4]]],[6,35]],[[71,-1,2,58],[[5,[17,4]]],[6,35]],[[71,-1,2,58],[[5,[17,4]]],[6,35]],[[72,-1,2,59],[[5,[17,4]]],[6,35]],[[72,-1,2,59],[[5,[17,4]]],[6,35]],[[73,-1,2,60],[[5,[17,4]]],[6,35]],[[73,-1,2,60],[[5,[17,4]]],[6,35]],[[74,-1,2,61],[[5,[17,4]]],[6,35]],[[74,-1,2,61],[[5,[17,4]]],[6,35]],[[75,-1,2,62],[[5,[17,4]]],[6,35]],[[75,-1,2,62],[[5,[17,4]]],[6,35]],[[76,-1,2,2],[[5,[17,4]]],[6,35]],[[76,-1,2,2],[[5,[17,4]]],[6,35]],[[[77,[-1]],-2,2,63],[[5,[17,4]]],80,[6,35]],[[[77,[-1]],-2,2,63],[[5,[17,4]]],80,[6,35]],[[78,-1,2,33],[[5,[17,4]]],[6,35]],[[78,-1,2,33],[[5,[17,4]]],[6,35]],[[[79,[-1]],-2,2,65],[[5,[17,4]]],80,[6,35]]],"c":[],"p":[[3,"GlobalDataPath",0],[3,"Address",747],[4,"Option",748],[4,"DataError",0],[4,"Result",749],[8,"MemoryRead",750],[3,"String",751],[3,"MemoryLayoutImpl",0],[8,"SymbolLookup",750],[3,"DataPathImpl",0],[8,"Clone",752],[4,"DataPathEdge",0],[3,"LocalDataPath",0],[4,"DataPath",0],[4,"DataPathError",0],[4,"DataPathCompileError",0],[15,"tuple"],[15,"str"],[8,"MemoryLayout",0],[6,"DataTypeRef",753],[3,"DataLayout",754],[3,"DataTypeReader",236],[15,"bool"],[15,"usize"],[3,"Formatter",755],[6,"Result",755],[8,"Debug",755],[4,"LayoutLookupError",756],[4,"DataTypeError",757],[3,"ValueTypeError",757],[4,"MemoryError",758],[3,"Arc",759],[4,"Value",747],[3,"TypeId",760],[8,"MemoryWrite",750],[3,"U8Reader",236],[3,"I8Reader",236],[3,"U16Reader",236],[3,"I16Reader",236],[3,"U32Reader",236],[3,"I32Reader",236],[3,"U64Reader",236],[3,"I64Reader",236],[3,"F32Reader",236],[3,"F64Reader",236],[3,"AddressReader",236],[3,"ArrayReader",236],[3,"WrappingReader",236],[8,"Default",761],[8,"PartialEq",762],[8,"Hasher",763],[8,"Hash",763],[15,"u8"],[15,"i8"],[15,"u16"],[15,"i16"],[15,"u32"],[15,"i32"],[15,"u64"],[15,"i64"],[15,"f32"],[15,"f64"],[15,"array"],[8,"DataReader",0],[3,"Wrapping",764],[3,"U8Writer",492],[3,"I8Writer",492],[3,"U16Writer",492],[3,"I16Writer",492],[3,"U32Writer",492],[3,"I32Writer",492],[3,"U64Writer",492],[3,"I64Writer",492],[3,"F32Writer",492],[3,"F64Writer",492],[3,"AddressWriter",492],[3,"ArrayWriter",492],[3,"DataTypeWriter",492],[3,"WrappingWriter",492],[8,"DataWriter",0],[8,"DataReadable",0],[8,"DataWritable",0],[8,"DataStride",0],[13,"Context",218],[13,"InvalidValue",218],[13,"NotAStruct",222],[13,"IndexOutOfBounds",222],[13,"UndefinedSymbol",222],[13,"UndefinedField",222],[13,"CompileError",227],[13,"ExpectedGlobalPath",227],[13,"ExpectedLocalPath",227],[13,"NotAField",227],[13,"ConcatTypeMismatch",227]]},\
"wafel_data_access_derive":{"doc":"Derive macro for wafel_data_access::DataReadable.","t":"Y","n":["DataReadable"],"q":[[0,"wafel_data_access_derive"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"wafel_data_type":{"doc":"Representation of Wafel data types and values, mostly â€¦","t":"DNGNNEEGNNNDNNEGNNEGSNENNNNNNNNNNNDNNNNNNNEDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMNNENNNNNNNNDEEDNNNNNNLLLLLLLLLLFLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Address","Address","Angle","Array","Array","DataType","DataTypeError","DataTypeRef","ExpectedType","F32","F64","Field","Float","Float","FloatType","FloatValue","Int","Int","IntType","IntValue","NULL","Name","Namespace","NoSuchField","None","Pointer","S16","S32","S64","S8","String","Struct","Struct","Struct","TypeName","Typedef","U16","U32","U64","U8","Union","Union","Value","ValueSerializeWrapper","ValueTypeError","Void","actual","add","add_assign","as_address","as_array","as_array_with_len","as_f32","as_f32_3","as_float","as_float_lenient","as_i16_3","as_int","as_int_lenient","as_none","as_str","as_struct","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","data_type","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expected","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","is_array","is_float","is_int","is_name","is_none","is_not_null","is_null","is_pointer","is_struct","is_union","is_void","name","namespace","of_struct","of_typedef","of_union","offset","option","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shallow","size","size","stride","struct_field","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_as_address","try_as_array","try_as_array","try_as_array_with_len","try_as_f32","try_as_f32_3","try_as_float","try_as_float","try_as_float_lenient","try_as_i16_3","try_as_int","try_as_int","try_as_int_lenient","try_as_name","try_as_none","try_as_pointer","try_as_str","try_as_struct","try_as_struct","try_as_union","try_as_usize","try_as_void","try_field","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u_ptr_native","base","base","fields","fields","length","stride","stride","actual","expected","name","Alias","Array","BuildDataTypesError","CyclicDependency","Defer","DeferMult","Float","Int","Known","Name","Pointer","PreDataType","PreDataTypeSize","ShallowDataType","ShallowField","Struct","UndefinedTypeId","Union","Unknown","UnsizedArrayElement","Void","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_types","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","dependencies","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_size_from_pre_types","hash","into","into","into","into","into","map","offset","resolve_direct","shallow_type","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","base","base","fields","fields","length"],"q":[[0,"wafel_data_type"],[328,"wafel_data_type::DataType"],[335,"wafel_data_type::DataTypeError"],[338,"wafel_data_type::shallow"],[435,"wafel_data_type::shallow::ShallowDataType"],[440,"alloc::string"],[441,"indexmap::map"],[442,"core::cmp"],[443,"core::result"],[444,"serde::de"],[445,"core::fmt"],[446,"core::fmt"],[447,"std::collections::hash::map"],[448,"core::clone"],[449,"alloc::vec"],[450,"core::hash"],[451,"core::option"],[452,"serde::ser"],[453,"core::any"],[454,"core::cmp"],[455,"core::ops::function"]],"d":["A raw pointer value that can be stored in memory.","An address value.","A 16 bit signed angle.","An array type, optionally with a length.","An array value.","A representation of a C data type.","","A reference to a <code>DataType</code>.","","32 bit float","64 bit float","A field in a struct or union.","A float type.","A float value, regardless of the underlying <code>FloatType</code> size.","Float types of different sizes.","An integer value.","An integer type.","An integer value, regardless of the underlying <code>IntType</code> â€¦","Integer types of different sizes and signedness.","An integer value.","The NULL address.","A symbolic reference to a type definition, e.g. <code>struct Foo</code>.","The C type namespaces.","","Represents the lack of a value.","A pointer type.","16 bit signed int","32 bit signed int","64 bit signed int","8 bit signed int","A string value.","A struct type.","Types defined using <code>struct A { ... }</code>.","A struct value.","A symbolic reference to a type definition, e.g. <code>struct Foo</code>.","Types defined using <code>typedef ... A</code>.","16 bit unsigned int","32 bit unsigned int","64 bit unsigned int","8 bit unsigned int","A union type.","Types defined using <code>union A { ... }</code>.","A dynamically typed value.","A wrapper around Value that provides a different â€¦","","Void, typically used as a pointer target or function â€¦","","","","Convert the value to an address, panicking on failure.","Convert the value to an array and return its elements, â€¦","Convert the value to an array and return its elements, â€¦","Convert the value to a float, and then truncate to an f32, â€¦","Convert the value to an array of three f32s, panicking on â€¦","Convert the value to a float, panicking if the value is â€¦","Convert the value to a usize, allowing in-range integers.","Convert the value to an array of three i16s, panicking on â€¦","Convert the value to an int, panicking if it is not an int.","Convert the value to an int, allowing in-range floats that â€¦","Panic if the value is not <code>Value::None</code>.","Convert the value to a string, panicking on failure.","Convert the value to a struct and return its fields, â€¦","Convert the value to a usize, panicking on failure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the value to a struct and look up the field with â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the data type is an array type.","Return true if the data type is a float type.","Return true if the data type is an integer type.","Return true if the data type is a type name.","Return true if the value is <code>Value::None</code>.","Returns true if the address is not null (equal to zero).","Returns true if the address is null (equal to zero).","Return true if the data type is a pointer type.","Return true if the data type is a struct type.","Return true if the data type is a union type.","Return true if the data type is void.","The raw name of the type.","The namespace that the type name blongs to.","Return a struct type name.","Return a typedef type name.","Return a union type name.","The byte offset within the struct or union.","Return None if the value is none, and Some(self) otherwise.","","","","","","","","","","Non-recursive version of data types that can be resolved â€¦","The size of the int in bytes.","The size of the float in bytes.","Return the stride for an array or pointer type.","Look up a field by name in a struct type.","","","","","","","","","","","","","","","","","","","","","","","Convert the value to an address.","Convert the data type to an array type.","Convert the value to an array and return its elements.","Convert the value to an array and return its elements.","Convert the value to a float and then truncate to an f32.","Convert the value to an array of three f32s.","Convert the data type to a float type.","Convert the value to a float.","Convert the value to a float, allowing in-range integers.","Convert the value to an array of three i16s.","Convert the data type to an int type.","Convert the value to an int.","Convert the value to an int, allowing in-range floats that â€¦","Convert the data type to a type name.","Return an error if the value is not <code>Value::None</code>.","Convert the data type to a pointer type.","Convert the value to a string.","Convert the data type to a struct type.","Convert the value to a struct and return its fields.","Convert the data type to a union type.","Convert the value to a usize.","Return an error if the data type is not void.","Convert the value to a struct and look up the field with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An unsigned IntType with the same size as native usize.","The type being pointed to.","The element type.","The fields contained in the struct.","The fields contained in the union.","The length of the array, if known.","The size of the type being pointed to, if known.","The size of the element type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,0,14,4,0,0,0,20,16,16,0,14,4,0,0,14,4,0,0,1,14,0,20,4,14,15,15,15,15,4,14,17,4,0,17,15,15,15,15,14,17,0,0,0,14,21,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,19,20,21,1,4,22,1,19,1,14,15,16,18,19,1,4,14,15,16,17,18,19,1,4,22,14,14,15,15,16,16,17,17,18,18,19,19,1,1,21,4,14,14,15,15,16,16,17,17,18,18,19,20,20,21,21,1,1,4,4,22,14,15,16,17,18,19,20,21,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,22,15,16,17,18,1,14,15,16,17,18,19,20,21,1,4,22,14,14,14,14,4,1,1,14,14,14,14,18,18,18,18,18,19,4,1,14,15,16,18,19,1,4,22,0,15,16,14,14,1,1,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,20,21,1,4,4,14,4,4,4,4,14,4,4,4,14,4,4,14,4,14,4,14,4,14,4,14,4,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,19,20,21,1,4,22,14,15,16,17,18,19,20,21,1,4,22,15,60,61,62,63,61,60,61,64,64,65,53,53,0,49,54,54,53,53,54,53,53,0,0,0,0,53,49,53,54,49,53,52,53,48,54,49,52,53,48,54,49,0,52,53,48,54,49,52,53,48,54,49,52,48,52,53,54,52,52,53,53,54,54,52,53,48,54,49,49,52,53,48,54,49,0,54,52,53,48,54,49,49,52,53,48,48,52,53,48,54,49,49,52,53,48,54,49,52,53,48,54,49,52,53,48,54,49,66,67,68,69,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[1,2],3],[4,1],[4,[[5,[4]]]],[[4,2],[[5,[4]]]],[4,6],[4,[[7,[6]]]],[4,8],[4,8],[4,[[7,[9]]]],[4,10],[4,10],[4,3],[4,11],[4,[[13,[12,4]]]],[4,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[1,1],[4,4],[22,22],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[1,1],23],0,[[],1],[-1,[[24,[14]]],25],[-1,[[24,[15]]],25],[-1,[[24,[16]]],25],[-1,[[24,[18]]],25],[-1,[[24,[19]]],25],[-1,[[24,[1]]],25],[-1,[[24,[4]]],25],[[14,14],26],[[15,15],26],[[16,16],26],[[17,17],26],[[18,18],26],[[19,19],26],[[1,1],26],[[4,4],26],[[22,22],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],0,[[4,11],4],[[14,27],28],[[14,27],28],[[15,27],28],[[15,27],28],[[16,27],28],[[16,27],28],[[17,27],28],[[17,27],28],[[18,27],28],[[18,27],28],[[19,27],28],[[20,27],28],[[20,27],28],[[21,27],28],[[21,27],28],[[1,27],28],[[1,27],28],[[4,27],28],[[4,27],28],[[22,27],28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[7,[-1]]],4,[[29,[4]]]],[9,4],[30,4],[1,4],[11,4],[31,4],[3,4],[[[32,[11,-1]]],4,[[29,[4]]]],[33,4],[34,4],[[[7,[[3,[11,-1]]]]],4,[[29,[4]]]],[35,4],[[[32,[12,-1]]],4,[[29,[4]]]],[[[5,[-1]]],4,[[29,[4]],36]],[37,4],[[[5,[[3,[12,-1]]]]],4,[[29,[4]],36]],[38,4],[2,4],[39,4],[40,4],[12,4],[41,4],[[[42,[[3,[11,-1]]]]],4,[[29,[4]]]],[[[7,[[3,[12,-1]]]]],4,[[29,[4]]]],[[[42,[-1]]],4,[[29,[4]]]],[[[42,[[3,[12,-1]]]]],4,[[29,[4]]]],[[[5,[[3,[11,-1]]]]],4,[[29,[4]],36]],[6,4],[-1,-1,[]],[-1,-1,[]],[[15,-1],3,43],[[16,-1],3,43],[[17,-1],3,43],[[18,-1],3,43],[[1,-1],3,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,26],[14,26],[14,26],[14,26],[4,26],[1,26],[1,26],[14,26],[14,26],[14,26],[14,26],0,0,[11,18],[11,18],[11,18],0,[4,[[44,[4]]]],[[1,1],[[44,[23]]]],[[14,-1],24,45],[[15,-1],24,45],[[16,-1],24,45],[[18,-1],24,45],[[19,-1],24,45],[[1,-1],24,45],[[4,-1],24,45],[[22,-1],24,45],0,[15,2],[16,2],[14,[[24,[[44,[2]],20]]]],[[14,11],[[24,[19,20]]]],[[1,2]],[[1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[4,[[24,[1,21]]]],[14,[[24,[[3,[46,[44,[2]],2]],20]]]],[4,[[24,[[5,[4]],21]]]],[[4,2],[[24,[[5,[4]],21]]]],[4,[[24,[6,21]]]],[4,[[24,[[7,[6]],21]]]],[14,[[24,[16,20]]]],[4,[[24,[8,21]]]],[4,[[24,[8,21]]]],[4,[[24,[[7,[9]],21]]]],[14,[[24,[15,20]]]],[4,[[24,[10,21]]]],[4,[[24,[10,21]]]],[14,[[24,[18,20]]]],[4,[[24,[3,21]]]],[14,[[24,[[3,[46,[44,[2]]]],20]]]],[4,[[24,[11,21]]]],[14,[[24,[[13,[12,19]],20]]]],[4,[[24,[[13,[12,4]],21]]]],[14,[[24,[[13,[12,19]],20]]]],[4,[[24,[2,21]]]],[14,[[24,[3,20]]]],[[4,11],[[24,[4,21]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[-1,[48,[-1]]]]],[[24,[[32,[-1,46]],[49,[-1]]]]],[36,50,51]],[[[52,[-1]]],[[52,[-1]]],36],[[[53,[-1]]],[[53,[-1]]],36],[[[48,[-1]]],[[48,[-1]]],36],[[[54,[-1]]],[[54,[-1]]],36],[[[49,[-1]]],[[49,[-1]]],36],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[[48,[-1]]],[[42,[-1]]],[]],[[[52,[-1]],[52,[-1]]],26,55],[[[53,[-1]],[53,[-1]]],26,55],[[[54,[-1]],[54,[-1]]],26,55],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[[52,[-1]],27],28,56],[[[53,[-1]],27],28,56],[[[48,[-1]],27],28,56],[[[54,[-1]],27],28,56],[[[49,[-1]],27],28,57],[[[49,[-1]],27],28,56],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[32,[-1,[48,[-1]]]]],[[0,[58]]],[36,50,51]],[[[54,[-1]],-2],3,51,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[49,[-1]],-2],[[49,[-3]]],[],59,[]],0,[[[53,[-1]],-2,-3],[[24,[46,[49,[-1]]]]],36,58,58],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,0,0,0],"c":[],"p":[[3,"Address",0],[15,"usize"],[15,"tuple"],[4,"Value",0],[15,"slice"],[15,"f32"],[15,"array"],[6,"FloatValue",0],[15,"i16"],[6,"IntValue",0],[15,"str"],[3,"String",440],[3,"IndexMap",441],[4,"DataType",0],[4,"IntType",0],[4,"FloatType",0],[4,"Namespace",0],[3,"TypeName",0],[3,"Field",0],[4,"DataTypeError",0],[3,"ValueTypeError",0],[3,"ValueSerializeWrapper",0],[4,"Ordering",442],[4,"Result",443],[8,"Deserializer",444],[15,"bool"],[3,"Formatter",445],[6,"Result",445],[8,"Into",446],[15,"i32"],[15,"u64"],[3,"HashMap",447],[15,"u8"],[15,"isize"],[15,"u32"],[8,"Clone",448],[15,"f64"],[15,"i8"],[15,"i64"],[15,"u16"],[15,"i128"],[3,"Vec",449],[8,"Hasher",450],[4,"Option",451],[8,"Serializer",452],[6,"DataTypeRef",0],[3,"TypeId",453],[3,"PreDataType",338],[4,"BuildDataTypesError",338],[8,"Eq",442],[8,"Hash",450],[3,"ShallowField",338],[4,"ShallowDataType",338],[4,"PreDataTypeSize",338],[8,"PartialEq",442],[8,"Debug",445],[8,"Display",445],[8,"Fn",454],[8,"FnOnce",454],[13,"Pointer",328],[13,"Array",328],[13,"Struct",328],[13,"Union",328],[13,"ExpectedType",335],[13,"NoSuchField",335],[13,"Pointer",435],[13,"Array",435],[13,"Struct",435],[13,"Union",435]]},\
"wafel_layout":{"doc":"Defines a mapping from global variables to types/values.","t":"NDEDDDEDNNNDNENNNNNNNNNNNNNENNNNNNLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMFMLLFMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMMMMMM","n":["BuildDataTypesError","Constant","ConstantSource","DataLayout","DllLayout","DllLayoutError","DllLayoutErrorKind","DllSegment","DwarfReadError","Enum","FileReadError","Global","InvalidIndex","LayoutLookupError","LayoutLookupError","Macro","MissingAttribute","MissingDataSegments","MissingDeclaration","MissingRawData","MissingRawDataArray","MissingSubrangeNode","NoDwarfInfo","ObjectReadError","ObjectStructInUse","ObjectStructNotStruct","RawDataNotUnion","SM64LayoutError","UndefinedConstant","UndefinedGlobal","UndefinedTypeName","UnexpectedTag","UnknownBaseTypeName","UnknownVersion","add_sm64_extras","address","append_dll_extension","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","concrete_type","concrete_types","constant","constants","data_layout","data_type","data_type","data_type_mut","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dll_data_segments","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","global","globals","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","kind","load_sm64_n64_layout","name","new","read","read_dll_segments","segments","serialize","serialize","serialize","serialize","serialize","serialize","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_defns","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","value","virtual_address","virtual_size","name","actual","attribute","entry_label","entry_label","entry_label","expected","name"],"q":[[0,"wafel_layout"],[222,"wafel_layout::ConstantSource"],[223,"wafel_layout::DllLayoutErrorKind"],[230,"core::result"],[231,"std::path"],[232,"std::path"],[233,"wafel_data_type::data_type"],[234,"wafel_data_type::data_type"],[235,"serde::de"],[236,"alloc::vec"],[237,"core::fmt"],[238,"core::fmt"],[239,"object::read"],[240,"std::io::error"],[241,"alloc::string"],[242,"wafel_data_type::shallow"],[243,"core::hash"],[244,"serde::ser"],[245,"core::any"]],"d":["","A constantâ€™s value and source.","The source for a constant value.","A description of accessible variables and types.","Debugging and structural information extracted from a DLL.","","","A segment defined in the DLL.","","The constant is defined as an enum variant.","","A global variable or function.","","","","The constant is defined as a macro.","","","","","","","","","","","","","","","","","","","Load hardcoded SM64 data into the data layout.","The relative address of the variable, if known.","Returns the DLL path, adding lib prefix or .so/.dll suffix â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Recursively look up a type name.","Recursively look up all type names in the given type.","Look up the value of a constant.","The values of integer constants.","The data layout for the DLL.","Look up the definition of a type name.","The type of the global variable.","Look up the definition of a type name.","","","","","","","","Return the segments which might contain mutable data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Look up a global variable or function.","The types of global variables and functions.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return the layout for SM64 on the N64, including data â€¦","The name of the segment.","Create an empty data layout.","Construct a DllLayout from the DWARF debugging information â€¦","Load segment definitions from the DLL.","The segments defined in the DLL.","","","","","","","The source for the constant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The definitions of structs, unions, and typedefs.","","","","","","","","","","","","The integer value for the constant.","The virtual address that the segment is loaded to.","The size that the segment has when loaded into memory.","The name of the enum, or None for an anonymous enum.","","","","","","",""],"i":[14,0,0,0,0,0,0,0,14,10,14,0,3,0,3,10,14,14,14,3,3,14,14,14,3,3,3,0,15,15,15,14,14,3,1,8,0,1,8,9,10,11,12,13,14,15,3,1,8,9,10,11,12,13,14,15,3,1,8,9,10,11,12,13,14,15,3,1,8,9,10,11,12,13,14,15,3,1,1,1,1,11,1,8,1,1,1,8,9,10,11,12,0,9,10,12,9,9,10,10,12,12,1,1,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,3,3,1,8,9,10,11,12,13,13,13,13,14,14,14,14,14,15,3,3,1,1,9,10,12,1,8,9,10,11,12,13,14,15,3,13,0,12,1,11,0,11,1,8,9,10,11,12,9,1,8,9,10,11,12,13,14,15,3,1,9,10,11,12,13,14,15,3,1,8,9,10,11,12,13,14,15,3,1,8,9,10,11,12,13,14,15,3,1,1,8,9,10,11,12,13,14,15,3,13,9,12,12,34,35,36,36,35,37,35,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],0,[-1,5,[[7,[6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[3,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[1,16],[[4,[16,15]]]],[[1,16],[[4,[[18,[17,16]],15]]]],[[1,19],[[4,[9,15]]]],0,0,[[1,17],[[4,[16,15]]]],0,[[1,17],[[4,[16,15]]]],[[],1],[-1,[[4,[1]]],20],[-1,[[4,[8]]],20],[-1,[[4,[9]]],20],[-1,[[4,[10]]],20],[-1,[[4,[11]]],20],[-1,[[4,[12]]],20],[[[21,[12]]],[[4,[[22,[12]],13]]]],[[9,9],23],[[10,10],23],[[12,12],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[1,24],25],[[1,24],25],[[8,24],25],[[9,24],25],[[9,24],25],[[10,24],25],[[10,24],25],[[11,24],25],[[11,24],25],[[12,24],25],[[12,24],25],[[13,24],25],[[13,24],25],[[14,24],25],[[14,24],25],[[15,24],25],[[15,24],25],[[3,24],25],[[3,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,13],[27,13],[28,13],[28,14],[26,14],[-1,-1,[]],[27,14],[[[30,[29]]],14],[-1,-1,[]],[-1,-1,[]],[15,3],[[1,19],[[4,[8,15]]]],0,[[9,-1],2,31],[[10,-1],2,31],[[12,-1],2,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[19,[[4,[1,3]]]],0,[[],1],[-1,[[4,[11,13]]],[[7,[6]]]],[-1,[[4,[[22,[12]],13]]],[[7,[6]]]],0,[[1,-1],4,32],[[8,-1],4,32],[[9,-1],4,32],[[10,-1],4,32],[[11,-1],4,32],[[12,-1],4,32],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"DataLayout",0],[15,"tuple"],[4,"SM64LayoutError",0],[4,"Result",230],[3,"PathBuf",231],[3,"Path",231],[8,"AsRef",232],[3,"Global",0],[3,"Constant",0],[4,"ConstantSource",0],[3,"DllLayout",0],[3,"DllSegment",0],[3,"DllLayoutError",0],[4,"DllLayoutErrorKind",0],[4,"LayoutLookupError",0],[6,"DataTypeRef",233],[3,"TypeName",233],[3,"IndexMap",234],[15,"str"],[8,"Deserializer",235],[15,"slice"],[3,"Vec",236],[15,"bool"],[3,"Formatter",237],[6,"Result",237],[4,"Error",238],[3,"Error",239],[3,"Error",240],[3,"String",241],[4,"BuildDataTypesError",242],[8,"Hasher",243],[8,"Serializer",244],[3,"TypeId",245],[13,"Enum",222],[13,"UnexpectedTag",223],[13,"MissingAttribute",223],[13,"MissingSubrangeNode",223],[13,"UnknownBaseTypeName",223]]},\
"wafel_memory":{"doc":"Abstractions for reading and writing values to game memory.","t":"NNDNDDDDDDINNEEIINNNNDQQQQINNNNNKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLKLLLLLLLKLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLKLLLLLKLLLMM","n":["Context","DlOpenError","DllGameMemory","DllLayoutError","DllSlot","DllSlotMemoryView","DllSlotMemoryViewMut","DllStaticMemoryView","EmptySymbolLookup","EmuMemory","GameMemory","InvalidAddress","IoError","MemoryError","MemoryInitError","MemoryRead","MemoryWrite","NonStaticAddressInStaticView","ProcessAttachError","ProcessReadError","ProcessWriteError","RemoteDllMemory","Slot","SlotView","SlotViewMut","StaticView","SymbolLookup","UndefinedSymbol","UndefinedSymbol","UndefinedTypeName","ValueTypeError","WriteToStaticAddress","advance_base_slot","advance_base_slot","attach","attach","base_address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","copy_slot","copy_slot","create_backup_slot","create_backup_slot","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","is_base_slot","is_process_open","is_process_open","load","load_cache","load_cache","pointer_int_type","pointer_int_type","pointer_int_type","pointer_int_type","pointer_int_type","pointer_int_type","read_addr","read_addr","read_addr","read_addrs","read_addrs","read_addrs","read_addrs","read_addrs","read_addrs","read_f32","read_f32","read_f32s","read_f32s","read_f64","read_f64","read_f64s","read_f64s","read_float","read_float","read_i16","read_i16","read_i16s","read_i16s","read_i32","read_i32","read_i32s","read_i32s","read_i64","read_i64","read_i64s","read_i64s","read_i8","read_i8","read_i8s","read_i8s","read_int","read_int","read_string","read_string","read_u16","read_u16","read_u16s","read_u16s","read_u16s","read_u16s","read_u16s","read_u16s","read_u32","read_u32","read_u32s","read_u32s","read_u32s","read_u32s","read_u32s","read_u32s","read_u64","read_u64","read_u64s","read_u64s","read_u64s","read_u64s","read_u64s","read_u64s","read_u8","read_u8","read_u8s","read_u8s","read_u8s","read_u8s","read_u8s","read_u8s","static_view","static_view","symbol_address","symbol_address","symbol_address","symbol_pointer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_slot","with_slot","with_slot_mut","with_slot_mut","write_addr","write_addr","write_addr","write_addrs","write_addrs","write_addrs","write_addrs","write_f32","write_f32","write_f32s","write_f32s","write_f64","write_f64","write_f64s","write_f64s","write_float","write_float","write_i16","write_i16","write_i16s","write_i16s","write_i32","write_i32","write_i32s","write_i32s","write_i64","write_i64","write_i64s","write_i64s","write_i8","write_i8","write_i8s","write_i8s","write_int","write_int","write_u16","write_u16","write_u16s","write_u16s","write_u16s","write_u16s","write_u32","write_u32","write_u32s","write_u32s","write_u32s","write_u32s","write_u64","write_u64","write_u64s","write_u64s","write_u64s","write_u64s","write_u8","write_u8","write_u8s","write_u8s","write_u8s","write_u8s","context","error"],"q":[[0,"wafel_memory"],[299,"wafel_memory::MemoryError"],[301,"core::result"],[302,"core::fmt"],[303,"core::fmt"],[304,"wafel_layout::error"],[305,"std::io::error"],[306,"dlopen::err"],[307,"wafel_data_type::value"],[308,"wafel_data_type::data_type"],[309,"wafel_data_type::data_type"],[310,"core::option"],[311,"alloc::string"],[312,"core::any"]],"d":["","","Memory management for a loaded DLL and backup slots.","","A slot for DllGameMemory.","A read-only view of both static and non-static memory, â€¦","A read-write view of both static and non-static memory, â€¦","A read-only view of shared static memory.","Implementation of SymbolLookup that always returns None.","Memory view for reading/writing to a running emulator.","A trait that allows accessing game memory and â€¦","","","","","Trait for a view of memory that allows reading values by â€¦","Trait for a view of memory that allows writing values by â€¦","","","","","Memory view for reading/writing into an libsm64 instance â€¦","A buffer that can hold a copy of non-static memory.","A read-only view of both static and non-static memory, â€¦","A read-write view of both static and non-static memory, â€¦","A read-only view of shared static memory.","Trait for looking up a symbolâ€™s address.","","","","","","Advance the base slot by one frame.","","Attach to a running emulator and return an EmuMemory â€¦","Attach to a running process which has loaded the given DLL â€¦","Return the base address of the DLL instance in memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copy data from one slot to another.","","Allocate a new backup slot.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if the slot is the base slot for its â€¦","Return true if a process with the given pid is currently â€¦","Return true if a process with the given pid is currently â€¦","Load a DLL and return a DllGameMemory and its base slot.","","","Return the int type corresponding to a pointer (either U32 â€¦","","","","","","Read a pointer from the given address.","Read a pointer from the given address.","","Read an array of pointers from the given address.","","","","","","Read an f32 from the given address.","Read an f32 from the given address.","Read an array of f32s from the given address.","Read an array of f32s from the given address.","Read an f64 from the given address.","Read an f64 from the given address.","Read an array of f64s from the given address.","Read an array of f64s from the given address.","Read a float from the given address.","Read a float from the given address.","Read an i16 from the given address.","Read an i16 from the given address.","Read an array of i16s from the given address.","Read an array of i16s from the given address.","Read an i32 from the given address.","Read an i32 from the given address.","Read an array of i32s from the given address.","Read an array of i32s from the given address.","Read an i64 from the given address.","Read an i64 from the given address.","Read an array of i64s from the given address.","Read an array of i64s from the given address.","Read an i8 from the given address.","Read an i8 from the given address.","Read an array of i8s from the given address.","Read an array of i8s from the given address.","Read an int from the given address.","Read an int from the given address.","Read a null terminated C string from the given address.","Read a null terminated C string from the given address.","Read a u16 from the given address.","Read a u16 from the given address.","Read an array of u16s from the given address.","","","","","","Read a u32 from the given address.","Read a u32 from the given address.","Read an array of u32s from the given address.","","","","","","Read a u64 from the given address.","Read a u64 from the given address.","Read an array of u64s from the given address.","","","","","","Read a u8 from the given address.","Read a u8 from the given address.","Read an array of u8s from the given address.","","","","","","Return a read-only view of shared static memory.","","Look up a symbolâ€™s address.","","","Looks up a symbol for the underlying DLL.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a read-only view of both static and non-static â€¦","","Return a read-write view of both static and non-static â€¦","","Write a pointer value at the given address.","Write a pointer value at the given address.","","Write an array of pointer values at the given address.","","","","Write an f32 to the given address.","Write an f32 to the given address.","Write an array of f32s to the given address.","Write an array of f32s to the given address.","Write an f64 to the given address.","Write an f64 to the given address.","Write an array of f64s to the given address.","Write an array of f64s to the given address.","Write a float at the given address.","Write a float at the given address.","Write an i16 to the given address.","Write an i16 to the given address.","Write an array of i16s to the given address.","Write an array of i16s to the given address.","Write an i32 to the given address.","Write an i32 to the given address.","Write an array of i32s to the given address.","Write an array of i32s to the given address.","Write an i64 to the given address.","Write an i64 to the given address.","Write an array of i64s to the given address.","Write an array of i64s to the given address.","Write an i8 to the given address.","Write an i8 to the given address.","Write an array of i8s to the given address.","Write an array of i8s to the given address.","Write an int at the given address.","Write an int at the given address.","Write a u16 to the given address.","Write a u16 to the given address.","Write an array of u16s to the given address.","","","","Write a u32 to the given address.","Write a u32 to the given address.","Write an array of u32s to the given address.","","","","Write a u64 to the given address.","Write a u64 to the given address.","Write an array of u64s to the given address.","","","","Write a u8 to the given address.","Write a u8 to the given address.","Write an array of u8s to the given address.","","","","",""],"i":[11,6,0,6,0,0,0,0,0,0,0,11,6,0,0,0,0,11,6,11,11,0,42,42,42,42,0,11,6,11,11,11,42,2,5,9,2,13,2,16,10,17,5,11,6,9,12,13,2,16,10,17,5,11,6,9,12,10,5,11,6,9,12,10,5,11,6,9,12,42,2,42,2,13,2,16,10,17,5,11,11,6,6,9,12,13,2,16,10,17,5,11,11,6,6,6,6,9,12,13,2,16,10,17,5,11,6,9,12,13,5,9,2,5,9,43,16,10,17,5,9,43,43,9,43,16,10,17,5,9,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,16,10,17,5,9,43,43,43,16,10,17,5,9,43,43,43,16,10,17,5,9,43,43,43,16,10,17,5,9,42,2,44,2,12,2,10,5,11,6,9,12,11,6,13,2,16,10,17,5,11,6,9,12,13,2,16,10,17,5,11,6,9,12,13,2,16,10,17,5,11,6,9,12,42,2,42,2,45,45,9,45,17,5,9,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,17,5,9,45,45,45,17,5,9,45,45,45,17,5,9,45,45,45,17,5,9,46,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[2,1],[[3,4,4],[[7,[5,6]]]],[[3,4,8],[[7,[9,6]]]],[2,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[5,5],[11,11],[6,6],[9,9],[12,12],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,1,[]],[2,1],[-1,[],[]],[2],[[13,14],15],[[2,14],15],[[16,14],15],[[10,14],15],[[17,14],15],[[5,14],15],[[11,14],15],[[11,14],15],[[6,14],15],[[6,14],15],[[9,14],15],[[12,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,11],[-1,-1,[]],[19,6],[20,6],[21,6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,22],[5,22],[9,22],[[8,8,8],[[7,[[1,[2,13]],6]]]],[[5,23],[[7,[1,11]]]],[[9,23],[[7,[1,11]]]],[-1,24,[]],[16,24],[10,24],[17,24],[5,24],[9,24],[[-1,23],[[7,[23,11]]],[]],[[-1,23],[[7,[23,11]]],[]],[[9,23],[[7,[23,11]]]],[[-1,23,[25,[23]]],[[7,[1,11]]],[]],[[16,23,[25,[23]]],[[7,[1,11]]]],[[10,23,[25,[23]]],[[7,[1,11]]]],[[17,23,[25,[23]]],[[7,[1,11]]]],[[5,23,[25,[23]]],[[7,[1,11]]]],[[9,23,[25,[23]]],[[7,[1,11]]]],[[-1,23],[[7,[26,11]]],[]],[[-1,23],[[7,[26,11]]],[]],[[-1,23,[25,[26]]],[[7,[1,11]]],[]],[[-1,23,[25,[26]]],[[7,[1,11]]],[]],[[-1,23],[[7,[27,11]]],[]],[[-1,23],[[7,[27,11]]],[]],[[-1,23,[25,[27]]],[[7,[1,11]]],[]],[[-1,23,[25,[27]]],[[7,[1,11]]],[]],[[-1,23,28],[[7,[29,11]]],[]],[[-1,23,28],[[7,[29,11]]],[]],[[-1,23],[[7,[30,11]]],[]],[[-1,23],[[7,[30,11]]],[]],[[-1,23,[25,[30]]],[[7,[1,11]]],[]],[[-1,23,[25,[30]]],[[7,[1,11]]],[]],[[-1,23],[[7,[31,11]]],[]],[[-1,23],[[7,[31,11]]],[]],[[-1,23,[25,[31]]],[[7,[1,11]]],[]],[[-1,23,[25,[31]]],[[7,[1,11]]],[]],[[-1,23],[[7,[32,11]]],[]],[[-1,23],[[7,[32,11]]],[]],[[-1,23,[25,[32]]],[[7,[1,11]]],[]],[[-1,23,[25,[32]]],[[7,[1,11]]],[]],[[-1,23],[[7,[33,11]]],[]],[[-1,23],[[7,[33,11]]],[]],[[-1,23,[25,[33]]],[[7,[1,11]]],[]],[[-1,23,[25,[33]]],[[7,[1,11]]],[]],[[-1,23,24],[[7,[34,11]]],[]],[[-1,23,24],[[7,[34,11]]],[]],[[-1,23],[[7,[[36,[35]],11]]],[]],[[-1,23],[[7,[[36,[35]],11]]],[]],[[-1,23],[[7,[37,11]]],[]],[[-1,23],[[7,[37,11]]],[]],[[-1,23,[25,[37]]],[[7,[1,11]]],[]],[[16,23,[25,[37]]],[[7,[1,11]]]],[[10,23,[25,[37]]],[[7,[1,11]]]],[[17,23,[25,[37]]],[[7,[1,11]]]],[[5,23,[25,[37]]],[[7,[1,11]]]],[[9,23,[25,[37]]],[[7,[1,11]]]],[[-1,23],[[7,[3,11]]],[]],[[-1,23],[[7,[3,11]]],[]],[[-1,23,[25,[3]]],[[7,[1,11]]],[]],[[16,23,[25,[3]]],[[7,[1,11]]]],[[10,23,[25,[3]]],[[7,[1,11]]]],[[17,23,[25,[3]]],[[7,[1,11]]]],[[5,23,[25,[3]]],[[7,[1,11]]]],[[9,23,[25,[3]]],[[7,[1,11]]]],[[-1,23],[[7,[38,11]]],[]],[[-1,23],[[7,[38,11]]],[]],[[-1,23,[25,[38]]],[[7,[1,11]]],[]],[[16,23,[25,[38]]],[[7,[1,11]]]],[[10,23,[25,[38]]],[[7,[1,11]]]],[[17,23,[25,[38]]],[[7,[1,11]]]],[[5,23,[25,[38]]],[[7,[1,11]]]],[[9,23,[25,[38]]],[[7,[1,11]]]],[[-1,23],[[7,[35,11]]],[]],[[-1,23],[[7,[35,11]]],[]],[[-1,23,[25,[35]]],[[7,[1,11]]],[]],[[16,23,[25,[35]]],[[7,[1,11]]]],[[10,23,[25,[35]]],[[7,[1,11]]]],[[17,23,[25,[35]]],[[7,[1,11]]]],[[5,23,[25,[35]]],[[7,[1,11]]]],[[9,23,[25,[35]]],[[7,[1,11]]]],[-1,[],[]],[2],[[-1,8],[[39,[23]]],[]],[[2,8],[[39,[23]]]],[[12,8],[[39,[23]]]],[[2,13,8],[[7,[-1,11]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,40,[]],[-1,40,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,[],[]],[2],[-1,[],[]],[2],[[-1,23,23],[[7,[1,11]]],[]],[[-1,23,23],[[7,[1,11]]],[]],[[9,23,23],[[7,[1,11]]]],[[-1,23,[25,[23]]],[[7,[1,11]]],[]],[[17,23,[25,[23]]],[[7,[1,11]]]],[[5,23,[25,[23]]],[[7,[1,11]]]],[[9,23,[25,[23]]],[[7,[1,11]]]],[[-1,23,26],[[7,[1,11]]],[]],[[-1,23,26],[[7,[1,11]]],[]],[[-1,23,[25,[26]]],[[7,[1,11]]],[]],[[-1,23,[25,[26]]],[[7,[1,11]]],[]],[[-1,23,27],[[7,[1,11]]],[]],[[-1,23,27],[[7,[1,11]]],[]],[[-1,23,[25,[27]]],[[7,[1,11]]],[]],[[-1,23,[25,[27]]],[[7,[1,11]]],[]],[[-1,23,28,29],[[7,[1,11]]],[]],[[-1,23,28,29],[[7,[1,11]]],[]],[[-1,23,30],[[7,[1,11]]],[]],[[-1,23,30],[[7,[1,11]]],[]],[[-1,23,[25,[30]]],[[7,[1,11]]],[]],[[-1,23,[25,[30]]],[[7,[1,11]]],[]],[[-1,23,31],[[7,[1,11]]],[]],[[-1,23,31],[[7,[1,11]]],[]],[[-1,23,[25,[31]]],[[7,[1,11]]],[]],[[-1,23,[25,[31]]],[[7,[1,11]]],[]],[[-1,23,32],[[7,[1,11]]],[]],[[-1,23,32],[[7,[1,11]]],[]],[[-1,23,[25,[32]]],[[7,[1,11]]],[]],[[-1,23,[25,[32]]],[[7,[1,11]]],[]],[[-1,23,33],[[7,[1,11]]],[]],[[-1,23,33],[[7,[1,11]]],[]],[[-1,23,[25,[33]]],[[7,[1,11]]],[]],[[-1,23,[25,[33]]],[[7,[1,11]]],[]],[[-1,23,24,34],[[7,[1,11]]],[]],[[-1,23,24,34],[[7,[1,11]]],[]],[[-1,23,37],[[7,[1,11]]],[]],[[-1,23,37],[[7,[1,11]]],[]],[[-1,23,[25,[37]]],[[7,[1,11]]],[]],[[17,23,[25,[37]]],[[7,[1,11]]]],[[5,23,[25,[37]]],[[7,[1,11]]]],[[9,23,[25,[37]]],[[7,[1,11]]]],[[-1,23,3],[[7,[1,11]]],[]],[[-1,23,3],[[7,[1,11]]],[]],[[-1,23,[25,[3]]],[[7,[1,11]]],[]],[[17,23,[25,[3]]],[[7,[1,11]]]],[[5,23,[25,[3]]],[[7,[1,11]]]],[[9,23,[25,[3]]],[[7,[1,11]]]],[[-1,23,38],[[7,[1,11]]],[]],[[-1,23,38],[[7,[1,11]]],[]],[[-1,23,[25,[38]]],[[7,[1,11]]],[]],[[17,23,[25,[38]]],[[7,[1,11]]]],[[5,23,[25,[38]]],[[7,[1,11]]]],[[9,23,[25,[38]]],[[7,[1,11]]]],[[-1,23,35],[[7,[1,11]]],[]],[[-1,23,35],[[7,[1,11]]],[]],[[-1,23,[25,[35]]],[[7,[1,11]]],[]],[[17,23,[25,[35]]],[[7,[1,11]]]],[[5,23,[25,[35]]],[[7,[1,11]]]],[[9,23,[25,[35]]],[[7,[1,11]]]],0,0],"c":[],"p":[[15,"tuple"],[3,"DllGameMemory",0],[15,"u32"],[15,"usize"],[3,"EmuMemory",0],[4,"MemoryInitError",0],[4,"Result",301],[15,"str"],[3,"RemoteDllMemory",0],[3,"DllSlotMemoryView",0],[4,"MemoryError",0],[3,"EmptySymbolLookup",0],[3,"DllSlot",0],[3,"Formatter",302],[6,"Result",302],[3,"DllStaticMemoryView",0],[3,"DllSlotMemoryViewMut",0],[3,"ValueTypeError",303],[3,"DllLayoutError",304],[3,"Error",305],[4,"Error",306],[15,"bool"],[3,"Address",307],[4,"IntType",308],[15,"slice"],[15,"f32"],[15,"f64"],[4,"FloatType",308],[6,"FloatValue",307],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[6,"IntValue",307],[15,"u8"],[3,"Vec",309],[15,"u16"],[15,"u64"],[4,"Option",310],[3,"String",311],[3,"TypeId",312],[8,"GameMemory",0],[8,"MemoryRead",0],[8,"SymbolLookup",0],[8,"MemoryWrite",0],[13,"Context",299]]},\
"wafel_sm64":{"doc":"Utilities for reading SM64 data from memory.","t":"NNNNNDEDEDENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMMLLLLLLFMLMFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLSDDNSNNSNNNDDNEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDSNSNNNNNNNNNNNNNNSMLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMMMMMMMMMMMMMMMMLMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMM","n":["Ceiling","DataError","Floor","Identity","InvalidFrameLogEventType","ObjectHitbox","SM64DataError","Seg","SegTable","Surface","SurfaceType","Table","UnsizedObjectPoolArray","UnsizedSurfacePoolPointer","WallXProj","WallZProj","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","gfx","hash","hash","hitbox_height","hitbox_radius","into","into","into","into","into","into","mario_action_names","normal","partial_cmp","pos","read_frame_log","read_object_hitboxes","read_seg_table","read_surfaces","seg_to_virt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","vertices","virt_to_phys","ACTIVE","AnimInfo","AnimInfoReader","AnimatedPart","BILLBOARD","Background","Billboard","CHILDREN_FIRST","Camera","CullingRadius","DisplayList","FnGraphNode","FnGraphNodeReader","Generated","GfxTreeNode","GfxTreeNodeReader","GraphNode","GraphNodeAnimatedPart","GraphNodeAnimatedPartReader","GraphNodeBackground","GraphNodeBackgroundReader","GraphNodeBillboard","GraphNodeBillboardReader","GraphNodeCamera","GraphNodeCameraReader","GraphNodeCullingRadius","GraphNodeCullingRadiusReader","GraphNodeDisplayList","GraphNodeDisplayListReader","GraphNodeGenerated","GraphNodeGeneratedReader","GraphNodeHeldObject","GraphNodeHeldObjectReader","GraphNodeLevelOfDetail","GraphNodeLevelOfDetailReader","GraphNodeMasterList","GraphNodeMasterListReader","GraphNodeObject","GraphNodeObjectParent","GraphNodeObjectParentReader","GraphNodeObjectReader","GraphNodeOrthoProjection","GraphNodeOrthoProjectionReader","GraphNodePerspective","GraphNodePerspectiveReader","GraphNodeReader","GraphNodeRoot","GraphNodeRootReader","GraphNodeRotation","GraphNodeRotationReader","GraphNodeScale","GraphNodeScaleReader","GraphNodeShadow","GraphNodeShadowReader","GraphNodeStart","GraphNodeStartReader","GraphNodeSwitchCase","GraphNodeSwitchCaseReader","GraphNodeTranslation","GraphNodeTranslationReader","GraphNodeTranslationRotation","GraphNodeTranslationRotationReader","GraphRenderFlags","GraphRenderFlagsReader","HAS_ANIMATION","HeldObject","INVISIBLE","LevelOfDetail","MasterList","Object","ObjectParent","OrthoProjection","Perspective","Root","Rotation","Scale","Shadow","Start","SwitchCase","Translation","TranslationRotation","Z_BUFFER","active_area_index","all","angle","anim_accel","anim_frame","anim_frame_accel_assist","anim_id","anim_info","anim_timer","anim_y_trans","area_index","area_index","background","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","camera_to_object","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","culling_radius","cur_anim","difference","display_list","display_list","display_list","display_list","display_list","display_list","display_list","empty","eq","equivalent","equivalent","extend","far","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_node","fn_node","fn_node","fn_node","fn_node","fn_node","fn_node","focus","fov","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","func","hash","height","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","list_heads","list_tails","matrix_ptr","max_distance","min_distance","near","next","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","node","not","num_cases","num_views","obj_node","parameter","parent","partial_cmp","player_index","pos","pos","prev","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","read","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","remove","roll","roll_screen","rotation","rotation","scale","scale","scale","selected_case","set","shadow_scale","shadow_solidity","shadow_type","shared_child","shared_child","sub","sub_assign","symmetric_difference","throw_matrix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","translation","translation","translation","translation","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unk_15","unk_4c","views","width","x","y"],"q":[[0,"wafel_sm64"],[118,"wafel_sm64::gfx"],[1014,"core::cmp"],[1015,"core::fmt"],[1016,"core::fmt"],[1017,"wafel_data_access::error"],[1018,"wafel_data_type::error"],[1019,"wafel_layout::error"],[1020,"core::hash"],[1021,"alloc::string"],[1022,"std::collections::hash::map"],[1023,"wafel_data_access::layout"],[1024,"core::option"],[1025,"wafel_data_type::value"],[1026,"alloc::vec"],[1027,"core::result"],[1028,"wafel_memory::traits"],[1029,"wafel_data_type::value"],[1030,"core::iter::traits::collect"]],"d":["Normal is pointing somewhat downward.","","Normal is pointing somewhat upward.","Translation is a no-op (used by libsm64).","","Hitbox information for an SM64 object.","","A wrapper indicating a segmented address.","The SM64 segment table.","An SM64 surface (currently missing several fields).","An SM64 surface type.","The inner vec has 32 elements, each a 32 bit base address.","","","Normal is almost horizontal and points more in the X â€¦","Normal is almost horizontal and points more in the Z â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Rust structs for the SM64 gfx tree that implement â€¦","","","The objectâ€™s hitbox height (hitboxHeight).","The objectâ€™s hitbox radius (hitboxRadius).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a mapping from Mario action values to their name â€¦","The surfaceâ€™s normal vector.","","The objectâ€™s position (oPosX, oPosY, oPosZ).","Read the libsm64-specific frame log, which tracks subframe â€¦","Read object hitboxes for all active objects.","Reads the segment table from the game for address â€¦","Read all surfaces.","Convert a segmented address to a virtual address.","","","","","","","","","","","","","","","","","","","","","Return the type of the surface (floor/wall/ceiling).","","","","","","","The surfaceâ€™s vertex coordinates.","Convert a virtual address to a physical address (which can â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Toggles the set of flagseturns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the â€¦","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-placeeturns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","",""],"i":[6,1,6,4,1,0,0,0,0,0,0,4,1,1,6,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,3,3,3,4,6,3,3,4,4,6,6,1,1,2,3,3,4,5,6,1,1,1,1,1,2,3,4,5,6,0,3,6,2,2,1,2,3,4,5,6,0,5,3,2,0,0,0,0,4,1,2,3,4,5,6,1,3,1,2,3,4,5,6,1,2,3,4,5,6,5,1,2,3,4,5,6,5,4,28,0,0,30,28,30,30,28,30,30,30,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30,28,61,28,61,59,59,59,59,61,59,59,37,61,77,28,28,28,28,28,28,28,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,51,61,32,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,28,28,28,81,59,28,53,55,57,63,65,67,69,28,28,28,28,28,41,32,32,30,31,32,33,28,28,28,28,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,30,41,49,51,75,77,79,51,41,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,28,28,28,28,35,28,37,28,28,28,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,28,28,43,43,51,47,47,41,32,30,35,37,39,43,45,47,53,55,57,61,63,65,67,69,71,73,81,28,49,37,79,75,32,28,79,51,61,32,31,31,33,33,34,34,36,36,38,38,40,40,42,42,44,44,46,46,48,48,50,50,52,52,54,54,56,56,58,58,60,60,62,62,64,64,66,66,68,68,70,70,72,72,74,74,76,76,78,78,80,80,82,82,30,30,32,28,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,28,51,51,53,57,39,61,69,49,28,71,71,71,61,73,28,28,28,61,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,28,53,55,63,65,79,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,32,30,31,32,33,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,28,37,61,37,37,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[3,3],8],[[],3],[[3,3],9],[[4,4],9],[[6,6],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[1,10],11],[[1,10],11],[[2,10],11],[[3,10],11],[[3,10],11],[[4,10],11],[[5,10],11],[[6,10],11],[-1,-1,[]],[12,1],[13,1],[14,1],[15,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[3,-1],7,16],[[6,-1],7,16],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[17,18]]],20],0,[[3,3],[[21,[8]]]],0,[[-1,-2],[[24,[[23,[[19,[18,22]]]],1]]],20,25],[[-1,-2],[[24,[[23,[2]],1]]],20,25],[[-1,-2],[[24,[4,1]]],20,25],[[-1,-2],[[24,[[23,[5]],1]]],20,25],[[4,3],26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,18,[]],[-1,18,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[5,6],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,[[4,26],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],28],0,0,0,0,0,0,0,0,0,0,0,[[28,28],28],[[28,28],7],[[28,28],28],[[28,28],7],[28,29],[[28,28],28],[[28,28],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[30,30],[31,31],[32,32],[33,33],[28,28],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[28,28],8],[28,28],[[28,28],9],0,0,[[28,28],28],0,0,0,0,0,0,0,[[],28],[[28,28],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[28,-1],7,83],0,[32,28],0,[[30,10],11],[[31,10],11],[[32,10],11],[[33,10],11],[[28,10],11],[[28,10],11],[[28,10],11],[[28,10],11],[[28,10],11],[[34,10],11],[[35,10],11],[[36,10],11],[[37,10],11],[[38,10],11],[[39,10],11],[[40,10],11],[[41,10],11],[[42,10],11],[[43,10],11],[[44,10],11],[[45,10],11],[[46,10],11],[[47,10],11],[[48,10],11],[[49,10],11],[[50,10],11],[[51,10],11],[[52,10],11],[[53,10],11],[[54,10],11],[[55,10],11],[[56,10],11],[[57,10],11],[[58,10],11],[[59,10],11],[[60,10],11],[[61,10],11],[[62,10],11],[[63,10],11],[[64,10],11],[[65,10],11],[[66,10],11],[[67,10],11],[[68,10],11],[[69,10],11],[[70,10],11],[[71,10],11],[[72,10],11],[[73,10],11],[[74,10],11],[[75,10],11],[[76,10],11],[[77,10],11],[[78,10],11],[[79,10],11],[[80,10],11],[[81,10],11],[[82,10],11],[30,[[21,[35]]]],0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,[[21,[28]]]],[29,28],[29,28],[-1,28,83],0,[[28,-1],7,16],0,[[28,28],7],[[28,28],28],[[28,28],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,9],[28,9],0,0,0,0,0,0,0,[30,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,28],0,0,0,0,0,[[28,28],[[21,[8]]]],0,0,0,0,[[31,-1,26],[[24,[32,13]]],25],[[31,-1,26],[[24,[32,13]]],25],[[33,-1,26],[[24,[28,13]]],25],[[33,-1,26],[[24,[28,13]]],25],[[34,-1,26],[[24,[35,13]]],25],[[34,-1,26],[[24,[35,13]]],25],[[36,-1,26],[[24,[37,13]]],25],[[36,-1,26],[[24,[37,13]]],25],[[38,-1,26],[[24,[39,13]]],25],[[38,-1,26],[[24,[39,13]]],25],[[40,-1,26],[[24,[41,13]]],25],[[40,-1,26],[[24,[41,13]]],25],[[42,-1,26],[[24,[43,13]]],25],[[42,-1,26],[[24,[43,13]]],25],[[44,-1,26],[[24,[45,13]]],25],[[44,-1,26],[[24,[45,13]]],25],[[46,-1,26],[[24,[47,13]]],25],[[46,-1,26],[[24,[47,13]]],25],[[48,-1,26],[[24,[49,13]]],25],[[48,-1,26],[[24,[49,13]]],25],[[50,-1,26],[[24,[51,13]]],25],[[50,-1,26],[[24,[51,13]]],25],[[52,-1,26],[[24,[53,13]]],25],[[52,-1,26],[[24,[53,13]]],25],[[54,-1,26],[[24,[55,13]]],25],[[54,-1,26],[[24,[55,13]]],25],[[56,-1,26],[[24,[57,13]]],25],[[56,-1,26],[[24,[57,13]]],25],[[58,-1,26],[[24,[59,13]]],25],[[58,-1,26],[[24,[59,13]]],25],[[60,-1,26],[[24,[61,13]]],25],[[60,-1,26],[[24,[61,13]]],25],[[62,-1,26],[[24,[63,13]]],25],[[62,-1,26],[[24,[63,13]]],25],[[64,-1,26],[[24,[65,13]]],25],[[64,-1,26],[[24,[65,13]]],25],[[66,-1,26],[[24,[67,13]]],25],[[66,-1,26],[[24,[67,13]]],25],[[68,-1,26],[[24,[69,13]]],25],[[68,-1,26],[[24,[69,13]]],25],[[70,-1,26],[[24,[71,13]]],25],[[70,-1,26],[[24,[71,13]]],25],[[72,-1,26],[[24,[73,13]]],25],[[72,-1,26],[[24,[73,13]]],25],[[74,-1,26],[[24,[75,13]]],25],[[74,-1,26],[[24,[75,13]]],25],[[76,-1,26],[[24,[77,13]]],25],[[76,-1,26],[[24,[77,13]]],25],[[78,-1,26],[[24,[79,13]]],25],[[78,-1,26],[[24,[79,13]]],25],[[80,-1,26],[[24,[81,13]]],25],[[80,-1,26],[[24,[81,13]]],25],[[82,-1,26],[[24,[13]]],25],[[82,-1,26],[[24,[30,13]]],25],[-1,[[24,[13]]],20],[-1,[[24,[82,13]]],20],[-1,[[24,[31,13]]],20],[-1,[[24,[33,13]]],20],[-1,[[24,[34,13]]],20],[-1,[[24,[36,13]]],20],[-1,[[24,[38,13]]],20],[-1,[[24,[40,13]]],20],[-1,[[24,[42,13]]],20],[-1,[[24,[44,13]]],20],[-1,[[24,[46,13]]],20],[-1,[[24,[48,13]]],20],[-1,[[24,[50,13]]],20],[-1,[[24,[52,13]]],20],[-1,[[24,[54,13]]],20],[-1,[[24,[56,13]]],20],[-1,[[24,[58,13]]],20],[-1,[[24,[60,13]]],20],[-1,[[24,[62,13]]],20],[-1,[[24,[64,13]]],20],[-1,[[24,[66,13]]],20],[-1,[[24,[68,13]]],20],[-1,[[24,[70,13]]],20],[-1,[[24,[72,13]]],20],[-1,[[24,[74,13]]],20],[-1,[[24,[76,13]]],20],[-1,[[24,[78,13]]],20],[-1,[[24,[80,13]]],20],[[28,28],7],0,0,0,0,0,0,0,0,[[28,28,9],7],0,0,0,0,0,[[28,28],28],[[28,28],7],[[28,28],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,28],7],0,0,0,0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[[28,28],28],0,0,0,0,0,0],"c":[],"p":[[4,"SM64DataError",0],[3,"ObjectHitbox",0],[3,"Seg",0],[4,"SegTable",0],[3,"Surface",0],[4,"SurfaceType",0],[15,"tuple"],[4,"Ordering",1014],[15,"bool"],[3,"Formatter",1015],[6,"Result",1015],[4,"MemoryError",1016],[4,"DataError",1017],[3,"ValueTypeError",1018],[4,"LayoutLookupError",1019],[8,"Hasher",1020],[15,"u32"],[3,"String",1021],[3,"HashMap",1022],[8,"MemoryLayout",1023],[4,"Option",1024],[4,"Value",1025],[3,"Vec",1026],[4,"Result",1027],[8,"MemoryRead",1028],[3,"Address",1025],[3,"TypeId",1029],[3,"GraphRenderFlags",118],[15,"i16"],[4,"GfxTreeNode",118],[3,"GraphNodeReader",118],[3,"GraphNode",118],[3,"GraphRenderFlagsReader",118],[3,"FnGraphNodeReader",118],[3,"FnGraphNode",118],[3,"GraphNodeRootReader",118],[3,"GraphNodeRoot",118],[3,"GraphNodeOrthoProjectionReader",118],[3,"GraphNodeOrthoProjection",118],[3,"GraphNodePerspectiveReader",118],[3,"GraphNodePerspective",118],[3,"GraphNodeMasterListReader",118],[3,"GraphNodeMasterList",118],[3,"GraphNodeStartReader",118],[3,"GraphNodeStart",118],[3,"GraphNodeLevelOfDetailReader",118],[3,"GraphNodeLevelOfDetail",118],[3,"GraphNodeSwitchCaseReader",118],[3,"GraphNodeSwitchCase",118],[3,"GraphNodeCameraReader",118],[3,"GraphNodeCamera",118],[3,"GraphNodeTranslationRotationReader",118],[3,"GraphNodeTranslationRotation",118],[3,"GraphNodeTranslationReader",118],[3,"GraphNodeTranslation",118],[3,"GraphNodeRotationReader",118],[3,"GraphNodeRotation",118],[3,"AnimInfoReader",118],[3,"AnimInfo",118],[3,"GraphNodeObjectReader",118],[3,"GraphNodeObject",118],[3,"GraphNodeAnimatedPartReader",118],[3,"GraphNodeAnimatedPart",118],[3,"GraphNodeBillboardReader",118],[3,"GraphNodeBillboard",118],[3,"GraphNodeDisplayListReader",118],[3,"GraphNodeDisplayList",118],[3,"GraphNodeScaleReader",118],[3,"GraphNodeScale",118],[3,"GraphNodeShadowReader",118],[3,"GraphNodeShadow",118],[3,"GraphNodeObjectParentReader",118],[3,"GraphNodeObjectParent",118],[3,"GraphNodeGeneratedReader",118],[3,"GraphNodeGenerated",118],[3,"GraphNodeBackgroundReader",118],[3,"GraphNodeBackground",118],[3,"GraphNodeHeldObjectReader",118],[3,"GraphNodeHeldObject",118],[3,"GraphNodeCullingRadiusReader",118],[3,"GraphNodeCullingRadius",118],[3,"GfxTreeNodeReader",118],[8,"IntoIterator",1030]]},\
"wafel_timeline":{"doc":"The Wafel timeline algorithm, which allows its TAS rewind â€¦","t":"QIDENNKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Error","GameController","GameTimeline","InvalidatedFrames","None","StartingAt","apply","balance_distribution","borrow","borrow","borrow_mut","borrow_mut","cached_frames","clear","clone","clone_into","controller","delete_hotspot","earliest_error","eq","equivalent","equivalent","fmt","fmt","frame","frame_checked","frame_mut","frame_mut_checked","from","from","hash","include","into","into","into_parts","invalidate_frame","memory","new","set_hotspot","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","union","vzip","vzip","with_controller_mut"],"q":[[0,"wafel_timeline"],[50,"alloc::vec"],[51,"core::time"],[52,"wafel_memory::traits"],[53,"core::option"],[54,"core::fmt"],[55,"core::fmt"],[56,"core::hash"],[57,"core::any"],[58,"core::ops::function"]],"d":["Error type if the controller fails to apply edits.","Applies edits at the end of each frame to control the game.","An implementation of the Wafel timeline algorithm.","A set of frames that should be invalidated after a â€¦","No frames need to be invalidated.","Invalidate states at and after the given frame.","Apply edits to the given state.","Perform housekeeping to improve scrolling near hotspots.","","","","","Return the currently loaded frames for debugging purposes.","Set <code>self</code> to None.","","","Return an immutable reference to the underlying controller.","Delete a hotspot with the given name, if it exists.","Return the earliest error that is encountered in the â€¦","","","","","","Return a slot holding the state for the given frame, and â€¦","Return a slot holding the state for the given frame.","Return a mutable slot holding the state for the given â€¦","Return a mutable slot holding the state for the given â€¦","Returns the argument unchanged.","Returns the argument unchanged.","","Include <code>frame</code> in the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destruct into the memory, base slot, and controller.","Invalidate a frame and all frames after it.","Return a reference to the underlying game memory.","Construct a new GameTimeline.","Set a hotspot with a given name.","","","","","","","","The union of two sets of frames.","","","Make changes to the underlying controller."],"i":[7,0,0,0,8,8,7,3,8,3,8,3,3,8,8,8,3,3,3,8,8,8,8,3,3,3,3,3,8,3,8,8,8,3,3,3,3,3,3,8,8,3,8,3,8,3,8,8,3,3],"f":[0,0,0,0,0,0,[[-1,-2,1],2,[],[]],[[[3,[-1,-2]],4],5,6,[[7,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],[[2,[1]]],6,[[7,[-1]]]],[8,5],[8,8],[[-1,-2],5,[],[]],[[[3,[-1,-2]]],-2,6,[[7,[-1]]]],[[[3,[-1,-2]],9],5,6,[[7,[-1]]]],[[[3,[-1,-2]],1],[[10,[[5,[1]]]]],6,[[7,[-1]]]],[[8,8],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[8,12],13],[[[3,[-1,-2]],12],13,[14,6],[14,[7,[-1]]]],[[[3,[-1,-2]],1,11],[[5,[15]]],6,[[7,[-1]]]],[[[3,[-1,-2]],1,11],16,6,[[7,[-1]]]],[[[3,[-1,-2]],1,11],[[5,[15]]],6,[[7,[-1]]]],[[[3,[-1,-2]],1,11],16,6,[[7,[-1]]]],[-1,-1,[]],[-1,-1,[]],[[8,-1],5,17],[[8,1],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]]],[[5,[-1,-2]]],6,[[7,[-1]]]],[[[3,[-1,-2]],1],5,6,[[7,[-1]]]],[[[3,[-1,-2]]],-1,6,[[7,[-1]]]],[[-1,-2,18],[[3,[-1,-2]]],6,[[7,[-1]]]],[[[3,[-1,-2]],9,1],5,6,[[7,[-1]]]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[8,8],8],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1,-2]],-3],5,6,[[7,[-1]]],20]],"c":[],"p":[[15,"u32"],[3,"Vec",50],[3,"GameTimeline",0],[3,"Duration",51],[15,"tuple"],[8,"GameMemory",52],[8,"GameController",0],[4,"InvalidatedFrames",0],[15,"str"],[4,"Option",53],[15,"bool"],[3,"Formatter",54],[6,"Result",54],[8,"Debug",54],[15,"slice"],[4,"Result",55],[8,"Hasher",56],[15,"usize"],[3,"TypeId",57],[8,"FnOnce",58]]},\
"wafel_viz":{"doc":"","t":"ENNNENNENNDNNDNNNENDDNDNNNNENNDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLMMMLLLLLLLLLLLMMMFMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMM","n":["Camera","DataError","Disabled","DisplayList","Element","F3DError","InGame","InGameRenderMode","InvalidF3DPointer","InvalidGfxTree","Line","Line","LookAt","LookAtCamera","MasterListDiscrepancy","None","Normal","ObjectCull","Ortho","OrthoCamera","PerspCameraControl","Physical","Point","Point","Rerender","SM64DataError","ShowAll","SurfaceMode","UnexpectedDisplayListCommand","Visual","VizConfig","VizError","VizRenderData","VizRenderer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","camera","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","elements","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","highlighted_surfaces","in_game_render_mode","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lock_to_in_game_camera","lock_to_mario","move_mouse","new","new","new","object_cull","pos","pos","pos","prepare","press_mouse_left","release_mouse_left","render","roll","screen_size","screen_top_left","scroll_wheel","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","show_camera_focus","show_in_game_overlays","size","sm64_render","span_v","surface_mode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent_surfaces","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","upward","vertices","viz_render","wall_hitbox_radius","descr","descr"],"q":[[0,"wafel_viz"],[311,"wafel_viz::VizError"],[313,"core::result"],[314,"serde::de"],[315,"core::fmt"],[316,"core::fmt"],[317,"wafel_data_type::error"],[318,"wafel_memory::error"],[319,"fast3d::error"],[320,"wafel_sm64::error"],[321,"wafel_data_access::error"],[322,"fast3d::f3d_render_data"],[323,"core::hash"],[324,"core::marker"],[325,"core::hash"],[326,"wgpu_types"],[327,"wgpu"],[328,"wafel_data_access::layout"],[329,"wafel_memory::traits"],[330,"alloc::string"],[331,"core::any"],[332,"core::option"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,12,4,4,0,12,2,0,12,12,0,9,2,0,12,8,7,0,2,0,0,8,0,9,4,12,7,0,12,8,0,0,0,0,3,4,2,5,6,7,8,9,10,11,12,13,20,1,3,4,2,5,6,7,8,9,10,11,12,13,20,1,1,3,3,4,2,5,6,7,8,9,10,11,12,13,1,3,4,2,5,6,7,8,9,10,11,12,13,1,10,11,3,4,2,7,8,1,3,4,2,5,6,7,8,9,10,11,3,4,2,5,6,7,8,9,10,11,12,13,20,1,3,3,4,2,5,6,7,8,9,10,11,13,4,4,7,7,8,8,3,4,2,5,6,7,8,9,10,11,12,12,13,20,1,5,6,3,4,2,5,6,7,8,9,10,11,12,12,12,12,12,12,12,12,13,13,20,1,4,7,8,4,7,8,3,3,3,4,2,5,6,7,8,9,10,11,12,13,20,1,1,1,1,13,20,1,3,5,6,10,20,1,1,20,5,3,3,1,3,4,2,5,6,7,8,9,10,11,3,3,10,0,6,3,3,4,2,5,6,7,8,9,10,11,12,13,1,12,3,3,4,2,5,6,7,8,9,10,11,12,13,20,1,3,4,2,5,6,7,8,9,10,11,12,13,20,1,3,4,2,5,6,7,8,9,10,11,12,13,20,1,3,4,2,5,6,7,8,9,10,11,12,13,20,1,1,6,11,0,3,47,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],0,[3,3],[4,4],[2,2],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[1,1],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,0,[[],3],[[],4],[[],2],[[],7],[[],8],[[],1],[-1,[[15,[3]]],16],[-1,[[15,[4]]],16],[-1,[[15,[2]]],16],[-1,[[15,[5]]],16],[-1,[[15,[6]]],16],[-1,[[15,[7]]],16],[-1,[[15,[8]]],16],[-1,[[15,[9]]],16],[-1,[[15,[10]]],16],[-1,[[15,[11]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[3,3],17],[[4,4],17],[[2,2],17],[[5,5],17],[[6,6],17],[[7,7],17],[[8,8],17],[[9,9],17],[[10,10],17],[[11,11],17],[[13,13],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[3,18],19],[[4,18],19],[[2,18],19],[[5,18],19],[[6,18],19],[[7,18],19],[[8,18],19],[[9,18],19],[[10,18],19],[[11,18],19],[[12,18],19],[[12,18],19],[[13,18],19],[[20,18],19],[[1,18],19],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,12],[22,12],[23,12],[24,12],[25,12],[26,12],[27,12],[-1,-1,[]],[28,13],[-1,-1,[]],[-1,-1,[]],[[-1,-2],29,[30,31],32],[[-1,-2],29,[30,31],32],[[-1,-2],29,[30,31],32],[[4,-1],14,33],[[7,-1],14,33],[[8,-1],14,33],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,14],[1,14],[[1,[35,[34]]],14],[[[35,[36]],[35,[36]]],13],[[37,38,36],20],[[],1],0,0,0,0,[[20,37,39,38,13],14],[1,14],[1,14],[[20,40,34],14],0,0,0,[[1,34],14],[[3,-1],15,41],[[4,-1],15,41],[[2,-1],15,41],[[5,-1],15,41],[[6,-1],15,41],[[7,-1],15,41],[[8,-1],15,41],[[9,-1],15,41],[[10,-1],15,41],[[11,-1],15,41],0,0,0,[[-1,-2,[35,[36]],[35,[36]],17],[[15,[28,12]]],42,43],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,44,[]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[[1,-1,-2,[35,[34]]],[[15,[14,12]]],42,43],0,0,[[-1,-2,3,17],[[15,[13,12]]],42,43],0,0,0],"c":[],"p":[[3,"PerspCameraControl",0],[4,"Camera",0],[3,"VizConfig",0],[4,"InGameRenderMode",0],[3,"LookAtCamera",0],[3,"OrthoCamera",0],[4,"ObjectCull",0],[4,"SurfaceMode",0],[4,"Element",0],[3,"Point",0],[3,"Line",0],[4,"VizError",0],[3,"VizRenderData",0],[15,"tuple"],[4,"Result",313],[8,"Deserializer",314],[15,"bool"],[3,"Formatter",315],[6,"Result",315],[3,"VizRenderer",0],[3,"ValueTypeError",316],[4,"DataTypeError",316],[4,"LayoutLookupError",317],[4,"MemoryError",318],[4,"F3DError",319],[4,"SM64DataError",320],[4,"DataError",321],[3,"F3DRenderData",322],[15,"u64"],[8,"Hash",323],[8,"Sized",324],[8,"BuildHasher",323],[8,"Hasher",323],[15,"f32"],[15,"array"],[15,"u32"],[3,"Device",325],[4,"TextureFormat",326],[3,"Queue",325],[3,"RenderPass",325],[8,"Serializer",327],[8,"MemoryLayout",328],[8,"MemoryRead",329],[3,"String",330],[3,"TypeId",331],[4,"Option",332],[13,"MasterListDiscrepancy",311],[13,"InvalidGfxTree",311]]},\
"wafel_viz_demo":{"doc":"","t":"RRDLLMLLLLMMMLMFLALMMLLLLLMLALDLLMLLLMLLMLLLLLLMLLIFKFFKKK","n":["SAVE_STATE_DUR","SAVE_STATE_FREQ","VizApp","borrow","borrow_mut","camera_control","downcast","fmt","frame_advance","from","game","held_keys","inputs","into","last_update","main","new","remote_dll","render","save_states","time_since_game_advance","try_from","try_into","type_id","upcast","update","viz_renderer","vzip","window","window_event","RemoteDllApp","borrow","borrow_mut","camera_control","downcast","fmt","from","held_keys","into","new","remote_dll","render","try_from","try_into","type_id","upcast","update","viz_renderer","vzip","window_event","App","handle_err","new","open_window_and_run","open_window_and_run_impl","render","update","window_event"],"q":[[0,"wafel_viz_demo"],[30,"wafel_viz_demo::remote_dll"],[50,"wafel_viz_demo::window"],[58,"core::fmt"],[59,"core::fmt"],[60,"core::result"],[61,"wgpu"],[62,"wgpu_types"],[63,"wgpu"],[64,"core::option"],[65,"winit::event"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,17,0,0,17,17,17],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[[1,2],3],[1,[[6,[4,5]]]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],0,[[],4],[[7,8],[[6,[1,5]]]],0,[[1,7,9,10,8,[12,[11]]],[[6,[4,5]]]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,13,[]],[-1,[[14,[-2]]],[],[]],[1,[[6,[4,5]]]],0,[-1,-2,[],[]],0,[[1,15],[[6,[4,5]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[[16,2],3],[-1,-1,[]],0,[-1,-2,[],[]],[[7,8],[[6,[16,5]]]],0,[[16,7,9,10,8,[12,[11]]],[[6,[4,5]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,13,[]],[-1,[[14,[-2]]],[],[]],[16,[[6,[4,5]]]],0,[-1,-2,[],[]],[[16,15],[[6,[4,5]]]],0,[[[6,[-1,5]]],-1,[]],[[7,8],[[6,[-1,5]]],[]],[[],4],[[],4],[[-1,7,9,10,8,[12,[11]]],[[6,[4,5]]],[]],[-1,[[6,[4,5]]],[]],[[-1,15],[[6,[4,5]]],[]]],"c":[],"p":[[3,"VizApp",0],[3,"Formatter",58],[6,"Result",58],[15,"tuple"],[4,"Error",59],[4,"Result",60],[3,"Device",61],[4,"TextureFormat",62],[3,"Queue",61],[3,"TextureView",61],[15,"u32"],[15,"array"],[3,"TypeId",63],[4,"Option",64],[4,"WindowEvent",65],[3,"RemoteDllApp",30],[8,"App",50]]},\
"wafel_viz_tests":{"doc":"","t":"AFAAADDLLLLMLLLLLLLLLLLLLMMLLLMLLMMLLLLLLLLLLDDLLLLMLLLLMLMLLLLLLLLLLLLLLLMMMMMMLLMLLLLLLLLMLLFDFLLLLMLLLLLMLMLLMMFFLLLLFLL","n":["game_runner","main","renderer","run_tests","viz_tests","Context","GameRunner","borrow","borrow","borrow_mut","borrow_mut","ctx","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","game","game_version","get_frame","init","init","inputs","into","into","m64","power_on","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Renderer","SizedRenderer","borrow","borrow","borrow_mut","borrow_mut","depth_texture","deref","deref","deref_mut","deref_mut","device","device_info","device_info","downcast","downcast","drop","drop","fmt","fmt","from","from","init","init","into","into","new","new","new_async","output_buffer","output_format","output_size","output_texture","padded_bytes_per_row","queue","render","render","sized","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","viz_renderer","vzip","vzip","run_tests","TestCase","all","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","downcast","drop","fmt","frame","from","game_version","init","into","m64","name","reg","res","to_owned","try_from","try_into","type_id","u120","upcast","vzip"],"q":[[0,"wafel_viz_tests"],[5,"wafel_viz_tests::game_runner"],[45,"wafel_viz_tests::renderer"],[94,"wafel_viz_tests::run_tests"],[95,"wafel_viz_tests::viz_tests"],[123,"core::error"],[124,"alloc::boxed"],[125,"core::result"],[126,"core::fmt"],[127,"core::fmt"],[128,"core::any"],[129,"core::option"],[130,"wgpu"],[131,"wafel_viz::config"],[132,"image::buffer_"],[133,"wgpu"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,5,9,5,9,5,5,5,9,5,9,5,9,5,9,5,9,5,9,9,9,5,5,9,9,5,9,9,9,5,9,5,9,5,9,5,9,5,9,0,0,15,16,15,16,16,15,16,15,16,15,15,15,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,16,16,16,16,15,15,16,15,15,16,15,16,15,16,15,16,16,15,16,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,22,22,22,22,0,22,22],"f":[0,[[],[[4,[1,[3,[2]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[6,1],[[5,7],8],[[9,7],8],[-1,-1,[]],[-1,-1,[]],0,0,[[5,10,10,11],12],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],0,[15,10],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[6,1],[[15,7],8],[[16,7],8],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[],15],[[17,[18,[11]]],16],[[],15],0,0,0,0,0,0,[[15,12,19],20],[[16,17,21,12,19],20],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[22]]],[[4,[1,[3,[2]]]]]],0,[[],[[23,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],1,[],[]],0,[6,-1,[]],[6,-1,[]],[-1,-2,[],[]],[6,1],[[22,7],8],0,[-1,-1,[]],0,[[],6],[-1,-2,[],[]],0,0,[[[23,[22]]],1],[[[23,[22]]],1],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[[[23,[22]]],1],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[8,"Error",123],[3,"Box",124],[4,"Result",125],[3,"GameRunner",5],[15,"usize"],[3,"Formatter",126],[6,"Result",126],[3,"Context",5],[15,"str"],[15,"u32"],[3,"Game",127],[3,"TypeId",128],[4,"Option",129],[3,"Renderer",45],[3,"SizedRenderer",45],[3,"Device",130],[15,"array"],[3,"VizConfig",131],[6,"RgbImage",132],[3,"Queue",130],[3,"TestCase",95],[3,"Vec",133]]},\
"wafel_window":{"doc":"A crate for creating a window and rendering with wgpu, â€¦","t":"DILLLLLKLLLLKLKLKLLLLLLLKLLLFKLLLLLLLLLLLLLL","n":["Config","WindowEnv","always_on_top","borrow","borrow_mut","clone","clone_into","config","default","deref","deref_mut","downcast","draw_viz","drop","egui_ctx","fmt","fps","from","hot_reload_subscriber","icon","init","into","log_file_path","maximized","mspf","new","relative_log_file_path","root_dir","run","take_recent_panic_details","title","to_owned","try_from","try_into","type_id","upcast","with_always_on_top","with_hot_reload_observer","with_icon","with_icon_from_ico","with_maximized","with_relative_log_file_path","with_root_dir","with_title"],"q":[[0,"wafel_window"],[44,"wafel_viz::render_data"],[45,"egui::context"],[46,"core::fmt"],[47,"core::fmt"],[48,"winit::icon"],[49,"std::path"],[50,"std::path"],[51,"alloc::string"],[52,"core::result"],[53,"core::any"],[54,"core::convert"],[55,"core::convert"]],"d":["Configuration for the window and application environment.","Trait defining the interaction between a windowed â€¦","Returns whether the window should stay on top of other â€¦","","","","","The config that was used when running the application.","","","","","Adds a wafel_viz visualization to the window.","","The egui context.","","A recent fps measurement.","Returns the argument unchanged.","Returns the hot reload subscriber if set.","Returns the window icon (Windows only).","","Calls <code>U::from(self)</code>.","Returns the absolute log file path.","Returns whether the window should start maximized.","A recent mspf measurement.","Returns the default configuration.","Gets the log file path relative to the root directory.","Returns the directory that configuration and log files â€¦","Initializes logging, opens a window and runs the â€¦","Return details of the most recent panic caught by the â€¦","Returns the window title.","","","","","","Sets whether the window should stay on top of other â€¦","If using hot reloading, this function should be called â€¦","Sets the window icon (Windows only).","Sets the window icon from a .ico file (Windows only).","Sets whether the window should start maximized.","Sets the log file path relative to the root directory.","Sets the directory that configuration and log files should â€¦","Sets the window title."],"i":[0,0,1,1,1,1,1,23,1,1,1,1,23,1,23,1,23,1,1,1,1,1,1,1,23,1,1,1,0,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],3,[],[]],[-1,1,[]],[[],1],[4,-1,[]],[4,-1,[]],[-1,-2,[],[]],[[-1,5],3,[]],[4,3],[-1,6,[]],[[1,7],8],[-1,9,[]],[-1,-1,[]],[1,10],[1,[[10,[11]]]],[[],4],[-1,-2,[],[]],[1,12],[1,2],[-1,9,[]],[[],1],[1,13],[1,13],[[1,-1],3,14],[-1,[[10,[15]]],[]],[1,16],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,[[10,[-2]]],[],[]],[[1,2],1],[1,1],[[1,11],1],[[1,[20,[19]]],1],[[1,2],1],[[1,-1],1,[[21,[13]]]],[[1,-1],1,[[21,[13]]]],[[1,-1],1,[[22,[15]]]]],"c":[],"p":[[3,"Config",0],[15,"bool"],[15,"tuple"],[15,"usize"],[3,"VizRenderData",44],[3,"Context",45],[3,"Formatter",46],[6,"Result",46],[15,"f32"],[4,"Option",47],[3,"Icon",48],[3,"PathBuf",49],[3,"Path",49],[8,"FnMut",50],[3,"String",51],[15,"str"],[4,"Result",52],[3,"TypeId",53],[15,"u8"],[15,"slice"],[8,"AsRef",54],[8,"Into",54],[8,"WindowEnv",0]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
